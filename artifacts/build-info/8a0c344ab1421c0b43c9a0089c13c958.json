{
	"id": "8a0c344ab1421c0b43c9a0089c13c958",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"./Ownable.sol\";\nimport \"./SafeMath.sol\";\nimport \"./ReentrancyGuard.sol\";\nimport \"./interfaces/IBEP20.sol\";\nimport \"./SafeBEP20.sol\";\nimport \"./interfaces/IMasterChef.sol\";\n\n/// @notice The (older) MasterChef contract gives out a constant number of CAKE tokens per block.\n/// It is the only address with minting rights for CAKE.\n/// The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token\n/// that is deposited into the MasterChef V1 (MCV1) contract.\n/// The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives.\ncontract MasterChefV2 is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeBEP20 for IBEP20;\n\n    /// @notice Info of each MCV2 user.\n    /// `amount` LP token amount the user has provided.\n    /// `rewardDebt` Used to calculate the correct amount of rewards. See explanation below.\n    ///\n    /// We do some fancy math here. Basically, any point in time, the amount of CAKEs\n    /// entitled to a user but is pending to be distributed is:\n    ///\n    ///   pending reward = (user share * pool.accCakePerShare) - user.rewardDebt\n    ///\n    ///   Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n    ///   1. The pool's `accCakePerShare` (and `lastRewardBlock`) gets updated.\n    ///   2. User receives the pending reward sent to his/her address.\n    ///   3. User's `amount` gets updated. Pool's `totalBoostedShare` gets updated.\n    ///   4. User's `rewardDebt` gets updated.\n    struct UserInfo {\n        uint256 amount;\n        uint256 rewardDebt;\n        uint256 boostMultiplier;\n    }\n\n    /// @notice Info of each MCV2 pool.\n    /// `allocPoint` The amount of allocation points assigned to the pool.\n    ///     Also known as the amount of \"multipliers\". Combined with `totalXAllocPoint`, it defines the % of\n    ///     CAKE rewards each pool gets.\n    /// `accCakePerShare` Accumulated CAKEs per share, times 1e12.\n    /// `lastRewardBlock` Last block number that pool update action is executed.\n    /// `isRegular` The flag to set pool is regular or special. See below:\n    ///     In MasterChef V2 farms are \"regular pools\". \"special pools\", which use a different sets of\n    ///     `allocPoint` and their own `totalSpecialAllocPoint` are designed to handle the distribution of\n    ///     the CAKE rewards to all the PancakeSwap products.\n    /// `totalBoostedShare` The total amount of user shares in each pool. After considering the share boosts.\n    struct PoolInfo {\n        uint256 accCakePerShare;\n        uint256 lastRewardBlock;\n        uint256 allocPoint;\n        uint256 totalBoostedShare;\n        bool isRegular;\n    }\n\n    /// @notice Address of MCV1 contract.\n    IMasterChef public immutable MASTER_CHEF;\n    /// @notice Address of CAKE contract.\n    IBEP20 public immutable CAKE;\n\n    /// @notice The only address can withdraw all the burn CAKE.\n    address public burnAdmin;\n    /// @notice The contract handles the share boosts.\n    address public boostContract;\n\n    /// @notice Info of each MCV2 pool.\n    PoolInfo[] public poolInfo;\n    /// @notice Address of the LP token for each MCV2 pool.\n    IBEP20[] public lpToken;\n\n    /// @notice Info of each pool user.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    /// @notice The whitelist of addresses allowed to deposit in special pools.\n    mapping(address => bool) public whiteList;\n\n    /// @notice The pool id of the MCV2 mock token pool in MCV1.\n    uint256 public immutable MASTER_PID;\n    /// @notice Total regular allocation points. Must be the sum of all regular pools' allocation points.\n    uint256 public totalRegularAllocPoint;\n    /// @notice Total special allocation points. Must be the sum of all special pools' allocation points.\n    uint256 public totalSpecialAllocPoint;\n    ///  @notice 40 cakes per block in MCV1\n    uint256 public constant MASTERCHEF_CAKE_PER_BLOCK = 40 * 1e18;\n    uint256 public constant ACC_CAKE_PRECISION = 1e18;\n\n    /// @notice Basic boost factor, none boosted user's boost factor\n    uint256 public constant BOOST_PRECISION = 100 * 1e10;\n    /// @notice Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION\n    uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10;\n    /// @notice total cake rate = toBurn + toRegular + toSpecial\n    uint256 public constant CAKE_RATE_TOTAL_PRECISION = 1e12;\n    /// @notice The last block number of CAKE burn action being executed.\n    /// @notice CAKE distribute % for burn\n    uint256 public cakeRateToBurn = 643750000000;\n    /// @notice CAKE distribute % for regular farm pool\n    uint256 public cakeRateToRegularFarm = 62847222222;\n    /// @notice CAKE distribute % for special pools\n    uint256 public cakeRateToSpecialFarm = 293402777778;\n\n    uint256 public lastBurnedBlock;\n\n    event Init();\n    event AddPool(uint256 indexed pid, uint256 allocPoint, IBEP20 indexed lpToken, bool isRegular);\n    event SetPool(uint256 indexed pid, uint256 allocPoint);\n    event UpdatePool(uint256 indexed pid, uint256 lastRewardBlock, uint256 lpSupply, uint256 accCakePerShare);\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    event UpdateCakeRate(uint256 burnRate, uint256 regularFarmRate, uint256 specialFarmRate);\n    event UpdateBurnAdmin(address indexed oldAdmin, address indexed newAdmin);\n    event UpdateWhiteList(address indexed user, bool isValid);\n    event UpdateBoostContract(address indexed boostContract);\n    event UpdateBoostMultiplier(address indexed user, uint256 pid, uint256 oldMultiplier, uint256 newMultiplier);\n\n    /// @param _MASTER_CHEF The PancakeSwap MCV1 contract address.\n    /// @param _CAKE The CAKE token contract address.\n    /// @param _MASTER_PID The pool id of the dummy pool on the MCV1.\n    /// @param _burnAdmin The address of burn admin.\n    constructor(\n        IMasterChef _MASTER_CHEF,\n        IBEP20 _CAKE,\n        uint256 _MASTER_PID,\n        address _burnAdmin\n    ) public {\n        MASTER_CHEF = _MASTER_CHEF;\n        CAKE = _CAKE;\n        MASTER_PID = _MASTER_PID;\n        burnAdmin = _burnAdmin;\n    }\n\n    /**\n     * @dev Throws if caller is not the boost contract.\n     */\n    modifier onlyBoostContract() {\n        require(boostContract == msg.sender, \"Ownable: caller is not the boost contract\");\n        _;\n    }\n\n    /// @notice Deposits a dummy token to `MASTER_CHEF` MCV1. This is required because MCV1 holds the minting permission of CAKE.\n    /// It will transfer all the `dummyToken` in the tx sender address.\n    /// The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint.\n    /// @param dummyToken The address of the BEP-20 token to be deposited into MCV1.\n    function init(IBEP20 dummyToken) external onlyOwner {\n        uint256 balance = dummyToken.balanceOf(msg.sender);\n        require(balance != 0, \"MasterChefV2: Balance must exceed 0\");\n        dummyToken.safeTransferFrom(msg.sender, address(this), balance);\n        dummyToken.approve(address(MASTER_CHEF), balance);\n        MASTER_CHEF.deposit(MASTER_PID, balance);\n        // MCV2 start to earn CAKE reward from current block in MCV1 pool\n        lastBurnedBlock = block.number;\n        emit Init();\n    }\n\n    /// @notice Returns the number of MCV2 pools.\n    function poolLength() public view returns (uint256 pools) {\n        pools = poolInfo.length;\n    }\n\n    /// @notice Add a new pool. Can only be called by the owner.\n    /// DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    /// @param _allocPoint Number of allocation points for the new pool.\n    /// @param _lpToken Address of the LP BEP-20 token.\n    /// @param _isRegular Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\n    /// only for CAKE distributions within PancakeSwap products.\n    function add(\n        uint256 _allocPoint,\n        IBEP20 _lpToken,\n        bool _isRegular,\n        bool _withUpdate\n    ) external onlyOwner {\n        require(_lpToken.balanceOf(address(this)) >= 0, \"None BEP20 tokens\");\n        // stake CAKE token will cause staked token and reward token mixed up,\n        // may cause staked tokens withdraw as reward token,never do it.\n        require(_lpToken != CAKE, \"CAKE token can't be added to farm pools\");\n\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n\n        if (_isRegular) {\n            totalRegularAllocPoint = totalRegularAllocPoint.add(_allocPoint);\n        } else {\n            totalSpecialAllocPoint = totalSpecialAllocPoint.add(_allocPoint);\n        }\n        lpToken.push(_lpToken);\n\n        poolInfo.push(\n            PoolInfo({\n        allocPoint: _allocPoint,\n        lastRewardBlock: block.number,\n        accCakePerShare: 0,\n        isRegular: _isRegular,\n        totalBoostedShare: 0\n        })\n        );\n        emit AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular);\n    }\n\n    /// @notice Update the given pool's CAKE allocation point. Can only be called by the owner.\n    /// @param _pid The id of the pool. See `poolInfo`.\n    /// @param _allocPoint New number of allocation points for the pool.\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\n    function set(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external onlyOwner {\n        // No matter _withUpdate is true or false, we need to execute updatePool once before set the pool parameters.\n        updatePool(_pid);\n\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n\n        if (poolInfo[_pid].isRegular) {\n            totalRegularAllocPoint = totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        } else {\n            totalSpecialAllocPoint = totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        }\n        poolInfo[_pid].allocPoint = _allocPoint;\n        emit SetPool(_pid, _allocPoint);\n    }\n\n    /// @notice View function for checking pending CAKE rewards.\n    /// @param _pid The id of the pool. See `poolInfo`.\n    /// @param _user Address of the user.\n    function pendingCake(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo memory pool = poolInfo[_pid];\n        UserInfo memory user = userInfo[_pid][_user];\n        uint256 accCakePerShare = pool.accCakePerShare;\n        uint256 lpSupply = pool.totalBoostedShare;\n\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = block.number.sub(pool.lastRewardBlock);\n\n            uint256 cakeReward = multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(\n                (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint)\n            );\n            accCakePerShare = accCakePerShare.add(cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply));\n        }\n\n        uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION);\n        return boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION).sub(user.rewardDebt);\n    }\n\n    /// @notice Update cake reward for all the active pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            PoolInfo memory pool = poolInfo[pid];\n            if (pool.allocPoint != 0) {\n                updatePool(pid);\n            }\n        }\n    }\n\n    /// @notice Calculates and returns the `amount` of CAKE per block.\n    /// @param _isRegular If the pool belongs to regular or special.\n    function cakePerBlock(bool _isRegular) public view returns (uint256 amount) {\n        if (_isRegular) {\n            amount = MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm).div(CAKE_RATE_TOTAL_PRECISION);\n        } else {\n            amount = MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm).div(CAKE_RATE_TOTAL_PRECISION);\n        }\n    }\n\n    /// @notice Calculates and returns the `amount` of CAKE per block to burn.\n    function cakePerBlockToBurn() public view returns (uint256 amount) {\n        amount = MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn).div(CAKE_RATE_TOTAL_PRECISION);\n    }\n\n    /// @notice Update reward variables for the given pool.\n    /// @param _pid The id of the pool. See `poolInfo`.\n    /// @return pool Returns the pool that was updated.\n    function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {\n        pool = poolInfo[_pid];\n        if (block.number > pool.lastRewardBlock) {\n            uint256 lpSupply = pool.totalBoostedShare;\n            uint256 totalAllocPoint = (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint);\n\n            if (lpSupply > 0 && totalAllocPoint > 0) {\n                uint256 multiplier = block.number.sub(pool.lastRewardBlock);\n                uint256 cakeReward = multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(\n                    totalAllocPoint\n                );\n                pool.accCakePerShare = pool.accCakePerShare.add((cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply)));\n            }\n            pool.lastRewardBlock = block.number;\n            poolInfo[_pid] = pool;\n            emit UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accCakePerShare);\n        }\n    }\n\n    /// @notice Deposit LP tokens to pool.\n    /// @param _pid The id of the pool. See `poolInfo`.\n    /// @param _amount Amount of LP tokens to deposit.\n    function deposit(uint256 _pid, uint256 _amount) external nonReentrant {\n        PoolInfo memory pool = updatePool(_pid);\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(\n            pool.isRegular || whiteList[msg.sender],\n            \"MasterChefV2: The address is not available to deposit in this pool\"\n        );\n\n        uint256 multiplier = getBoostMultiplier(msg.sender, _pid);\n\n        if (user.amount > 0) {\n            settlePendingCake(msg.sender, _pid, multiplier);\n        }\n\n        if (_amount > 0) {\n            uint256 before = lpToken[_pid].balanceOf(address(this));\n            lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount);\n            _amount = lpToken[_pid].balanceOf(address(this)).sub(before);\n            user.amount = user.amount.add(_amount);\n\n            // Update total boosted share.\n            pool.totalBoostedShare = pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION));\n        }\n\n        user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(\n            ACC_CAKE_PRECISION\n        );\n        poolInfo[_pid] = pool;\n\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    /// @notice Withdraw LP tokens from pool.\n    /// @param _pid The id of the pool. See `poolInfo`.\n    /// @param _amount Amount of LP tokens to withdraw.\n    function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {\n        PoolInfo memory pool = updatePool(_pid);\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(user.amount >= _amount, \"withdraw: Insufficient\");\n\n        uint256 multiplier = getBoostMultiplier(msg.sender, _pid);\n\n        settlePendingCake(msg.sender, _pid, multiplier);\n\n        if (_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            lpToken[_pid].safeTransfer(msg.sender, _amount);\n        }\n\n        user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(\n            ACC_CAKE_PRECISION\n        );\n        poolInfo[_pid].totalBoostedShare = poolInfo[_pid].totalBoostedShare.sub(\n            _amount.mul(multiplier).div(BOOST_PRECISION)\n        );\n\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    /// @notice Harvests CAKE from `MASTER_CHEF` MCV1 and pool `MASTER_PID` to MCV2.\n    function harvestFromMasterChef() public {\n        MASTER_CHEF.deposit(MASTER_PID, 0);\n    }\n\n    /// @notice Withdraw without caring about the rewards. EMERGENCY ONLY.\n    /// @param _pid The id of the pool. See `poolInfo`.\n    function emergencyWithdraw(uint256 _pid) external nonReentrant {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        uint256 amount = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        uint256 boostedAmount = amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION);\n        pool.totalBoostedShare = pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0;\n\n        // Note: transfer can fail or succeed if `amount` is zero.\n        lpToken[_pid].safeTransfer(msg.sender, amount);\n        emit EmergencyWithdraw(msg.sender, _pid, amount);\n    }\n\n    /// @notice Send CAKE pending for burn to `burnAdmin`.\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\n    function burnCake(bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n\n        uint256 multiplier = block.number.sub(lastBurnedBlock);\n        uint256 pendingCakeToBurn = multiplier.mul(cakePerBlockToBurn());\n\n        // SafeTransfer CAKE\n        _safeTransfer(burnAdmin, pendingCakeToBurn);\n        lastBurnedBlock = block.number;\n    }\n\n    /// @notice Update the % of CAKE distributions for burn, regular pools and special pools.\n    /// @param _burnRate The % of CAKE to burn each block.\n    /// @param _regularFarmRate The % of CAKE to regular pools each block.\n    /// @param _specialFarmRate The % of CAKE to special pools each block.\n    /// @param _withUpdate Whether call \"massUpdatePools\" operation.\n    function updateCakeRate(\n        uint256 _burnRate,\n        uint256 _regularFarmRate,\n        uint256 _specialFarmRate,\n        bool _withUpdate\n    ) external onlyOwner {\n        require(\n            _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0,\n            \"MasterChefV2: Cake rate must be greater than 0\"\n        );\n        require(\n            _burnRate.add(_regularFarmRate).add(_specialFarmRate) == CAKE_RATE_TOTAL_PRECISION,\n            \"MasterChefV2: Total rate must be 1e12\"\n        );\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        // burn cake base on old burn cake rate\n        burnCake(false);\n\n        cakeRateToBurn = _burnRate;\n        cakeRateToRegularFarm = _regularFarmRate;\n        cakeRateToSpecialFarm = _specialFarmRate;\n\n        emit UpdateCakeRate(_burnRate, _regularFarmRate, _specialFarmRate);\n    }\n\n    /// @notice Update burn admin address.\n    /// @param _newAdmin The new burn admin address.\n    function updateBurnAdmin(address _newAdmin) external onlyOwner {\n        require(_newAdmin != address(0), \"MasterChefV2: Burn admin address must be valid\");\n        require(_newAdmin != burnAdmin, \"MasterChefV2: Burn admin address is the same with current address\");\n        address _oldAdmin = burnAdmin;\n        burnAdmin = _newAdmin;\n        emit UpdateBurnAdmin(_oldAdmin, _newAdmin);\n    }\n\n    /// @notice Update whitelisted addresses for special pools.\n    /// @param _user The address to be updated.\n    /// @param _isValid The flag for valid or invalid.\n    function updateWhiteList(address _user, bool _isValid) external onlyOwner {\n        require(_user != address(0), \"MasterChefV2: The white list address must be valid\");\n\n        whiteList[_user] = _isValid;\n        emit UpdateWhiteList(_user, _isValid);\n    }\n\n    /// @notice Update boost contract address and max boost factor.\n    /// @param _newBoostContract The new address for handling all the share boosts.\n    function updateBoostContract(address _newBoostContract) external onlyOwner {\n        require(\n            _newBoostContract != address(0) && _newBoostContract != boostContract,\n            \"MasterChefV2: New boost contract address must be valid\"\n        );\n\n        boostContract = _newBoostContract;\n        emit UpdateBoostContract(_newBoostContract);\n    }\n\n    /// @notice Update user boost factor.\n    /// @param _user The user address for boost factor updates.\n    /// @param _pid The pool id for the boost factor updates.\n    /// @param _newMultiplier New boost multiplier.\n    function updateBoostMultiplier(\n        address _user,\n        uint256 _pid,\n        uint256 _newMultiplier\n    ) external onlyBoostContract nonReentrant {\n        require(_user != address(0), \"MasterChefV2: The user address must be valid\");\n        require(poolInfo[_pid].isRegular, \"MasterChefV2: Only regular farm could be boosted\");\n        require(\n            _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION,\n            \"MasterChefV2: Invalid new boost multiplier\"\n        );\n\n        PoolInfo memory pool = updatePool(_pid);\n        UserInfo storage user = userInfo[_pid][_user];\n\n        uint256 prevMultiplier = getBoostMultiplier(_user, _pid);\n        settlePendingCake(_user, _pid, prevMultiplier);\n\n        user.rewardDebt = user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(\n            ACC_CAKE_PRECISION\n        );\n        pool.totalBoostedShare = pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(\n            user.amount.mul(_newMultiplier).div(BOOST_PRECISION)\n        );\n        poolInfo[_pid] = pool;\n        userInfo[_pid][_user].boostMultiplier = _newMultiplier;\n\n        emit UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier);\n    }\n\n    /// @notice Get user boost multiplier for specific pool id.\n    /// @param _user The user address.\n    /// @param _pid The pool id.\n    function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {\n        uint256 multiplier = userInfo[_pid][_user].boostMultiplier;\n        return multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION;\n    }\n\n    /// @notice Settles, distribute the pending CAKE rewards for given user.\n    /// @param _user The user address for settling rewards.\n    /// @param _pid The pool id.\n    /// @param _boostMultiplier The user boost multiplier in specific pool id.\n    function settlePendingCake(\n        address _user,\n        uint256 _pid,\n        uint256 _boostMultiplier\n    ) internal {\n        UserInfo memory user = userInfo[_pid][_user];\n\n        uint256 boostedAmount = user.amount.mul(_boostMultiplier).div(BOOST_PRECISION);\n        uint256 accCake = boostedAmount.mul(poolInfo[_pid].accCakePerShare).div(ACC_CAKE_PRECISION);\n        uint256 pending = accCake.sub(user.rewardDebt);\n        // SafeTransfer CAKE\n        _safeTransfer(_user, pending);\n    }\n\n    /// @notice Safe Transfer CAKE.\n    /// @param _to The CAKE receiver address.\n    /// @param _amount transfer CAKE amounts.\n    function _safeTransfer(address _to, uint256 _amount) internal {\n        if (_amount > 0) {\n            // Check whether MCV2 has enough CAKE. If not, harvest from MCV1.\n            if (CAKE.balanceOf(address(this)) < _amount) {\n                harvestFromMasterChef();\n            }\n            uint256 balance = CAKE.balanceOf(address(this));\n            if (balance < _amount) {\n                _amount = balance;\n            }\n            CAKE.safeTransfer(_to, _amount);\n        }\n    }\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\ninterface IMasterChef {\n    function deposit(uint256 _pid, uint256 _amount) external;\n\n    function withdraw(uint256 _pid, uint256 _amount) external;\n\n    function enterStaking(uint256 _amount) external;\n\n    function leaveStaking(uint256 _amount) external;\n\n    function pendingCake(uint256 _pid, address _user) external view returns (uint256);\n\n    function userInfo(uint256 _pid, address _user) external view returns (uint256, uint256);\n\n    function emergencyWithdraw(uint256 _pid) external;\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./interfaces/IBEP20.sol\";\nimport \"./Address.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @title SafeBEP20\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeBEP20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IBEP20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IBEP20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n   * {IBEP20-approve}, and its usage is discouraged.\n   *\n   * Whenever possible, use {safeIncreaseAllowance} and\n   * {safeDecreaseAllowance} instead.\n   */\n    function safeApprove(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function safeIncreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\n        );\n    }\n\n    function safeDecreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance =\n        token.allowance(address(this), spender).sub(\n            value,\n            \"SafeBEP20: decreased allowance below zero\"\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\n        );\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\n   * @param token The token targeted by the call.\n   * @param data The call data (encoded using abi.encode or one of its variants).\n   */\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata =\n        address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeBEP20: BEP20 operation did not succeed\"\n            );\n        }\n    }\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n   */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n   */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n   */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n   */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n   */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n   */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n    function allowance(address _owner, address spender)\n    external\n    view\n    returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\ncontract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"Users/leilei/Downloads/MasterChefV2/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/MasterChefV2/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":126:5880  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":126:5880  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220870529a0261d4975db2d12827c62632d72218d6bf11020f49e25da5765d72b5c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220870529a0261d4975db2d12827c62632d72218d6bf11020f49e25da5765d72b5c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 SDIV 0x29 LOG0 0x26 SAR 0x49 PUSH22 0xDB2D12827C62632D72218D6BF11020F49E25DA5765D7 0x2B 0x5C PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "126:5754:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220870529a0261d4975db2d12827c62632d72218d6bf11020f49e25da5765d72b5c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 SDIV 0x29 LOG0 0x26 SAR 0x49 PUSH22 0xDB2D12827C62632D72218D6BF11020F49E25DA5765D7 0x2B 0x5C PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "126:5754:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220870529a0261d4975db2d12827c62632d72218d6bf11020f49e25da5765d72b5c64736f6c634300060c0033",
									".code": [
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/Address.sol\":{\"keccak256\":\"0x42b040c5389fef91ea8637793e754d7c059a718275c9c12d6e21204b2a9b46e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d192b621b224665760aa1ac8e9ac75c576f1f0480c889001eadd9c56b742928d\",\"dweb:/ipfs/QmfZbQkahUYPjhKXMLjKQmqcTN7hWR8GiHqNqXCy7t43Tv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/Context.sol\":{\"keccak256\":\"0xb6232cf1921a36b072814b88b8508f2cf9890919fd9e678f1bdade789a0620cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e8724a72d8e6c11ebd6ccb727e01ee7fa68895ece92207c08dba57be21a8088\",\"dweb:/ipfs/QmaVZaBFmxmid2FYb6ERk5kPoNUij8xqyErUxDwhTLSryW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol": {
				"MasterChefV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IMasterChef",
									"name": "_MASTER_CHEF",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_CAKE",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_MASTER_PID",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_burnAdmin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "contract IBEP20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isRegular",
									"type": "bool"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Init",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								}
							],
							"name": "SetPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "boostContract",
									"type": "address"
								}
							],
							"name": "UpdateBoostContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldMultiplier",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMultiplier",
									"type": "uint256"
								}
							],
							"name": "UpdateBoostMultiplier",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAdmin",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "UpdateBurnAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "regularFarmRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "specialFarmRate",
									"type": "uint256"
								}
							],
							"name": "UpdateCakeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lpSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "accCakePerShare",
									"type": "uint256"
								}
							],
							"name": "UpdatePool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"name": "UpdateWhiteList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_CAKE_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOOST_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CAKE",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "CAKE_RATE_TOTAL_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MASTERCHEF_CAKE_PER_BLOCK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MASTER_CHEF",
							"outputs": [
								{
									"internalType": "contract IMasterChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MASTER_PID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_BOOST_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isRegular",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "boostContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "burnCake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isRegular",
									"type": "bool"
								}
							],
							"name": "cakePerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cakePerBlockToBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cakeRateToBurn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cakeRateToRegularFarm",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cakeRateToSpecialFarm",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "getBoostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvestFromMasterChef",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "dummyToken",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastBurnedBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingCake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "accCakePerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBoostedShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isRegular",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pools",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRegularAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSpecialAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBoostContract",
									"type": "address"
								}
							],
							"name": "updateBoostContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newMultiplier",
									"type": "uint256"
								}
							],
							"name": "updateBoostMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAdmin",
									"type": "address"
								}
							],
							"name": "updateBurnAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_burnRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularFarmRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_specialFarmRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "updateCakeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "accCakePerShare",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastRewardBlock",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "allocPoint",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalBoostedShare",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isRegular",
											"type": "bool"
										}
									],
									"internalType": "struct MasterChefV2.PoolInfo",
									"name": "pool",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isValid",
									"type": "bool"
								}
							],
							"name": "updateWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "boostMultiplier",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"add(uint256,address,bool,bool)": {
								"params": {
									"_allocPoint": "Number of allocation points for the new pool.",
									"_isRegular": "Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are",
									"_lpToken": "Address of the LP BEP-20 token.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation. only for CAKE distributions within PancakeSwap products."
								}
							},
							"burnCake(bool)": {
								"params": {
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"cakePerBlock(bool)": {
								"params": {
									"_isRegular": "If the pool belongs to regular or special."
								}
							},
							"constructor": {
								"params": {
									"_CAKE": "The CAKE token contract address.",
									"_MASTER_CHEF": "The PancakeSwap MCV1 contract address.",
									"_MASTER_PID": "The pool id of the dummy pool on the MCV1.",
									"_burnAdmin": "The address of burn admin."
								}
							},
							"deposit(uint256,uint256)": {
								"params": {
									"_amount": "Amount of LP tokens to deposit.",
									"_pid": "The id of the pool. See `poolInfo`."
								}
							},
							"emergencyWithdraw(uint256)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`."
								}
							},
							"getBoostMultiplier(address,uint256)": {
								"params": {
									"_pid": "The pool id.",
									"_user": "The user address."
								}
							},
							"init(address)": {
								"params": {
									"dummyToken": "The address of the BEP-20 token to be deposited into MCV1."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingCake(uint256,address)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`.",
									"_user": "Address of the user."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"set(uint256,uint256,bool)": {
								"params": {
									"_allocPoint": "New number of allocation points for the pool.",
									"_pid": "The id of the pool. See `poolInfo`.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateBoostContract(address)": {
								"params": {
									"_newBoostContract": "The new address for handling all the share boosts."
								}
							},
							"updateBoostMultiplier(address,uint256,uint256)": {
								"params": {
									"_newMultiplier": "New boost multiplier.",
									"_pid": "The pool id for the boost factor updates.",
									"_user": "The user address for boost factor updates."
								}
							},
							"updateBurnAdmin(address)": {
								"params": {
									"_newAdmin": "The new burn admin address."
								}
							},
							"updateCakeRate(uint256,uint256,uint256,bool)": {
								"params": {
									"_burnRate": "The % of CAKE to burn each block.",
									"_regularFarmRate": "The % of CAKE to regular pools each block.",
									"_specialFarmRate": "The % of CAKE to special pools each block.",
									"_withUpdate": "Whether call \"massUpdatePools\" operation."
								}
							},
							"updatePool(uint256)": {
								"params": {
									"_pid": "The id of the pool. See `poolInfo`."
								},
								"returns": {
									"pool": "Returns the pool that was updated."
								}
							},
							"updateWhiteList(address,bool)": {
								"params": {
									"_isValid": "The flag for valid or invalid.",
									"_user": "The address to be updated."
								}
							},
							"withdraw(uint256,uint256)": {
								"params": {
									"_amount": "Amount of LP tokens to withdraw.",
									"_pid": "The id of the pool. See `poolInfo`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":704:23573  contract MasterChefV2 is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xe0)\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4683:4695  643750000000 */\n  0x95e27d7580\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4651:4695  uint256 public cakeRateToBurn = 643750000000 */\n  0x0a\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4796:4807  62847222222 */\n  0x0ea1fc81ce\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4757:4807  uint256 public cakeRateToRegularFarm = 62847222222 */\n  0x0b\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4904:4916  293402777778 */\n  0x44502b18b2\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4865:4916  uint256 public cakeRateToSpecialFarm = 293402777778 */\n  0x0c\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6152:6421  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":860:877  address msgSender */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":880:892  _msgSender() */\n  tag_8\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":880:890  _msgSender */\n  shl(0x20, tag_9)\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":880:892  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":860:892  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":911:920  msgSender */\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":902:908  _owner */\n  0x00\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":902:920  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":968:977  msgSender */\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":935:978  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":964:965  0 */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":935:978  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":826:985  constructor () internal {... */\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1628:1629  1 */\n  0x01\n    /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1743:1750  _status */\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1743:1765  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6314:6326  _MASTER_CHEF */\n  dup4\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6300:6326  MASTER_CHEF = _MASTER_CHEF */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6343:6348  _CAKE */\n  dup3\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6336:6348  CAKE = _CAKE */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6371:6382  _MASTER_PID */\n  dup2\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6358:6382  MASTER_PID = _MASTER_PID */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6404:6414  _burnAdmin */\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6392:6401  burnAdmin */\n  0x02\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6392:6414  burnAdmin = _burnAdmin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6152:6421  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":704:23573  contract MasterChefV2 is Ownable, ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\ntag_9:\n    /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":643:658  address payable */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":677:687  msg.sender */\n  caller\n    /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":670:687  return msg.sender */\n  swap1\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"--CODEGEN--\":5:139   */\ntag_15:\n  0x00\n    /* \"--CODEGEN--\":89:95   */\n  dup2\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":74:96   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_17\n    /* \"--CODEGEN--\":128:133   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"--CODEGEN--\":68:139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":146:310   */\ntag_19:\n  0x00\n    /* \"--CODEGEN--\":245:251   */\n  dup2\n    /* \"--CODEGEN--\":239:252   */\n  mload\n    /* \"--CODEGEN--\":230:252   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":257:305   */\n  tag_21\n    /* \"--CODEGEN--\":299:304   */\n  dup2\n    /* \"--CODEGEN--\":257:305   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"--CODEGEN--\":224:310   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":317:491   */\ntag_23:\n  0x00\n    /* \"--CODEGEN--\":421:427   */\n  dup2\n    /* \"--CODEGEN--\":415:428   */\n  mload\n    /* \"--CODEGEN--\":406:428   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":433:486   */\n  tag_25\n    /* \"--CODEGEN--\":480:485   */\n  dup2\n    /* \"--CODEGEN--\":433:486   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"--CODEGEN--\":400:491   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":498:632   */\ntag_27:\n  0x00\n    /* \"--CODEGEN--\":582:588   */\n  dup2\n    /* \"--CODEGEN--\":576:589   */\n  mload\n    /* \"--CODEGEN--\":567:589   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":594:627   */\n  tag_29\n    /* \"--CODEGEN--\":621:626   */\n  dup2\n    /* \"--CODEGEN--\":594:627   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"--CODEGEN--\":561:632   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":639:1381   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"--CODEGEN--\":840:843   */\n  0x80\n    /* \"--CODEGEN--\":828:837   */\n  dup6\n    /* \"--CODEGEN--\":819:826   */\n  dup8\n    /* \"--CODEGEN--\":815:838   */\n  sub\n    /* \"--CODEGEN--\":811:844   */\n  slt\n    /* \"--CODEGEN--\":808:810   */\n  iszero\n  tag_32\n  jumpi\n    /* \"--CODEGEN--\":857:858   */\n  0x00\n    /* \"--CODEGEN--\":854:855   */\n  dup1\n    /* \"--CODEGEN--\":847:859   */\n  revert\n    /* \"--CODEGEN--\":808:810   */\ntag_32:\n    /* \"--CODEGEN--\":892:893   */\n  0x00\n    /* \"--CODEGEN--\":909:993   */\n  tag_33\n    /* \"--CODEGEN--\":985:992   */\n  dup8\n    /* \"--CODEGEN--\":976:982   */\n  dup3\n    /* \"--CODEGEN--\":965:974   */\n  dup9\n    /* \"--CODEGEN--\":961:983   */\n  add\n    /* \"--CODEGEN--\":909:993   */\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"--CODEGEN--\":899:993   */\n  swap5\n  pop\n    /* \"--CODEGEN--\":871:999   */\n  pop\n    /* \"--CODEGEN--\":1030:1032   */\n  0x20\n    /* \"--CODEGEN--\":1048:1127   */\n  tag_34\n    /* \"--CODEGEN--\":1119:1126   */\n  dup8\n    /* \"--CODEGEN--\":1110:1116   */\n  dup3\n    /* \"--CODEGEN--\":1099:1108   */\n  dup9\n    /* \"--CODEGEN--\":1095:1117   */\n  add\n    /* \"--CODEGEN--\":1048:1127   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"--CODEGEN--\":1038:1127   */\n  swap4\n  pop\n    /* \"--CODEGEN--\":1009:1133   */\n  pop\n    /* \"--CODEGEN--\":1164:1166   */\n  0x40\n    /* \"--CODEGEN--\":1182:1246   */\n  tag_35\n    /* \"--CODEGEN--\":1238:1245   */\n  dup8\n    /* \"--CODEGEN--\":1229:1235   */\n  dup3\n    /* \"--CODEGEN--\":1218:1227   */\n  dup9\n    /* \"--CODEGEN--\":1214:1236   */\n  add\n    /* \"--CODEGEN--\":1182:1246   */\n  tag_27\n  jump\t// in\ntag_35:\n    /* \"--CODEGEN--\":1172:1246   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":1143:1252   */\n  pop\n    /* \"--CODEGEN--\":1283:1285   */\n  0x60\n    /* \"--CODEGEN--\":1301:1365   */\n  tag_36\n    /* \"--CODEGEN--\":1357:1364   */\n  dup8\n    /* \"--CODEGEN--\":1348:1354   */\n  dup3\n    /* \"--CODEGEN--\":1337:1346   */\n  dup9\n    /* \"--CODEGEN--\":1333:1355   */\n  add\n    /* \"--CODEGEN--\":1301:1365   */\n  tag_15\n  jump\t// in\ntag_36:\n    /* \"--CODEGEN--\":1291:1365   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":1262:1371   */\n  pop\n    /* \"--CODEGEN--\":802:1381   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1388:1479   */\ntag_37:\n  0x00\n    /* \"--CODEGEN--\":1450:1474   */\n  tag_39\n    /* \"--CODEGEN--\":1468:1473   */\n  dup3\n    /* \"--CODEGEN--\":1450:1474   */\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"--CODEGEN--\":1439:1474   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1433:1479   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1486:1592   */\ntag_41:\n  0x00\n    /* \"--CODEGEN--\":1563:1587   */\n  tag_43\n    /* \"--CODEGEN--\":1581:1586   */\n  dup3\n    /* \"--CODEGEN--\":1563:1587   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"--CODEGEN--\":1552:1587   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1546:1592   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1599:1710   */\ntag_44:\n  0x00\n    /* \"--CODEGEN--\":1681:1705   */\n  tag_46\n    /* \"--CODEGEN--\":1699:1704   */\n  dup3\n    /* \"--CODEGEN--\":1681:1705   */\n  tag_37\n  jump\t// in\ntag_46:\n    /* \"--CODEGEN--\":1670:1705   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1664:1710   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1717:1838   */\ntag_40:\n  0x00\n    /* \"--CODEGEN--\":1790:1832   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"--CODEGEN--\":1783:1788   */\n  dup3\n    /* \"--CODEGEN--\":1779:1833   */\n  and\n    /* \"--CODEGEN--\":1768:1833   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1762:1838   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1845:1917   */\ntag_48:\n  0x00\n    /* \"--CODEGEN--\":1907:1912   */\n  dup2\n    /* \"--CODEGEN--\":1896:1912   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":1890:1917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":1924:2041   */\ntag_18:\n    /* \"--CODEGEN--\":1993:2017   */\n  tag_51\n    /* \"--CODEGEN--\":2011:2016   */\n  dup2\n    /* \"--CODEGEN--\":1993:2017   */\n  tag_37\n  jump\t// in\ntag_51:\n    /* \"--CODEGEN--\":1986:1991   */\n  dup2\n    /* \"--CODEGEN--\":1983:2018   */\n  eq\n    /* \"--CODEGEN--\":1973:1975   */\n  tag_52\n  jumpi\n    /* \"--CODEGEN--\":2032:2033   */\n  0x00\n    /* \"--CODEGEN--\":2029:2030   */\n  dup1\n    /* \"--CODEGEN--\":2022:2034   */\n  revert\n    /* \"--CODEGEN--\":1973:1975   */\ntag_52:\n    /* \"--CODEGEN--\":1967:2041   */\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":2048:2195   */\ntag_22:\n    /* \"--CODEGEN--\":2132:2171   */\n  tag_54\n    /* \"--CODEGEN--\":2165:2170   */\n  dup2\n    /* \"--CODEGEN--\":2132:2171   */\n  tag_41\n  jump\t// in\ntag_54:\n    /* \"--CODEGEN--\":2125:2130   */\n  dup2\n    /* \"--CODEGEN--\":2122:2172   */\n  eq\n    /* \"--CODEGEN--\":2112:2114   */\n  tag_55\n  jumpi\n    /* \"--CODEGEN--\":2186:2187   */\n  0x00\n    /* \"--CODEGEN--\":2183:2184   */\n  dup1\n    /* \"--CODEGEN--\":2176:2188   */\n  revert\n    /* \"--CODEGEN--\":2112:2114   */\ntag_55:\n    /* \"--CODEGEN--\":2106:2195   */\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":2202:2359   */\ntag_26:\n    /* \"--CODEGEN--\":2291:2335   */\n  tag_57\n    /* \"--CODEGEN--\":2329:2334   */\n  dup2\n    /* \"--CODEGEN--\":2291:2335   */\n  tag_44\n  jump\t// in\ntag_57:\n    /* \"--CODEGEN--\":2284:2289   */\n  dup2\n    /* \"--CODEGEN--\":2281:2336   */\n  eq\n    /* \"--CODEGEN--\":2271:2273   */\n  tag_58\n  jumpi\n    /* \"--CODEGEN--\":2350:2351   */\n  0x00\n    /* \"--CODEGEN--\":2347:2348   */\n  dup1\n    /* \"--CODEGEN--\":2340:2352   */\n  revert\n    /* \"--CODEGEN--\":2271:2273   */\ntag_58:\n    /* \"--CODEGEN--\":2265:2359   */\n  pop\n  jump\t// out\n    /* \"--CODEGEN--\":2366:2483   */\ntag_30:\n    /* \"--CODEGEN--\":2435:2459   */\n  tag_60\n    /* \"--CODEGEN--\":2453:2458   */\n  dup2\n    /* \"--CODEGEN--\":2435:2459   */\n  tag_48\n  jump\t// in\ntag_60:\n    /* \"--CODEGEN--\":2428:2433   */\n  dup2\n    /* \"--CODEGEN--\":2425:2460   */\n  eq\n    /* \"--CODEGEN--\":2415:2417   */\n  tag_61\n  jumpi\n    /* \"--CODEGEN--\":2474:2475   */\n  0x00\n    /* \"--CODEGEN--\":2471:2472   */\n  dup1\n    /* \"--CODEGEN--\":2464:2476   */\n  revert\n    /* \"--CODEGEN--\":2415:2417   */\ntag_61:\n    /* \"--CODEGEN--\":2409:2483   */\n  pop\n  jump\t// out\n    /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":704:23573  contract MasterChefV2 is Ownable, ReentrancyGuard {... */\ntag_12:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n  assignImmutable(\"0xe6a1c065389a8d929a5a64a56bc16a7e49ca76d19f5c2b002f72a1f543f272ee\")\n  assignImmutable(\"0x16c8a63d520d02dbd3ba67dd93cae5eadc6219145ea2099e8e9f17a2533fafa7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":704:23573  contract MasterChefV2 is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7398b7ea\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xac1d0609\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xdfcedeee\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xdfcedeee\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xe0f91f6c\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xe39e1323\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xedd8b170\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_45\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0xac1d0609\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc40d337b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xc507aeaa\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xcc6db2da\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xdc6363df\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x99d7e84a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x9dcc1b5f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x9dd2fcc3\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xaa47bc8e\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x7398b7ea\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x777a97f8\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x78db4c34\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x78ed5d1f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x81bdf98c\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x39aae5ba\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x5312ea8e\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x61621aaa\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x69b02128\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x39aae5ba\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4ca6ef28\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f70b15a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x1526fe27\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x19ab453c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1ce06d57\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x1e9b828b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x372c12b1\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x033186e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x041a84c9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0bb844bc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1175a1dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21958:22196  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {... */\n    tag_3:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20548:21816  function updateBoostMultiplier(... */\n    tag_4:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7599:7697  function poolLength() public view returns (uint256 pools) {... */\n    tag_5:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18980:19374  function updateBurnAdmin(address _newAdmin) external onlyOwner {... */\n    tag_6:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10496:11449  function pendingCake(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_7:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3197:3223  PoolInfo[] public poolInfo */\n    tag_8:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7037:7543  function init(IBEP20 dummyToken) external onlyOwner {... */\n    tag_9:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4865:4916  uint256 public cakeRateToSpecialFarm = 293402777778 */\n    tag_10:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11973:12321  function cakePerBlock(bool _isRegular) public view returns (uint256 amount) {... */\n    tag_11:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3509:3550  mapping(address => bool) public whiteList */\n    tag_12:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4005:4066  uint256 public constant MASTERCHEF_CAKE_PER_BLOCK = 40 * 1e18 */\n    tag_13:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15227:16108  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_14:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":2937:2965  IBEP20 public immutable CAKE */\n    tag_15:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16199:16290  function harvestFromMasterChef() public {... */\n    tag_16:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12753:13685  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {... */\n    tag_17:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16427:17104  function emergencyWithdraw(uint256 _pid) external nonReentrant {... */\n    tag_18:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3622:3657  uint256 public immutable MASTER_PID */\n    tag_19:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11544:11827  function massUpdatePools() public {... */\n    tag_20:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9616:10327  function set(... */\n    tag_21:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4345:4401  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n    tag_22:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1684:1829  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4072:4121  uint256 public constant ACC_CAKE_PRECISION = 1e18 */\n    tag_24:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17238:17628  function burnCake(bool _withUpdate) public onlyOwner {... */\n    tag_25:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4923:4953  uint256 public lastBurnedBlock */\n    tag_26:\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3289:3312  IBEP20[] public lpToken */\n    tag_27:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3037:3061  address public burnAdmin */\n    tag_28:\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1061:1138  function owner() public view returns (address) {... */\n    tag_29:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3359:3423  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_30:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_156\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3918:3955  uint256 public totalSpecialAllocPoint */\n    tag_31:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12406:12575  function cakePerBlockToBurn() public view returns (uint256 amount) {... */\n    tag_32:\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19963:20322  function updateBoostContract(address _newBoostContract) external onlyOwner {... */\n    tag_33:\n      tag_164\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n    tag_164:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4757:4807  uint256 public cakeRateToRegularFarm = 62847222222 */\n    tag_34:\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19547:19805  function updateWhiteList(address _user, bool _isValid) external onlyOwner {... */\n    tag_35:\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      tag_173\n      jump\t// in\n    tag_170:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3769:3806  uint256 public totalRegularAllocPoint */\n    tag_36:\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8238:9316  function add(... */\n    tag_37:\n      tag_177\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      tag_180\n      jump\t// in\n    tag_177:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4197:4249  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n    tag_38:\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18006:18878  function updateCakeRate(... */\n    tag_39:\n      tag_184\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      tag_187\n      jump\t// in\n    tag_184:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3122:3150  address public boostContract */\n    tag_40:\n      tag_188\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4651:4695  uint256 public cakeRateToBurn = 643750000000 */\n    tag_41:\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13845:15063  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_42:\n      tag_194\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_195:\n      tag_196\n      jump\t// in\n    tag_194:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4472:4528  uint256 public constant CAKE_RATE_TOTAL_PRECISION = 1e12 */\n    tag_43:\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":2849:2889  IMasterChef public immutable MASTER_CHEF */\n    tag_44:\n      tag_200\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1978:2218  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n      tag_204\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_205:\n      tag_206\n      jump\t// in\n    tag_204:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21958:22196  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {... */\n    tag_56:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22036:22043  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22055:22073  uint256 multiplier */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22076:22084  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22076:22090  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22085:22089  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22076:22090  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22076:22097  userInfo[_pid][_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22091:22096  _user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22076:22097  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22076:22113  userInfo[_pid][_user].boostMultiplier */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22055:22113  uint256 multiplier = userInfo[_pid][_user].boostMultiplier */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22130:22140  multiplier */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22130:22158  multiplier > BOOST_PRECISION */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22130:22189  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      tag_208\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22130:22189  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      jump(tag_209)\n    tag_208:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22161:22171  multiplier */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22130:22189  multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n    tag_209:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22123:22189  return multiplier > BOOST_PRECISION ? multiplier : BOOST_PRECISION */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21958:22196  function getBoostMultiplier(address _user, uint256 _pid) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20548:21816  function updateBoostMultiplier(... */\n    tag_62:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6563:6573  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6546:6573  boostContract == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6546:6559  boostContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6546:6573  boostContract == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":6538:6619  require(boostContract == msg.sender, \"Ownable: caller is not the boost contract\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2397  _status */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20737:20738  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20720:20739  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20720:20725  _user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20720:20739  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20712:20788  require(_user != address(0), \"MasterChefV2: The user address must be valid\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20806:20814  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20815:20819  _pid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20806:20820  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_222\n      jumpi\n      invalid\n    tag_222:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20806:20830  poolInfo[_pid].isRegular */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20798:20883  require(poolInfo[_pid].isRegular, \"MasterChefV2: Only regular farm could be boosted\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20914:20928  _newMultiplier */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20914:20947  _newMultiplier >= BOOST_PRECISION */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20914:20988  _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4391:4401  200 * 1e10 */\n      0x01d1a94a2000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20951:20965  _newMultiplier */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20951:20988  _newMultiplier <= MAX_BOOST_PRECISION */\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20914:20988  _newMultiplier >= BOOST_PRECISION && _newMultiplier <= MAX_BOOST_PRECISION */\n    tag_227:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20893:21056  require(... */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21067:21087  PoolInfo memory pool */\n      tag_231\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21090:21106  updatePool(_pid) */\n      tag_233\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21101:21105  _pid */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21090:21100  updatePool */\n      tag_113\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21090:21106  updatePool(_pid) */\n      jump\t// in\n    tag_233:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21067:21106  PoolInfo memory pool = updatePool(_pid) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21116:21137  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21140:21148  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21140:21154  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21149:21153  _pid */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21140:21154  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21140:21161  userInfo[_pid][_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21155:21160  _user */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21140:21161  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21116:21161  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21172:21194  uint256 prevMultiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21197:21228  getBoostMultiplier(_user, _pid) */\n      tag_234\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21216:21221  _user */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21223:21227  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21197:21215  getBoostMultiplier */\n      tag_56\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21197:21228  getBoostMultiplier(_user, _pid) */\n      jump\t// in\n    tag_234:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21172:21228  uint256 prevMultiplier = getBoostMultiplier(_user, _pid) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21238:21284  settlePendingCake(_user, _pid, prevMultiplier) */\n      tag_235\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21256:21261  _user */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21263:21267  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21269:21283  prevMultiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21238:21255  settlePendingCake */\n      tag_236\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21238:21284  settlePendingCake(_user, _pid, prevMultiplier) */\n      jump\t// in\n    tag_235:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21437  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      tag_237\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21391  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare) */\n      tag_238\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21370:21374  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21370:21390  pool.accCakePerShare */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21365  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      tag_239\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21344  user.amount.mul(_newMultiplier) */\n      tag_240\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21329:21343  _newMultiplier */\n      dup11\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21317  user */\n      dup10\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21324  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21328  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21344  user.amount.mul(_newMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21348  user.amount.mul(_newMultiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21365  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21369  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21391  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21395  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21313:21437  user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21295:21299  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21295:21310  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21295:21437  user.rewardDebt = user.amount.mul(_newMultiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21632  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(... */\n      tag_243\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21622  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      tag_244\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21601  user.amount.mul(_newMultiplier) */\n      tag_245\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21586:21600  _newMultiplier */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21574  user */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21581  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21585  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21601  user.amount.mul(_newMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21605  user.amount.mul(_newMultiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21570:21622  user.amount.mul(_newMultiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21552  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)) */\n      tag_246\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21551  user.amount.mul(prevMultiplier).div(BOOST_PRECISION) */\n      tag_247\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21530  user.amount.mul(prevMultiplier) */\n      tag_248\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21515:21529  prevMultiplier */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21503  user */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21510  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21514  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21530  user.amount.mul(prevMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21534  user.amount.mul(prevMultiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21499:21551  user.amount.mul(prevMultiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21476  pool */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21494  pool.totalBoostedShare */\n      0x60\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21498  pool.totalBoostedShare.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21552  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21556  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21472:21632  pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21447:21451  pool */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21447:21469  pool.totalBoostedShare */\n      0x60\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21447:21632  pool.totalBoostedShare = pool.totalBoostedShare.sub(user.amount.mul(prevMultiplier).div(BOOST_PRECISION)).add(... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21659:21663  pool */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21642:21650  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21651:21655  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21642:21656  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_251\n      jumpi\n      invalid\n    tag_251:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21642:21663  poolInfo[_pid] = pool */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21713:21727  _newMultiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21681  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21687  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21682:21686  _pid */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21687  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21694  userInfo[_pid][_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21688:21693  _user */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21694  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21710  userInfo[_pid][_user].boostMultiplier */\n      0x02\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21673:21727  userInfo[_pid][_user].boostMultiplier = _newMultiplier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21765:21770  _user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21743:21809  UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01abd62439b64f6c5dab6f94d56099495bd0c094f9c21f98f4d3562a21edb4ba\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21772:21776  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21778:21792  prevMultiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21794:21808  _newMultiplier */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":21743:21809  UpdateBoostMultiplier(_user, _pid, prevMultiplier, _newMultiplier) */\n      mload(0x40)\n      tag_253\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2419:2420  _ */\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2570  _status */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20548:21816  function updateBoostMultiplier(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7599:7697  function poolLength() public view returns (uint256 pools) {... */\n    tag_64:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7642:7655  uint256 pools */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7675:7683  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7675:7690  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7667:7690  pools = poolInfo.length */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7599:7697  function poolLength() public view returns (uint256 pools) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18980:19374  function updateBurnAdmin(address _newAdmin) external onlyOwner {... */\n    tag_69:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_256\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19082:19083  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19061:19084  _newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19061:19070  _newAdmin */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19061:19084  _newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19053:19135  require(_newAdmin != address(0), \"MasterChefV2: Burn admin address must be valid\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19166:19175  burnAdmin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19153:19175  _newAdmin != burnAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19153:19162  _newAdmin */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19153:19175  _newAdmin != burnAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19145:19245  require(_newAdmin != burnAdmin, \"MasterChefV2: Burn admin address is the same with current address\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19255:19272  address _oldAdmin */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19275:19284  burnAdmin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19255:19284  address _oldAdmin = burnAdmin */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19306:19315  _newAdmin */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19294:19303  burnAdmin */\n      0x02\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19294:19315  burnAdmin = _newAdmin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19357:19366  _newAdmin */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19330:19367  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19346:19355  _oldAdmin */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19330:19367  UpdateBurnAdmin(_oldAdmin, _newAdmin) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd146fe330fdddf682413850a35b28edfccd4c4b53cfee802fd24950de5be1dbe\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1334:1335  _ */\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18980:19374  function updateBurnAdmin(address _newAdmin) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10496:11449  function pendingCake(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_73:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10569:10576  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10588:10608  PoolInfo memory pool */\n      tag_269\n      tag_232\n      jump\t// in\n    tag_269:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10611:10619  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10620:10624  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10611:10625  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_270\n      jumpi\n      invalid\n    tag_270:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10588:10625  PoolInfo memory pool = poolInfo[_pid] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10635:10655  UserInfo memory user */\n      tag_272\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10658:10666  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10658:10672  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10667:10671  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10658:10672  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10658:10679  userInfo[_pid][_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10673:10678  _user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10658:10679  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10635:10679  UserInfo memory user = userInfo[_pid][_user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10689:10712  uint256 accCakePerShare */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10715:10719  pool */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10715:10735  pool.accCakePerShare */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10689:10735  uint256 accCakePerShare = pool.accCakePerShare */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10745:10761  uint256 lpSupply */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10764:10768  pool */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10764:10786  pool.totalBoostedShare */\n      0x60\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10745:10786  uint256 lpSupply = pool.totalBoostedShare */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10816:10820  pool */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10816:10836  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10801:10813  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10801:10836  block.number > pool.lastRewardBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10801:10853  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10852:10853  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10840:10848  lpSupply */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10840:10853  lpSupply != 0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10801:10853  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_274:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10797:11243  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10869:10887  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10890:10928  block.number.sub(pool.lastRewardBlock) */\n      tag_276\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10907:10911  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10907:10927  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10890:10902  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10890:10906  block.number.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10890:10928  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10869:10928  uint256 multiplier = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10943:10961  uint256 cakeReward */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11131  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(... */\n      tag_277\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11052:11056  pool */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11052:11066  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11052:11116  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      tag_278\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11094:11116  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11052:11116  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      jump(tag_279)\n    tag_278:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11069:11091  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11052:11116  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n    tag_279:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11029  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      tag_280\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11013:11017  pool */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11013:11028  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11008  multiplier.mul(cakePerBlock(pool.isRegular)) */\n      tag_281\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10979:11007  cakePerBlock(pool.isRegular) */\n      tag_282\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10992:10996  pool */\n      dup12\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10992:11006  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10979:10991  cakePerBlock */\n      tag_91\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10979:11007  cakePerBlock(pool.isRegular) */\n      jump\t// in\n    tag_282:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:10974  multiplier */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:10978  multiplier.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11008  multiplier.mul(cakePerBlock(pool.isRegular)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11012  multiplier.mul(cakePerBlock(pool.isRegular)).mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11029  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11033  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10964:11131  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10943:11131  uint256 cakeReward = multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11163:11232  accCakePerShare.add(cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply)) */\n      tag_283\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11231  cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply) */\n      tag_284\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11222:11230  lpSupply */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11217  cakeReward.mul(ACC_CAKE_PRECISION) */\n      tag_285\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11193  cakeReward */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11197  cakeReward.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11217  cakeReward.mul(ACC_CAKE_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11221  cakeReward.mul(ACC_CAKE_PRECISION).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11183:11231  cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11163:11178  accCakePerShare */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11163:11182  accCakePerShare.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11163:11232  accCakePerShare.add(cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11145:11232  accCakePerShare = accCakePerShare.add(cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply)) */\n      swap4\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10797:11243  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      pop\n      pop\n    tag_275:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11253:11274  uint256 boostedAmount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11346  user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      tag_286\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11325  user.amount.mul(getBoostMultiplier(_user, _pid)) */\n      tag_287\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11293:11324  getBoostMultiplier(_user, _pid) */\n      tag_288\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11312:11317  _user */\n      dup11\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11319:11323  _pid */\n      dup13\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11293:11311  getBoostMultiplier */\n      tag_56\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11293:11324  getBoostMultiplier(_user, _pid) */\n      jump\t// in\n    tag_288:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11281  user */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11288  user.amount */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11292  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11325  user.amount.mul(getBoostMultiplier(_user, _pid)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11329  user.amount.mul(getBoostMultiplier(_user, _pid)).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11277:11346  user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11253:11346  uint256 boostedAmount = user.amount.mul(getBoostMultiplier(_user, _pid)).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11442  boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION).sub(user.rewardDebt) */\n      tag_289\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11426:11430  user */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11426:11441  user.rewardDebt */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11421  boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION) */\n      tag_290\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11397  boostedAmount.mul(accCakePerShare) */\n      tag_291\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11381:11396  accCakePerShare */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11376  boostedAmount */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11380  boostedAmount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11397  boostedAmount.mul(accCakePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11401  boostedAmount.mul(accCakePerShare).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11421  boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11425  boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION).sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11363:11442  boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11356:11442  return boostedAmount.mul(accCakePerShare).div(ACC_CAKE_PRECISION).sub(user.rewardDebt) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10496:11449  function pendingCake(uint256 _pid, address _user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3197:3223  PoolInfo[] public poolInfo */\n    tag_78:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_292\n      jumpi\n      invalid\n    tag_292:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7037:7543  function init(IBEP20 dummyToken) external onlyOwner {... */\n    tag_84:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_295\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_260\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7099:7114  uint256 balance */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7117:7127  dummyToken */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7117:7137  dummyToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7138:7148  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7117:7149  dummyToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_301:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7099:7149  uint256 balance = dummyToken.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7178:7179  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7167:7174  balance */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7167:7179  balance != 0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7159:7219  require(balance != 0, \"MasterChefV2: Balance must exceed 0\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7229:7292  dummyToken.safeTransferFrom(msg.sender, address(this), balance) */\n      tag_309\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7257:7267  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7277:7281  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7284:7291  balance */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7229:7239  dummyToken */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7229:7256  dummyToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_310\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7229:7292  dummyToken.safeTransferFrom(msg.sender, address(this), balance) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7302:7312  dummyToken */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7302:7320  dummyToken.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7329:7340  MASTER_CHEF */\n      immutable(\"0x16c8a63d520d02dbd3ba67dd93cae5eadc6219145ea2099e8e9f17a2533fafa7\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7343:7350  balance */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7302:7351  dummyToken.approve(address(MASTER_CHEF), balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap3\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_313:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7361:7372  MASTER_CHEF */\n      immutable(\"0x16c8a63d520d02dbd3ba67dd93cae5eadc6219145ea2099e8e9f17a2533fafa7\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7361:7380  MASTER_CHEF.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2bbb158\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7381:7391  MASTER_PID */\n      immutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7393:7400  balance */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7361:7401  MASTER_CHEF.deposit(MASTER_PID, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap3\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7503:7515  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7485:7500  lastBurnedBlock */\n      0x0d\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7485:7515  lastBurnedBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7530:7536  Init() */\n      0x57a86f7d14ccde89e22870afe839e3011216827daa9b24e18629f0a1e9d6cc14\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1334:1335  _ */\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":7037:7543  function init(IBEP20 dummyToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4865:4916  uint256 public cakeRateToSpecialFarm = 293402777778 */\n    tag_86:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11973:12321  function cakePerBlock(bool _isRegular) public view returns (uint256 amount) {... */\n    tag_91:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12033:12047  uint256 amount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12063:12073  _isRegular */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12059:12315  if (_isRegular) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12098:12181  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm).div(CAKE_RATE_TOTAL_PRECISION) */\n      tag_325\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4524:4528  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12098:12150  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm) */\n      tag_326\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12128:12149  cakeRateToRegularFarm */\n      sload(0x0b)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4057:4066  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12098:12127  MASTERCHEF_CAKE_PER_BLOCK.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12098:12150  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_326:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12098:12154  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12098:12181  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm).div(CAKE_RATE_TOTAL_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_325:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12089:12181  amount = MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToRegularFarm).div(CAKE_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12059:12315  if (_isRegular) {... */\n      jump(tag_327)\n    tag_324:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12221:12304  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm).div(CAKE_RATE_TOTAL_PRECISION) */\n      tag_328\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4524:4528  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12221:12273  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm) */\n      tag_329\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12251:12272  cakeRateToSpecialFarm */\n      sload(0x0c)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4057:4066  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12221:12250  MASTERCHEF_CAKE_PER_BLOCK.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12221:12273  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_329:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12221:12277  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12221:12304  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm).div(CAKE_RATE_TOTAL_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12212:12304  amount = MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToSpecialFarm).div(CAKE_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12059:12315  if (_isRegular) {... */\n    tag_327:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11973:12321  function cakePerBlock(bool _isRegular) public view returns (uint256 amount) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3509:3550  mapping(address => bool) public whiteList */\n    tag_95:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4005:4066  uint256 public constant MASTERCHEF_CAKE_PER_BLOCK = 40 * 1e18 */\n    tag_99:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4057:4066  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4005:4066  uint256 public constant MASTERCHEF_CAKE_PER_BLOCK = 40 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15227:16108  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_104:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap1\n      tag_217\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2397  _status */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15308:15328  PoolInfo memory pool */\n      tag_334\n      tag_232\n      jump\t// in\n    tag_334:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15331:15347  updatePool(_pid) */\n      tag_335\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15342:15346  _pid */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15331:15341  updatePool */\n      tag_113\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15331:15347  updatePool(_pid) */\n      jump\t// in\n    tag_335:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15308:15347  PoolInfo memory pool = updatePool(_pid) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15357:15378  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15381:15389  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15381:15395  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15390:15394  _pid */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15381:15395  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15381:15407  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15396:15406  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15381:15407  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15357:15407  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15441:15448  _amount */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15426:15430  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15426:15437  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15426:15448  user.amount >= _amount */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15418:15475  require(user.amount >= _amount, \"withdraw: Insufficient\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15486:15504  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15507:15543  getBoostMultiplier(msg.sender, _pid) */\n      tag_339\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15526:15536  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15538:15542  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15507:15525  getBoostMultiplier */\n      tag_56\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15507:15543  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_339:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15486:15543  uint256 multiplier = getBoostMultiplier(msg.sender, _pid) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15554:15601  settlePendingCake(msg.sender, _pid, multiplier) */\n      tag_340\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15572:15582  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15584:15588  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15590:15600  multiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15554:15571  settlePendingCake */\n      tag_236\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15554:15601  settlePendingCake(msg.sender, _pid, multiplier) */\n      jump\t// in\n    tag_340:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15626:15627  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15616:15623  _amount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15616:15627  _amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15612:15753  if (_amount > 0) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15657:15681  user.amount.sub(_amount) */\n      tag_342\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15673:15680  _amount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15657:15661  user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15657:15668  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15657:15672  user.amount.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15657:15681  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_342:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15643:15647  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15643:15654  user.amount */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15643:15681  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15695:15742  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      tag_343\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15722:15732  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15734:15741  _amount */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15695:15702  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15703:15707  _pid */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15695:15708  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_344\n      jumpi\n      invalid\n    tag_344:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15695:15721  lpToken[_pid].safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_346\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15695:15742  lpToken[_pid].safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_343:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15612:15753  if (_amount > 0) {... */\n    tag_341:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15901  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      tag_347\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15855  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare) */\n      tag_348\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15834:15838  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15834:15854  pool.accCakePerShare */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15829  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_349\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15808  user.amount.mul(multiplier) */\n      tag_350\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15797:15807  multiplier */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15785  user */\n      dup10\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15792  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15796  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15808  user.amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_350:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15812  user.amount.mul(multiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15829  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_349:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15833  user.amount.mul(multiplier).div(BOOST_PRECISION).mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15855  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_348:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15859  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15781:15901  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_347:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15763:15767  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15763:15778  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15763:15901  user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15946:16050  poolInfo[_pid].totalBoostedShare.sub(... */\n      tag_351\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16040  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_352\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16019  _amount.mul(multiplier) */\n      tag_353\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16008:16018  multiplier */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16003  _amount */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16007  _amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16019  _amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_353:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16023  _amount.mul(multiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15996:16040  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_352:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15946:15954  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15955:15959  _pid */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15946:15960  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      invalid\n    tag_354:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15946:15978  poolInfo[_pid].totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15946:15982  poolInfo[_pid].totalBoostedShare.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15946:16050  poolInfo[_pid].totalBoostedShare.sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_351:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15911:15919  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15920:15924  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15911:15925  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_356\n      jumpi\n      invalid\n    tag_356:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15911:15943  poolInfo[_pid].totalBoostedShare */\n      0x03\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15911:16050  poolInfo[_pid].totalBoostedShare = poolInfo[_pid].totalBoostedShare.sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16087:16091  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16075:16085  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16066:16101  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16093:16100  _amount */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16066:16101  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_358\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2419:2420  _ */\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2570  _status */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15227:16108  function withdraw(uint256 _pid, uint256 _amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":2937:2965  IBEP20 public immutable CAKE */\n    tag_106:\n      immutable(\"0xe6a1c065389a8d929a5a64a56bc16a7e49ca76d19f5c2b002f72a1f543f272ee\")\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16199:16290  function harvestFromMasterChef() public {... */\n    tag_110:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16249:16260  MASTER_CHEF */\n      immutable(\"0x16c8a63d520d02dbd3ba67dd93cae5eadc6219145ea2099e8e9f17a2533fafa7\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16249:16268  MASTER_CHEF.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2bbb158\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16269:16279  MASTER_PID */\n      immutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16281:16282  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16249:16283  MASTER_CHEF.deposit(MASTER_PID, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap3\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_362:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16199:16290  function harvestFromMasterChef() public {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12753:13685  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {... */\n    tag_113:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12803:12823  PoolInfo memory pool */\n      tag_365\n      tag_232\n      jump\t// in\n    tag_365:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12842:12850  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12851:12855  _pid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12842:12856  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_367\n      jumpi\n      invalid\n    tag_367:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12835:12856  pool = poolInfo[_pid] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12885:12889  pool */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12885:12905  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12870:12882  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12870:12905  block.number > pool.lastRewardBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12866:13679  if (block.number > pool.lastRewardBlock) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12921:12937  uint256 lpSupply */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12940:12944  pool */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12940:12962  pool.totalBoostedShare */\n      0x60\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12921:12962  uint256 lpSupply = pool.totalBoostedShare */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12976:12999  uint256 totalAllocPoint */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13003:13007  pool */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13003:13017  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13003:13067  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      tag_370\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13045:13067  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13003:13067  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n      jump(tag_371)\n    tag_370:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13020:13042  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13003:13067  pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint */\n    tag_371:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12976:13068  uint256 totalAllocPoint = (pool.isRegular ? totalRegularAllocPoint : totalSpecialAllocPoint) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13098:13099  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13087:13095  lpSupply */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13087:13099  lpSupply > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13087:13122  lpSupply > 0 && totalAllocPoint > 0 */\n      dup1\n      iszero\n      tag_372\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13121:13122  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13103:13118  totalAllocPoint */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13103:13122  totalAllocPoint > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13087:13122  lpSupply > 0 && totalAllocPoint > 0 */\n    tag_372:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13083:13496  if (lpSupply > 0 && totalAllocPoint > 0) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13142:13160  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13163:13201  block.number.sub(pool.lastRewardBlock) */\n      tag_374\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13180:13184  pool */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13180:13200  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13163:13175  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13163:13179  block.number.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13163:13201  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13142:13201  uint256 multiplier = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13219:13237  uint256 cakeReward */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13364  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(... */\n      tag_375\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13331:13346  totalAllocPoint */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13305  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      tag_376\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13289:13293  pool */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13289:13304  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13284  multiplier.mul(cakePerBlock(pool.isRegular)) */\n      tag_377\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13255:13283  cakePerBlock(pool.isRegular) */\n      tag_378\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13268:13272  pool */\n      dup11\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13268:13282  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13255:13267  cakePerBlock */\n      tag_91\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13255:13283  cakePerBlock(pool.isRegular) */\n      jump\t// in\n    tag_378:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13250  multiplier */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13254  multiplier.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13284  multiplier.mul(cakePerBlock(pool.isRegular)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_377:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13288  multiplier.mul(cakePerBlock(pool.isRegular)).mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13305  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_376:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13309  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13240:13364  multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_375:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13219:13364  uint256 cakeReward = multiplier.mul(cakePerBlock(pool.isRegular)).mul(pool.allocPoint).div(... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13405:13481  pool.accCakePerShare.add((cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply))) */\n      tag_379\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13479  cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply) */\n      tag_380\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13470:13478  lpSupply */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13465  cakeReward.mul(ACC_CAKE_PRECISION) */\n      tag_381\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13441  cakeReward */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13445  cakeReward.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13465  cakeReward.mul(ACC_CAKE_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_381:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13469  cakeReward.mul(ACC_CAKE_PRECISION).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13431:13479  cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_380:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13405:13409  pool */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13405:13425  pool.accCakePerShare */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13405:13429  pool.accCakePerShare.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13405:13481  pool.accCakePerShare.add((cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_379:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13382:13386  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13382:13402  pool.accCakePerShare */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13382:13481  pool.accCakePerShare = pool.accCakePerShare.add((cakeReward.mul(ACC_CAKE_PRECISION).div(lpSupply))) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13083:13496  if (lpSupply > 0 && totalAllocPoint > 0) {... */\n      pop\n      pop\n    tag_373:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13532:13544  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13509:13513  pool */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13509:13529  pool.lastRewardBlock */\n      0x20\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13509:13544  pool.lastRewardBlock = block.number */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13575:13579  pool */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13558:13566  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13567:13571  _pid */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13558:13572  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_382\n      jumpi\n      invalid\n    tag_382:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13558:13579  poolInfo[_pid] = pool */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13609:13613  _pid */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13598:13668  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accCakePerShare) */\n      0x3be3541fc42237d611b30329040bfa4569541d156560acdbbae57640d20b8f46\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13615:13619  pool */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13615:13635  pool.lastRewardBlock */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13637:13645  lpSupply */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13647:13651  pool */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13647:13667  pool.accCakePerShare */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13598:13668  UpdatePool(_pid, pool.lastRewardBlock, lpSupply, pool.accCakePerShare) */\n      mload(0x40)\n      tag_384\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_384:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12866:13679  if (block.number > pool.lastRewardBlock) {... */\n      pop\n      pop\n    tag_369:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12753:13685  function updatePool(uint256 _pid) public returns (PoolInfo memory pool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16427:17104  function emergencyWithdraw(uint256 _pid) external nonReentrant {... */\n    tag_118:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap1\n      tag_217\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2397  _status */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16500:16521  PoolInfo storage pool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16524:16532  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16533:16537  _pid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16524:16538  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_389\n      jumpi\n      invalid\n    tag_389:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16500:16538  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16548:16569  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16572:16580  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16572:16586  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16581:16585  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16572:16586  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16572:16598  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16587:16597  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16572:16598  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16548:16598  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16609:16623  uint256 amount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16626:16630  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16626:16637  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16609:16637  uint256 amount = user.amount */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16661:16662  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16647:16651  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16647:16658  user.amount */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16647:16662  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16690:16691  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16672:16676  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16672:16687  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16672:16691  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16701:16722  uint256 boostedAmount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16794  amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      tag_391\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16773  amount.mul(getBoostMultiplier(msg.sender, _pid)) */\n      tag_392\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16736:16772  getBoostMultiplier(msg.sender, _pid) */\n      tag_393\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16755:16765  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16767:16771  _pid */\n      dup10\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16736:16754  getBoostMultiplier */\n      tag_56\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16736:16772  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_393:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16731  amount */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16735  amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16773  amount.mul(getBoostMultiplier(msg.sender, _pid)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_392:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16777  amount.mul(getBoostMultiplier(msg.sender, _pid)).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16725:16794  amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16701:16794  uint256 boostedAmount = amount.mul(getBoostMultiplier(msg.sender, _pid)).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16854:16867  boostedAmount */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16829:16833  pool */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16829:16851  pool.totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16829:16867  pool.totalBoostedShare > boostedAmount */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16829:16915  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      tag_394\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16914:16915  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16829:16915  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      jump(tag_395)\n    tag_394:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16870:16911  pool.totalBoostedShare.sub(boostedAmount) */\n      tag_396\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16897:16910  boostedAmount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16870:16874  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16870:16892  pool.totalBoostedShare */\n      0x03\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16870:16896  pool.totalBoostedShare.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16870:16911  pool.totalBoostedShare.sub(boostedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_396:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16829:16915  pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n    tag_395:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16804:16808  pool */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16804:16826  pool.totalBoostedShare */\n      0x03\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16804:16915  pool.totalBoostedShare = pool.totalBoostedShare > boostedAmount ? pool.totalBoostedShare.sub(boostedAmount) : 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16993:17039  lpToken[_pid].safeTransfer(msg.sender, amount) */\n      tag_397\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17020:17030  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17032:17038  amount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16993:17000  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17001:17005  _pid */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16993:17006  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_398\n      jumpi\n      invalid\n    tag_398:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16993:17019  lpToken[_pid].safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_346\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16993:17039  lpToken[_pid].safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_397:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17084:17088  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17072:17082  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17054:17097  EmergencyWithdraw(msg.sender, _pid, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17090:17096  amount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17054:17097  EmergencyWithdraw(msg.sender, _pid, amount) */\n      mload(0x40)\n      tag_400\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_400:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2419:2420  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2570  _status */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":16427:17104  function emergencyWithdraw(uint256 _pid) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3622:3657  uint256 public immutable MASTER_PID */\n    tag_120:\n      immutable(\"0x3ac7ca38fd21a491cc5fb19169926fdbe6b54822181a3fae6f9aebec8e42713d\")\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11544:11827  function massUpdatePools() public {... */\n    tag_123:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11588:11602  uint256 length */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11605:11613  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11605:11620  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11588:11620  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11635:11646  uint256 pid */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11630:11821  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_402:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11658:11664  length */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11652:11655  pid */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11652:11664  pid < length */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11630:11821  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11687:11707  PoolInfo memory pool */\n      tag_405\n      tag_232\n      jump\t// in\n    tag_405:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11710:11718  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11719:11722  pid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11710:11723  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_406\n      jumpi\n      invalid\n    tag_406:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11687:11723  PoolInfo memory pool = poolInfo[pid] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11760:11761  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11741:11745  pool */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11741:11756  pool.allocPoint */\n      0x40\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11741:11761  pool.allocPoint != 0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11737:11811  if (pool.allocPoint != 0) {... */\n      tag_408\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11781:11796  updatePool(pid) */\n      tag_409\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11792:11795  pid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11781:11791  updatePool */\n      tag_113\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11781:11796  updatePool(pid) */\n      jump\t// in\n    tag_409:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11737:11811  if (pool.allocPoint != 0) {... */\n    tag_408:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11630:11821  for (uint256 pid = 0; pid < length; ++pid) {... */\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11666:11671  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11630:11821  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_402)\n    tag_403:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":11544:11827  function massUpdatePools() public {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9616:10327  function set(... */\n    tag_127:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_411\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_411:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap1\n      tag_260\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_412:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9859:9875  updatePool(_pid) */\n      tag_415\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9870:9874  _pid */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9859:9869  updatePool */\n      tag_113\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9859:9875  updatePool(_pid) */\n      jump\t// in\n    tag_415:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9890:9901  _withUpdate */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9886:9945  if (_withUpdate) {... */\n      iszero\n      tag_416\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9917:9934  massUpdatePools() */\n      tag_417\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9917:9932  massUpdatePools */\n      tag_123\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9917:9934  massUpdatePools() */\n      jump\t// in\n    tag_417:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9886:9945  if (_withUpdate) {... */\n    tag_416:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9959:9967  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9968:9972  _pid */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9959:9973  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_418\n      jumpi\n      invalid\n    tag_418:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9959:9983  poolInfo[_pid].isRegular */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9955:10231  if (poolInfo[_pid].isRegular) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10094  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_421\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10082:10093  _allocPoint */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10077  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_422\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10051:10059  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10060:10064  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10051:10065  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_423\n      jumpi\n      invalid\n    tag_423:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10051:10076  poolInfo[_pid].allocPoint */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10046  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10050  totalRegularAllocPoint.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10077  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_422:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10081  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10024:10094  totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_421:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9999:10021  totalRegularAllocPoint */\n      0x08\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9999:10094  totalRegularAllocPoint = totalRegularAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9955:10231  if (poolInfo[_pid].isRegular) {... */\n      jump(tag_425)\n    tag_420:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10220  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_426\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10208:10219  _allocPoint */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10203  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_427\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10177:10185  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10186:10190  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10177:10191  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_428\n      jumpi\n      invalid\n    tag_428:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10177:10202  poolInfo[_pid].allocPoint */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10172  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10176  totalSpecialAllocPoint.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10203  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_427:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10207  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10150:10220  totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_426:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10125:10147  totalSpecialAllocPoint */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10125:10220  totalSpecialAllocPoint = totalSpecialAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9955:10231  if (poolInfo[_pid].isRegular) {... */\n    tag_425:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10268:10279  _allocPoint */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10240:10248  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10249:10253  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10240:10254  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_430\n      jumpi\n      invalid\n    tag_430:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10240:10265  poolInfo[_pid].allocPoint */\n      0x02\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10240:10279  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10302:10306  _pid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10294:10320  SetPool(_pid, _allocPoint) */\n      0xc0cfd54d2de2b55f1e6e108d3ec53ff0a1abe6055401d32c61e9433b747ef9f8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10308:10319  _allocPoint */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":10294:10320  SetPool(_pid, _allocPoint) */\n      mload(0x40)\n      tag_432\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9616:10327  function set(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4345:4401  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n    tag_129:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4391:4401  200 * 1e10 */\n      0x01d1a94a2000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4345:4401  uint256 public constant MAX_BOOST_PRECISION = 200 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1684:1829  function renounceOwnership() public virtual onlyOwner {... */\n    tag_132:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_434\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_434:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_435\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_436\n      swap1\n      tag_260\n      jump\t// in\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_435:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1790:1791  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1753:1793  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1774:1780  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1753:1793  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1820:1821  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1803:1809  _owner */\n      dup1\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1803:1822  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1684:1829  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4072:4121  uint256 public constant ACC_CAKE_PRECISION = 1e18 */\n    tag_134:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4072:4121  uint256 public constant ACC_CAKE_PRECISION = 1e18 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17238:17628  function burnCake(bool _withUpdate) public onlyOwner {... */\n    tag_138:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_439\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_439:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_440\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_441\n      swap1\n      tag_260\n      jump\t// in\n    tag_441:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_440:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17305:17316  _withUpdate */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17301:17360  if (_withUpdate) {... */\n      iszero\n      tag_443\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17332:17349  massUpdatePools() */\n      tag_444\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17332:17347  massUpdatePools */\n      tag_123\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17332:17349  massUpdatePools() */\n      jump\t// in\n    tag_444:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17301:17360  if (_withUpdate) {... */\n    tag_443:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17370:17388  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17391:17424  block.number.sub(lastBurnedBlock) */\n      tag_445\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17408:17423  lastBurnedBlock */\n      sload(0x0d)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17391:17403  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17391:17407  block.number.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17391:17424  block.number.sub(lastBurnedBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_445:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17370:17424  uint256 multiplier = block.number.sub(lastBurnedBlock) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17434:17459  uint256 pendingCakeToBurn */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17462:17498  multiplier.mul(cakePerBlockToBurn()) */\n      tag_446\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17477:17497  cakePerBlockToBurn() */\n      tag_447\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17477:17495  cakePerBlockToBurn */\n      tag_162\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17477:17497  cakePerBlockToBurn() */\n      jump\t// in\n    tag_447:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17462:17472  multiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17462:17476  multiplier.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17462:17498  multiplier.mul(cakePerBlockToBurn()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_446:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17434:17498  uint256 pendingCakeToBurn = multiplier.mul(cakePerBlockToBurn()) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17538:17581  _safeTransfer(burnAdmin, pendingCakeToBurn) */\n      tag_448\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17552:17561  burnAdmin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17563:17580  pendingCakeToBurn */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17538:17551  _safeTransfer */\n      tag_449\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17538:17581  _safeTransfer(burnAdmin, pendingCakeToBurn) */\n      jump\t// in\n    tag_448:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17609:17621  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17591:17606  lastBurnedBlock */\n      0x0d\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17591:17621  lastBurnedBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1334:1335  _ */\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":17238:17628  function burnCake(bool _withUpdate) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4923:4953  uint256 public lastBurnedBlock */\n    tag_140:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3289:3312  IBEP20[] public lpToken */\n    tag_144:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_450\n      jumpi\n      invalid\n    tag_450:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3037:3061  address public burnAdmin */\n    tag_147:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1061:1138  function owner() public view returns (address) {... */\n    tag_151:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1099:1106  address */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1125:1131  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1118:1131  return _owner */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1061:1138  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3359:3423  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_155:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3918:3955  uint256 public totalSpecialAllocPoint */\n    tag_159:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12406:12575  function cakePerBlockToBurn() public view returns (uint256 amount) {... */\n    tag_162:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12457:12471  uint256 amount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12492:12568  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn).div(CAKE_RATE_TOTAL_PRECISION) */\n      tag_454\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4524:4528  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12492:12537  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn) */\n      tag_455\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12522:12536  cakeRateToBurn */\n      sload(0x0a)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4057:4066  40 * 1e18 */\n      0x022b1c8c1227a00000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12492:12521  MASTERCHEF_CAKE_PER_BLOCK.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12492:12537  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12492:12541  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12492:12568  MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn).div(CAKE_RATE_TOTAL_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_454:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12483:12568  amount = MASTERCHEF_CAKE_PER_BLOCK.mul(cakeRateToBurn).div(CAKE_RATE_TOTAL_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":12406:12575  function cakePerBlockToBurn() public view returns (uint256 amount) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19963:20322  function updateBoostContract(address _newBoostContract) external onlyOwner {... */\n    tag_166:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_457\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_457:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_458\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_459\n      swap1\n      tag_260\n      jump\t// in\n    tag_459:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_458:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20098:20099  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20069:20100  _newBoostContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20069:20086  _newBoostContract */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20069:20100  _newBoostContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20069:20138  _newBoostContract != address(0) && _newBoostContract != boostContract */\n      dup1\n      iszero\n      tag_461\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20125:20138  boostContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20104:20138  _newBoostContract != boostContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20104:20121  _newBoostContract */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20104:20138  _newBoostContract != boostContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20069:20138  _newBoostContract != address(0) && _newBoostContract != boostContract */\n    tag_461:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20048:20218  require(... */\n      tag_462\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_463\n      swap1\n      tag_464\n      jump\t// in\n    tag_463:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_462:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20245:20262  _newBoostContract */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20229:20242  boostContract */\n      0x03\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20229:20262  boostContract = _newBoostContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20297:20314  _newBoostContract */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":20277:20315  UpdateBoostContract(_newBoostContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c0c07d0b548b824a1b998eb4d11fccf1cfbc1e47edcdb309970ba88315eb303\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19963:20322  function updateBoostContract(address _newBoostContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4757:4807  uint256 public cakeRateToRegularFarm = 62847222222 */\n    tag_168:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19547:19805  function updateWhiteList(address _user, bool _isValid) external onlyOwner {... */\n    tag_173:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_466\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_466:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_467\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_468\n      swap1\n      tag_260\n      jump\t// in\n    tag_468:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_467:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19656:19657  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19639:19658  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19639:19644  _user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19639:19658  _user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19631:19713  require(_user != address(0), \"MasterChefV2: The white list address must be valid\") */\n      tag_470\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_471\n      swap1\n      tag_472\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_470:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19743:19751  _isValid */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19724:19733  whiteList */\n      0x07\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19724:19740  whiteList[_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19734:19739  _user */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19724:19740  whiteList[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19724:19751  whiteList[_user] = _isValid */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19782:19787  _user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19766:19798  UpdateWhiteList(_user, _isValid) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc551bbb22d0406dbfb8b6b7740cc521bcf44e1106029cf899c19b6a8e4c99d51\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19789:19797  _isValid */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19766:19798  UpdateWhiteList(_user, _isValid) */\n      mload(0x40)\n      tag_473\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_473:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":19547:19805  function updateWhiteList(address _user, bool _isValid) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3769:3806  uint256 public totalRegularAllocPoint */\n    tag_175:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8238:9316  function add(... */\n    tag_180:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_475\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_475:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_476\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_477\n      swap1\n      tag_260\n      jump\t// in\n    tag_477:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_476:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8436:8437  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8399:8407  _lpToken */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8399:8417  _lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8426:8430  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8399:8432  _lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_479\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_479:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_480\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_480:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_482\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_482:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_483\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_483:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8399:8437  _lpToken.balanceOf(address(this)) >= 0 */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8391:8459  require(_lpToken.balanceOf(address(this)) >= 0, \"None BEP20 tokens\") */\n      tag_484\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_485\n      swap1\n      tag_486\n      jump\t// in\n    tag_485:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_484:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8641:8645  CAKE */\n      immutable(\"0xe6a1c065389a8d929a5a64a56bc16a7e49ca76d19f5c2b002f72a1f543f272ee\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8629:8645  _lpToken != CAKE */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8629:8637  _lpToken */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8629:8645  _lpToken != CAKE */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8621:8689  require(_lpToken != CAKE, \"CAKE token can't be added to farm pools\") */\n      tag_487\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_488\n      swap1\n      tag_489\n      jump\t// in\n    tag_488:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_487:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8704:8715  _withUpdate */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8700:8759  if (_withUpdate) {... */\n      iszero\n      tag_490\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8731:8748  massUpdatePools() */\n      tag_491\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8731:8746  massUpdatePools */\n      tag_123\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8731:8748  massUpdatePools() */\n      jump\t// in\n    tag_491:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8700:8759  if (_withUpdate) {... */\n    tag_490:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8773:8783  _isRegular */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8769:8969  if (_isRegular) {... */\n      iszero\n      tag_492\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8824:8863  totalRegularAllocPoint.add(_allocPoint) */\n      tag_493\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8851:8862  _allocPoint */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8824:8846  totalRegularAllocPoint */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8824:8850  totalRegularAllocPoint.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8824:8863  totalRegularAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_493:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8799:8821  totalRegularAllocPoint */\n      0x08\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8799:8863  totalRegularAllocPoint = totalRegularAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8769:8969  if (_isRegular) {... */\n      jump(tag_494)\n    tag_492:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8919:8958  totalSpecialAllocPoint.add(_allocPoint) */\n      tag_495\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8946:8957  _allocPoint */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8919:8941  totalSpecialAllocPoint */\n      sload(0x09)\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8919:8945  totalSpecialAllocPoint.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8919:8958  totalSpecialAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_495:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8894:8916  totalSpecialAllocPoint */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8894:8958  totalSpecialAllocPoint = totalSpecialAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8769:8969  if (_isRegular) {... */\n    tag_494:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8978:8985  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8991:8999  _lpToken */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8978:9000  lpToken.push(_lpToken) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9011:9019  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9038:9219  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9146:9147  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9038:9219  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9107:9119  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9038:9219  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9069:9080  _allocPoint */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9038:9219  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9207:9208  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9038:9219  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9168:9178  _isRegular */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9038:9219  PoolInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9011:9229  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9288:9296  _lpToken */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9244:9309  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9252:9273  lpToken.length.sub(1) */\n      tag_498\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9271:9272  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9252:9259  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9252:9266  lpToken.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9252:9270  lpToken.length.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9252:9273  lpToken.length.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_498:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9244:9309  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      0x18caa0724a26384928efe604ae6ddc99c242548876259770fc88fcb7e719d8fa\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9275:9286  _allocPoint */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9298:9308  _isRegular */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":9244:9309  AddPool(lpToken.length.sub(1), _allocPoint, _lpToken, _isRegular) */\n      mload(0x40)\n      tag_499\n      swap3\n      swap2\n      swap1\n      tag_500\n      jump\t// in\n    tag_499:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":8238:9316  function add(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4197:4249  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n    tag_182:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4197:4249  uint256 public constant BOOST_PRECISION = 100 * 1e10 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18006:18878  function updateCakeRate(... */\n    tag_187:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_502\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_502:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_503\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_504\n      swap1\n      tag_260\n      jump\t// in\n    tag_504:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_503:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18219:18220  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18207:18216  _burnRate */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18207:18220  _burnRate > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18207:18244  _burnRate > 0 && _regularFarmRate > 0 */\n      dup1\n      iszero\n      tag_506\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18243:18244  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18224:18240  _regularFarmRate */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18224:18244  _regularFarmRate > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18207:18244  _burnRate > 0 && _regularFarmRate > 0 */\n    tag_506:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18207:18268  _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0 */\n      dup1\n      iszero\n      tag_507\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18267:18268  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18248:18264  _specialFarmRate */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18248:18268  _specialFarmRate > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18207:18268  _burnRate > 0 && _regularFarmRate > 0 && _specialFarmRate > 0 */\n    tag_507:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18186:18340  require(... */\n      tag_508\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_509\n      swap1\n      tag_510\n      jump\t// in\n    tag_509:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_508:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4524:4528  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18424  _burnRate.add(_regularFarmRate).add(_specialFarmRate) */\n      tag_511\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18407:18423  _specialFarmRate */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18402  _burnRate.add(_regularFarmRate) */\n      tag_512\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18385:18401  _regularFarmRate */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18380  _burnRate */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18384  _burnRate.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18402  _burnRate.add(_regularFarmRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_512:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18406  _burnRate.add(_regularFarmRate).add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18424  _burnRate.add(_regularFarmRate).add(_specialFarmRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_511:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18371:18453  _burnRate.add(_regularFarmRate).add(_specialFarmRate) == CAKE_RATE_TOTAL_PRECISION */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18350:18516  require(... */\n      tag_513\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_514\n      swap1\n      tag_515\n      jump\t// in\n    tag_514:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_513:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18530:18541  _withUpdate */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18526:18585  if (_withUpdate) {... */\n      iszero\n      tag_516\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18557:18574  massUpdatePools() */\n      tag_517\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18557:18572  massUpdatePools */\n      tag_123\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18557:18574  massUpdatePools() */\n      jump\t// in\n    tag_517:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18526:18585  if (_withUpdate) {... */\n    tag_516:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18642:18657  burnCake(false) */\n      tag_518\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18651:18656  false */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18642:18650  burnCake */\n      tag_138\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18642:18657  burnCake(false) */\n      jump\t// in\n    tag_518:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18685:18694  _burnRate */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18668:18682  cakeRateToBurn */\n      0x0a\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18668:18694  cakeRateToBurn = _burnRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18728:18744  _regularFarmRate */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18704:18725  cakeRateToRegularFarm */\n      0x0b\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18704:18744  cakeRateToRegularFarm = _regularFarmRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18778:18794  _specialFarmRate */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18754:18775  cakeRateToSpecialFarm */\n      0x0c\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18754:18794  cakeRateToSpecialFarm = _specialFarmRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18810:18871  UpdateCakeRate(_burnRate, _regularFarmRate, _specialFarmRate) */\n      0xae2d2e7d1ae84564fc72227253ce0f36a007209f7fd5ec414dea80e5af2fb5b0\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18825:18834  _burnRate */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18836:18852  _regularFarmRate */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18854:18870  _specialFarmRate */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18810:18871  UpdateCakeRate(_burnRate, _regularFarmRate, _specialFarmRate) */\n      mload(0x40)\n      tag_519\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_519:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":18006:18878  function updateCakeRate(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":3122:3150  address public boostContract */\n    tag_189:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4651:4695  uint256 public cakeRateToBurn = 643750000000 */\n    tag_192:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13845:15063  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {... */\n    tag_196:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2267  _status */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2260:2279  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2252:2315  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_521\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_522\n      swap1\n      tag_217\n      jump\t// in\n    tag_522:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_521:\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1671:1672  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2397  _status */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2390:2408  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13925:13945  PoolInfo memory pool */\n      tag_524\n      tag_232\n      jump\t// in\n    tag_524:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13948:13964  updatePool(_pid) */\n      tag_525\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13959:13963  _pid */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13948:13958  updatePool */\n      tag_113\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13948:13964  updatePool(_pid) */\n      jump\t// in\n    tag_525:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13925:13964  PoolInfo memory pool = updatePool(_pid) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13974:13995  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13998:14006  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13998:14012  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14007:14011  _pid */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13998:14012  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13998:14024  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14013:14023  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13998:14024  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13974:14024  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14056:14060  pool */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14056:14070  pool.isRegular */\n      0x80\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14056:14095  pool.isRegular || whiteList[msg.sender] */\n      dup1\n      tag_526\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14074:14083  whiteList */\n      0x07\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14074:14095  whiteList[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14084:14094  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14074:14095  whiteList[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14056:14095  pool.isRegular || whiteList[msg.sender] */\n    tag_526:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14035:14187  require(... */\n      tag_527\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_528\n      swap1\n      tag_529\n      jump\t// in\n    tag_528:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_527:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14198:14216  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14219:14255  getBoostMultiplier(msg.sender, _pid) */\n      tag_530\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14238:14248  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14250:14254  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14219:14237  getBoostMultiplier */\n      tag_56\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14219:14255  getBoostMultiplier(msg.sender, _pid) */\n      jump\t// in\n    tag_530:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14198:14255  uint256 multiplier = getBoostMultiplier(msg.sender, _pid) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14284:14285  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14270:14274  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14270:14281  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14270:14285  user.amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14266:14359  if (user.amount > 0) {... */\n      iszero\n      tag_531\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14301:14348  settlePendingCake(msg.sender, _pid, multiplier) */\n      tag_532\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14319:14329  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14331:14335  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14337:14347  multiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14301:14318  settlePendingCake */\n      tag_236\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14301:14348  settlePendingCake(msg.sender, _pid, multiplier) */\n      jump\t// in\n    tag_532:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14266:14359  if (user.amount > 0) {... */\n    tag_531:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14383:14384  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14373:14380  _amount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14373:14384  _amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14369:14827  if (_amount > 0) {... */\n      iszero\n      tag_533\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14400:14414  uint256 before */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14417:14424  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14425:14429  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14417:14430  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_534\n      jumpi\n      invalid\n    tag_534:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14417:14440  lpToken[_pid].balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14449:14453  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14417:14455  lpToken[_pid].balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_536\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_536:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_537\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_537:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_539\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_539:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_540\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_540:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14400:14455  uint256 before = lpToken[_pid].balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14469:14535  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_541\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14500:14510  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14520:14524  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14527:14534  _amount */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14469:14476  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14477:14481  _pid */\n      dup11\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14469:14482  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_542\n      jumpi\n      invalid\n    tag_542:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14469:14499  lpToken[_pid].safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_310\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14469:14535  lpToken[_pid].safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_541:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14609  lpToken[_pid].balanceOf(address(this)).sub(before) */\n      tag_544\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14602:14608  before */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14566  lpToken */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14567:14571  _pid */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14572  lpToken[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_545\n      jumpi\n      invalid\n    tag_545:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14582  lpToken[_pid].balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14591:14595  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14597  lpToken[_pid].balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_547\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_547:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_548\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_548:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_550\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_550:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_551\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_551:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14601  lpToken[_pid].balanceOf(address(this)).sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14559:14609  lpToken[_pid].balanceOf(address(this)).sub(before) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_544:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14549:14609  _amount = lpToken[_pid].balanceOf(address(this)).sub(before) */\n      swap5\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14637:14661  user.amount.add(_amount) */\n      tag_552\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14653:14660  _amount */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14637:14641  user */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14637:14648  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14637:14652  user.amount.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14637:14661  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_552:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14623:14627  user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14623:14634  user.amount */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14623:14661  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14744:14816  pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      tag_553\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14815  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_554\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14794  _amount.mul(multiplier) */\n      tag_555\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14783:14793  multiplier */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14778  _amount */\n      dup10\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14782  _amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14794  _amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_555:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14798  _amount.mul(multiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14771:14815  _amount.mul(multiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_554:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14744:14748  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14744:14766  pool.totalBoostedShare */\n      0x60\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14744:14770  pool.totalBoostedShare.add */\n      tag_250\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14744:14816  pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_553:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14719:14723  pool */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14719:14741  pool.totalBoostedShare */\n      0x60\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14719:14816  pool.totalBoostedShare = pool.totalBoostedShare.add(_amount.mul(multiplier).div(BOOST_PRECISION)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14369:14827  if (_amount > 0) {... */\n      pop\n    tag_533:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14975  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      tag_556\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14929  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare) */\n      tag_557\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14908:14912  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14908:14928  pool.accCakePerShare */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14903  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      tag_558\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14882  user.amount.mul(multiplier) */\n      tag_559\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14871:14881  multiplier */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14859  user */\n      dup10\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14866  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14870  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14882  user.amount.mul(multiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_559:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14886  user.amount.mul(multiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14903  user.amount.mul(multiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_558:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14907  user.amount.mul(multiplier).div(BOOST_PRECISION).mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14929  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_557:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14933  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14855:14975  user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_556:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14837:14841  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14837:14852  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14837:14975  user.rewardDebt = user.amount.mul(multiplier).div(BOOST_PRECISION).mul(pool.accCakePerShare).div(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15002:15006  pool */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14985:14993  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14994:14998  _pid */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14985:14999  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_560\n      jumpi\n      invalid\n    tag_560:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":14985:15006  poolInfo[_pid] = pool */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15042:15046  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15030:15040  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15022:15056  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15048:15055  _amount */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":15022:15056  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_562\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_562:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2419:2420  _ */\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":1628:1629  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2570  _status */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":2563:2585  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":13845:15063  function deposit(uint256 _pid, uint256 _amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4472:4528  uint256 public constant CAKE_RATE_TOTAL_PRECISION = 1e12 */\n    tag_198:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4524:4528  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4472:4528  uint256 public constant CAKE_RATE_TOTAL_PRECISION = 1e12 */\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":2849:2889  IMasterChef public immutable MASTER_CHEF */\n    tag_201:\n      immutable(\"0x16c8a63d520d02dbd3ba67dd93cae5eadc6219145ea2099e8e9f17a2533fafa7\")\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1978:2218  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_206:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      tag_564\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1285  _msgSender */\n      tag_257\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1275:1287  _msgSender() */\n      jump\t// in\n    tag_564:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1271  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1265:1287  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1257:1324  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_565\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_566\n      swap1\n      tag_260\n      jump\t// in\n    tag_566:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_565:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2086:2087  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2066:2088  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2066:2074  newOwner */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2066:2088  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2058:2131  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_568\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_569\n      swap1\n      tag_570\n      jump\t// in\n    tag_569:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_568:\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2175:2183  newOwner */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2146:2184  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2167:2173  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2146:2184  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2203:2211  newOwner */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2194:2200  _owner */\n      0x00\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":2194:2211  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":1978:2218  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22451:22947  function settlePendingCake(... */\n    tag_236:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22582:22602  UserInfo memory user */\n      tag_572\n      tag_273\n      jump\t// in\n    tag_572:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22605:22613  userInfo */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22605:22619  userInfo[_pid] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22614:22618  _pid */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22605:22619  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22605:22626  userInfo[_pid][_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22620:22625  _user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22605:22626  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22582:22626  UserInfo memory user = userInfo[_pid][_user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22637:22658  uint256 boostedAmount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22715  user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      tag_573\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4239:4249  100 * 1e10 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22694  user.amount.mul(_boostMultiplier) */\n      tag_574\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22677:22693  _boostMultiplier */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22665  user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22672  user.amount */\n      0x00\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22676  user.amount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22694  user.amount.mul(_boostMultiplier) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_574:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22698  user.amount.mul(_boostMultiplier).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22661:22715  user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_573:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22637:22715  uint256 boostedAmount = user.amount.mul(_boostMultiplier).div(BOOST_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22725:22740  uint256 accCake */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22816  boostedAmount.mul(poolInfo[_pid].accCakePerShare).div(ACC_CAKE_PRECISION) */\n      tag_575\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":4117:4121  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22792  boostedAmount.mul(poolInfo[_pid].accCakePerShare) */\n      tag_576\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22761:22769  poolInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22770:22774  _pid */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22761:22775  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_577\n      jumpi\n      invalid\n    tag_577:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22761:22791  poolInfo[_pid].accCakePerShare */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22756  boostedAmount */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22760  boostedAmount.mul */\n      tag_241\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22792  boostedAmount.mul(poolInfo[_pid].accCakePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_576:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22796  boostedAmount.mul(poolInfo[_pid].accCakePerShare).div */\n      tag_242\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22743:22816  boostedAmount.mul(poolInfo[_pid].accCakePerShare).div(ACC_CAKE_PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_575:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22725:22816  uint256 accCake = boostedAmount.mul(poolInfo[_pid].accCakePerShare).div(ACC_CAKE_PRECISION) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22826:22841  uint256 pending */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22844:22872  accCake.sub(user.rewardDebt) */\n      tag_579\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22856:22860  user */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22856:22871  user.rewardDebt */\n      0x20\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22844:22851  accCake */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22844:22855  accCake.sub */\n      tag_249\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22844:22872  accCake.sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_579:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22826:22872  uint256 pending = accCake.sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22911:22940  _safeTransfer(_user, pending) */\n      tag_580\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22925:22930  _user */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22932:22939  pending */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22911:22924  _safeTransfer */\n      tag_449\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22911:22940  _safeTransfer(_user, pending) */\n      jump\t// in\n    tag_580:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":22451:22947  function settlePendingCake(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2180:2639  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_241:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2238:2245  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2484:2485  0 */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2479:2480  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2479:2485  a == 0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2475:2520  if (a == 0) {... */\n      iszero\n      tag_582\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2508:2509  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2501:2509  return 0 */\n      swap1\n      pop\n      jump(tag_581)\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2475:2520  if (a == 0) {... */\n    tag_582:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2530:2539  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2546:2547  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2542:2543  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2542:2547  a * b */\n      mul\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2530:2547  uint256 c = a * b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2574:2575  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2569:2570  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2565:2566  c */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2565:2570  c / a */\n      dup2\n      tag_583\n      jumpi\n      invalid\n    tag_583:\n      div\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2565:2575  c / a == b */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2557:2613  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_584\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_585\n      swap1\n      tag_586\n      jump\t// in\n    tag_585:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_584:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2631:2632  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2624:2632  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":2180:2639  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_581:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3159:3166  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      tag_588\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3189:3190  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3192:3193  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3185:3188  div */\n      tag_589\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3185:3224  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_588:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3178:3224  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3101:3231  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1379:1386  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_591\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1409:1410  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1412:1413  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1405:1408  sub */\n      tag_592\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1405:1448  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_591:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1398:1448  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1321:1455  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_250:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":951:960  uint256 c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":967:968  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":963:964  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":963:968  a + b */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":951:968  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":991:992  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":986:987  c */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":986:992  c >= a */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_594\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_595\n      swap1\n      tag_596\n      jump\t// in\n    tag_595:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_594:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1042:1043  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1035:1043  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_257:\n        /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":643:658  address payable */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":670:687  return msg.sender */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":932:1207  function safeTransferFrom(... */\n    tag_310:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1070:1200  _callOptionalReturn(... */\n      tag_599\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1103:1108  token */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1145:1172  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1174:1178  from */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1180:1182  to */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1184:1189  value */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1122:1190  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_600\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_601\n      jump\t// in\n    tag_600:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1070:1089  _callOptionalReturn */\n      tag_602\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":1070:1200  _callOptionalReturn(... */\n      jump\t// in\n    tag_599:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":932:1207  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":687:926  function safeTransfer(... */\n    tag_346:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":799:919  _callOptionalReturn(... */\n      tag_604\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":832:837  token */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":874:897  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":899:901  to */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":903:908  value */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":851:909  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_605\n      swap3\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_605:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":799:818  _callOptionalReturn */\n      tag_602\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":799:919  _callOptionalReturn(... */\n      jump\t// in\n    tag_604:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":687:926  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23081:23571  function _safeTransfer(address _to, uint256 _amount) internal {... */\n    tag_449:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23167:23168  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23157:23164  _amount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23157:23168  _amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23153:23565  if (_amount > 0) {... */\n      iszero\n      tag_607\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23298:23305  _amount */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23266:23270  CAKE */\n      immutable(\"0xe6a1c065389a8d929a5a64a56bc16a7e49ca76d19f5c2b002f72a1f543f272ee\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23266:23280  CAKE.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23289:23293  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23266:23295  CAKE.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_608\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_608:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_609\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_609:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_611\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_611:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_612\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_612:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23266:23305  CAKE.balanceOf(address(this)) < _amount */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23262:23363  if (CAKE.balanceOf(address(this)) < _amount) {... */\n      iszero\n      tag_613\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23325:23348  harvestFromMasterChef() */\n      tag_614\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23325:23346  harvestFromMasterChef */\n      tag_110\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23325:23348  harvestFromMasterChef() */\n      jump\t// in\n    tag_614:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23262:23363  if (CAKE.balanceOf(address(this)) < _amount) {... */\n    tag_613:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23376:23391  uint256 balance */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23394:23398  CAKE */\n      immutable(\"0xe6a1c065389a8d929a5a64a56bc16a7e49ca76d19f5c2b002f72a1f543f272ee\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23394:23408  CAKE.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23417:23421  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23394:23423  CAKE.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_615\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_615:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_616\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_616:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_618\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_618:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_619\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_619:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23376:23423  uint256 balance = CAKE.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23451:23458  _amount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23441:23448  balance */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23441:23458  balance < _amount */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23437:23510  if (balance < _amount) {... */\n      iszero\n      tag_620\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23488:23495  balance */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23478:23495  _amount = balance */\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23437:23510  if (balance < _amount) {... */\n    tag_620:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23523:23554  CAKE.safeTransfer(_to, _amount) */\n      tag_621\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23541:23544  _to */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23546:23553  _amount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23523:23527  CAKE */\n      immutable(\"0xe6a1c065389a8d929a5a64a56bc16a7e49ca76d19f5c2b002f72a1f543f272ee\")\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23523:23540  CAKE.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_346\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23523:23554  CAKE.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_621:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23153:23565  if (_amount > 0) {... */\n      pop\n    tag_607:\n        /* \"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":23081:23571  function _safeTransfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_589:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3799:3806  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3830:3831  0 */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3826:3827  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3826:3831  b > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3833:3845  errorMessage */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3818:3846  require(b > 0, errorMessage) */\n      swap1\n      tag_623\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_624\n      swap2\n      swap1\n      tag_625\n      jump\t// in\n    tag_624:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_623:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3856:3865  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3872:3873  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3868:3869  a */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3868:3873  a / b */\n      dup2\n      tag_626\n      jumpi\n      invalid\n    tag_626:\n      div\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3856:3873  uint256 c = a / b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3977:3978  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3970:3978  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":3713:3985  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_592:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1864:1865  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1859:1860  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1859:1865  b <= a */\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1867:1879  errorMessage */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      swap1\n      tag_628\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_629\n      swap2\n      swap1\n      tag_625\n      jump\t// in\n    tag_629:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_628:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1890:1899  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1906:1907  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1902:1903  a */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1902:1907  a - b */\n      sub\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1890:1907  uint256 c = a - b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1925:1926  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1918:1926  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3315:4132  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_602:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3734:3757  bytes memory returndata */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3768:3837  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_631\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3796:3800  data */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3768:3837  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3776:3781  token */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3768:3795  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_632\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3768:3837  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_631:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3734:3837  bytes memory returndata =... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3871:3872  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3851:3861  returndata */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3851:3868  returndata.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3851:3872  returndata.length > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3847:4126  if (returndata.length > 0) {... */\n      iszero\n      tag_633\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":4020:4030  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":4009:4039  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_634\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_634:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3984:4115  require(... */\n      tag_635\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_636\n      swap1\n      tag_637\n      jump\t// in\n    tag_636:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_635:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3847:4126  if (returndata.length > 0) {... */\n    tag_633:\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":3315:4132  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3573:3767  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_632:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3676:3688  bytes memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3707:3760  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_639\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3730:3736  target */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3738:3742  data */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3744:3745  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3747:3759  errorMessage */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3707:3729  _functionCallWithValue */\n      tag_640\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3707:3760  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_639:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3700:3760  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":3573:3767  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":4920:5878  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {... */\n    tag_640:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5050:5062  bytes memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5082:5100  isContract(target) */\n      tag_642\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5093:5099  target */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5082:5092  isContract */\n      tag_643\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5082:5100  isContract(target) */\n      jump\t// in\n    tag_642:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5074:5134  require(isContract(target), \"Address: call to non-contract\") */\n      tag_644\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_645\n      swap1\n      tag_646\n      jump\t// in\n    tag_645:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_644:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5205:5217  bool success */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5219:5242  bytes memory returndata */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5246:5252  target */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5246:5257  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5266:5274  weiValue */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5277:5281  data */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5246:5282  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      tag_647\n      swap2\n      swap1\n      tag_648\n      jump\t// in\n    tag_647:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_651\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_650)\n    tag_651:\n      0x60\n      swap2\n      pop\n    tag_650:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5204:5282  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5296:5303  success */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5292:5872  if (success) {... */\n      iszero\n      tag_652\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5326:5336  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5319:5336  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_641)\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5292:5872  if (success) {... */\n    tag_652:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5457:5458  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5437:5447  returndata */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5437:5454  returndata.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5437:5458  returndata.length > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5433:5862  if (returndata.length > 0) {... */\n      iszero\n      tag_654\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5695:5705  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5689:5706  mload(returndata) */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5755:5770  returndata_size */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5742:5752  returndata */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5738:5740  32 */\n      0x20\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5734:5753  add(32, returndata) */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5727:5771  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5644:5789  {... */\n    tag_654:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5834:5846  errorMessage */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":5827:5847  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_656\n      swap2\n      swap1\n      tag_625\n      jump\t// in\n    tag_656:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":4920:5878  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {... */\n    tag_641:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_643:\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":778:782  bool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1090:1097  account */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1070:1098  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1123:1124  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1116:1120  size */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1116:1124  size > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":1109:1124  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_232:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_273:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_659:\n      0x00\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":63:92   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":97:130   */\n      tag_661\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      tag_662\n      jump\t// in\n    tag_661:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":142:266   */\n    tag_663:\n      0x00\n        /* \"--CODEGEN--\":219:225   */\n      dup2\n        /* \"--CODEGEN--\":206:226   */\n      calldataload\n        /* \"--CODEGEN--\":197:226   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":231:261   */\n      tag_665\n        /* \"--CODEGEN--\":255:260   */\n      dup2\n        /* \"--CODEGEN--\":231:261   */\n      tag_666\n      jump\t// in\n    tag_665:\n        /* \"--CODEGEN--\":191:266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":273:401   */\n    tag_667:\n      0x00\n        /* \"--CODEGEN--\":354:360   */\n      dup2\n        /* \"--CODEGEN--\":348:361   */\n      mload\n        /* \"--CODEGEN--\":339:361   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":366:396   */\n      tag_669\n        /* \"--CODEGEN--\":390:395   */\n      dup2\n        /* \"--CODEGEN--\":366:396   */\n      tag_666\n      jump\t// in\n    tag_669:\n        /* \"--CODEGEN--\":333:401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":408:568   */\n    tag_670:\n      0x00\n        /* \"--CODEGEN--\":503:509   */\n      dup2\n        /* \"--CODEGEN--\":490:510   */\n      calldataload\n        /* \"--CODEGEN--\":481:510   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":515:563   */\n      tag_672\n        /* \"--CODEGEN--\":557:562   */\n      dup2\n        /* \"--CODEGEN--\":515:563   */\n      tag_673\n      jump\t// in\n    tag_672:\n        /* \"--CODEGEN--\":475:568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":575:705   */\n    tag_674:\n      0x00\n        /* \"--CODEGEN--\":655:661   */\n      dup2\n        /* \"--CODEGEN--\":642:662   */\n      calldataload\n        /* \"--CODEGEN--\":633:662   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":667:700   */\n      tag_676\n        /* \"--CODEGEN--\":694:699   */\n      dup2\n        /* \"--CODEGEN--\":667:700   */\n      tag_677\n      jump\t// in\n    tag_676:\n        /* \"--CODEGEN--\":627:705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":712:846   */\n    tag_678:\n      0x00\n        /* \"--CODEGEN--\":796:802   */\n      dup2\n        /* \"--CODEGEN--\":790:803   */\n      mload\n        /* \"--CODEGEN--\":781:803   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":808:841   */\n      tag_680\n        /* \"--CODEGEN--\":835:840   */\n      dup2\n        /* \"--CODEGEN--\":808:841   */\n      tag_677\n      jump\t// in\n    tag_680:\n        /* \"--CODEGEN--\":775:846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":853:1094   */\n    tag_68:\n      0x00\n        /* \"--CODEGEN--\":957:959   */\n      0x20\n        /* \"--CODEGEN--\":945:954   */\n      dup3\n        /* \"--CODEGEN--\":936:943   */\n      dup5\n        /* \"--CODEGEN--\":932:955   */\n      sub\n        /* \"--CODEGEN--\":928:960   */\n      slt\n        /* \"--CODEGEN--\":925:927   */\n      iszero\n      tag_682\n      jumpi\n        /* \"--CODEGEN--\":973:974   */\n      0x00\n        /* \"--CODEGEN--\":970:971   */\n      dup1\n        /* \"--CODEGEN--\":963:975   */\n      revert\n        /* \"--CODEGEN--\":925:927   */\n    tag_682:\n        /* \"--CODEGEN--\":1008:1009   */\n      0x00\n        /* \"--CODEGEN--\":1025:1078   */\n      tag_683\n        /* \"--CODEGEN--\":1070:1077   */\n      dup5\n        /* \"--CODEGEN--\":1061:1067   */\n      dup3\n        /* \"--CODEGEN--\":1050:1059   */\n      dup6\n        /* \"--CODEGEN--\":1046:1068   */\n      add\n        /* \"--CODEGEN--\":1025:1078   */\n      tag_659\n      jump\t// in\n    tag_683:\n        /* \"--CODEGEN--\":1015:1078   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":987:1084   */\n      pop\n        /* \"--CODEGEN--\":919:1094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1101:1461   */\n    tag_172:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1219:1221   */\n      0x40\n        /* \"--CODEGEN--\":1207:1216   */\n      dup4\n        /* \"--CODEGEN--\":1198:1205   */\n      dup6\n        /* \"--CODEGEN--\":1194:1217   */\n      sub\n        /* \"--CODEGEN--\":1190:1222   */\n      slt\n        /* \"--CODEGEN--\":1187:1189   */\n      iszero\n      tag_685\n      jumpi\n        /* \"--CODEGEN--\":1235:1236   */\n      0x00\n        /* \"--CODEGEN--\":1232:1233   */\n      dup1\n        /* \"--CODEGEN--\":1225:1237   */\n      revert\n        /* \"--CODEGEN--\":1187:1189   */\n    tag_685:\n        /* \"--CODEGEN--\":1270:1271   */\n      0x00\n        /* \"--CODEGEN--\":1287:1340   */\n      tag_686\n        /* \"--CODEGEN--\":1332:1339   */\n      dup6\n        /* \"--CODEGEN--\":1323:1329   */\n      dup3\n        /* \"--CODEGEN--\":1312:1321   */\n      dup7\n        /* \"--CODEGEN--\":1308:1330   */\n      add\n        /* \"--CODEGEN--\":1287:1340   */\n      tag_659\n      jump\t// in\n    tag_686:\n        /* \"--CODEGEN--\":1277:1340   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1249:1346   */\n      pop\n        /* \"--CODEGEN--\":1377:1379   */\n      0x20\n        /* \"--CODEGEN--\":1395:1445   */\n      tag_687\n        /* \"--CODEGEN--\":1437:1444   */\n      dup6\n        /* \"--CODEGEN--\":1428:1434   */\n      dup3\n        /* \"--CODEGEN--\":1417:1426   */\n      dup7\n        /* \"--CODEGEN--\":1413:1435   */\n      add\n        /* \"--CODEGEN--\":1395:1445   */\n      tag_663\n      jump\t// in\n    tag_687:\n        /* \"--CODEGEN--\":1385:1445   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1356:1451   */\n      pop\n        /* \"--CODEGEN--\":1181:1461   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1468:1834   */\n    tag_55:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1589:1591   */\n      0x40\n        /* \"--CODEGEN--\":1577:1586   */\n      dup4\n        /* \"--CODEGEN--\":1568:1575   */\n      dup6\n        /* \"--CODEGEN--\":1564:1587   */\n      sub\n        /* \"--CODEGEN--\":1560:1592   */\n      slt\n        /* \"--CODEGEN--\":1557:1559   */\n      iszero\n      tag_689\n      jumpi\n        /* \"--CODEGEN--\":1605:1606   */\n      0x00\n        /* \"--CODEGEN--\":1602:1603   */\n      dup1\n        /* \"--CODEGEN--\":1595:1607   */\n      revert\n        /* \"--CODEGEN--\":1557:1559   */\n    tag_689:\n        /* \"--CODEGEN--\":1640:1641   */\n      0x00\n        /* \"--CODEGEN--\":1657:1710   */\n      tag_690\n        /* \"--CODEGEN--\":1702:1709   */\n      dup6\n        /* \"--CODEGEN--\":1693:1699   */\n      dup3\n        /* \"--CODEGEN--\":1682:1691   */\n      dup7\n        /* \"--CODEGEN--\":1678:1700   */\n      add\n        /* \"--CODEGEN--\":1657:1710   */\n      tag_659\n      jump\t// in\n    tag_690:\n        /* \"--CODEGEN--\":1647:1710   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1619:1716   */\n      pop\n        /* \"--CODEGEN--\":1747:1749   */\n      0x20\n        /* \"--CODEGEN--\":1765:1818   */\n      tag_691\n        /* \"--CODEGEN--\":1810:1817   */\n      dup6\n        /* \"--CODEGEN--\":1801:1807   */\n      dup3\n        /* \"--CODEGEN--\":1790:1799   */\n      dup7\n        /* \"--CODEGEN--\":1786:1808   */\n      add\n        /* \"--CODEGEN--\":1765:1818   */\n      tag_674\n      jump\t// in\n    tag_691:\n        /* \"--CODEGEN--\":1755:1818   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1726:1824   */\n      pop\n        /* \"--CODEGEN--\":1551:1834   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":1841:2332   */\n    tag_61:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1979:1981   */\n      0x60\n        /* \"--CODEGEN--\":1967:1976   */\n      dup5\n        /* \"--CODEGEN--\":1958:1965   */\n      dup7\n        /* \"--CODEGEN--\":1954:1977   */\n      sub\n        /* \"--CODEGEN--\":1950:1982   */\n      slt\n        /* \"--CODEGEN--\":1947:1949   */\n      iszero\n      tag_693\n      jumpi\n        /* \"--CODEGEN--\":1995:1996   */\n      0x00\n        /* \"--CODEGEN--\":1992:1993   */\n      dup1\n        /* \"--CODEGEN--\":1985:1997   */\n      revert\n        /* \"--CODEGEN--\":1947:1949   */\n    tag_693:\n        /* \"--CODEGEN--\":2030:2031   */\n      0x00\n        /* \"--CODEGEN--\":2047:2100   */\n      tag_694\n        /* \"--CODEGEN--\":2092:2099   */\n      dup7\n        /* \"--CODEGEN--\":2083:2089   */\n      dup3\n        /* \"--CODEGEN--\":2072:2081   */\n      dup8\n        /* \"--CODEGEN--\":2068:2090   */\n      add\n        /* \"--CODEGEN--\":2047:2100   */\n      tag_659\n      jump\t// in\n    tag_694:\n        /* \"--CODEGEN--\":2037:2100   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":2009:2106   */\n      pop\n        /* \"--CODEGEN--\":2137:2139   */\n      0x20\n        /* \"--CODEGEN--\":2155:2208   */\n      tag_695\n        /* \"--CODEGEN--\":2200:2207   */\n      dup7\n        /* \"--CODEGEN--\":2191:2197   */\n      dup3\n        /* \"--CODEGEN--\":2180:2189   */\n      dup8\n        /* \"--CODEGEN--\":2176:2198   */\n      add\n        /* \"--CODEGEN--\":2155:2208   */\n      tag_674\n      jump\t// in\n    tag_695:\n        /* \"--CODEGEN--\":2145:2208   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":2116:2214   */\n      pop\n        /* \"--CODEGEN--\":2245:2247   */\n      0x40\n        /* \"--CODEGEN--\":2263:2316   */\n      tag_696\n        /* \"--CODEGEN--\":2308:2315   */\n      dup7\n        /* \"--CODEGEN--\":2299:2305   */\n      dup3\n        /* \"--CODEGEN--\":2288:2297   */\n      dup8\n        /* \"--CODEGEN--\":2284:2306   */\n      add\n        /* \"--CODEGEN--\":2263:2316   */\n      tag_674\n      jump\t// in\n    tag_696:\n        /* \"--CODEGEN--\":2253:2316   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2224:2322   */\n      pop\n        /* \"--CODEGEN--\":1941:2332   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":2339:2574   */\n    tag_90:\n      0x00\n        /* \"--CODEGEN--\":2440:2442   */\n      0x20\n        /* \"--CODEGEN--\":2428:2437   */\n      dup3\n        /* \"--CODEGEN--\":2419:2426   */\n      dup5\n        /* \"--CODEGEN--\":2415:2438   */\n      sub\n        /* \"--CODEGEN--\":2411:2443   */\n      slt\n        /* \"--CODEGEN--\":2408:2410   */\n      iszero\n      tag_698\n      jumpi\n        /* \"--CODEGEN--\":2456:2457   */\n      0x00\n        /* \"--CODEGEN--\":2453:2454   */\n      dup1\n        /* \"--CODEGEN--\":2446:2458   */\n      revert\n        /* \"--CODEGEN--\":2408:2410   */\n    tag_698:\n        /* \"--CODEGEN--\":2491:2492   */\n      0x00\n        /* \"--CODEGEN--\":2508:2558   */\n      tag_699\n        /* \"--CODEGEN--\":2550:2557   */\n      dup5\n        /* \"--CODEGEN--\":2541:2547   */\n      dup3\n        /* \"--CODEGEN--\":2530:2539   */\n      dup6\n        /* \"--CODEGEN--\":2526:2548   */\n      add\n        /* \"--CODEGEN--\":2508:2558   */\n      tag_663\n      jump\t// in\n    tag_699:\n        /* \"--CODEGEN--\":2498:2558   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2470:2564   */\n      pop\n        /* \"--CODEGEN--\":2402:2574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2581:2838   */\n    tag_317:\n      0x00\n        /* \"--CODEGEN--\":2693:2695   */\n      0x20\n        /* \"--CODEGEN--\":2681:2690   */\n      dup3\n        /* \"--CODEGEN--\":2672:2679   */\n      dup5\n        /* \"--CODEGEN--\":2668:2691   */\n      sub\n        /* \"--CODEGEN--\":2664:2696   */\n      slt\n        /* \"--CODEGEN--\":2661:2663   */\n      iszero\n      tag_701\n      jumpi\n        /* \"--CODEGEN--\":2709:2710   */\n      0x00\n        /* \"--CODEGEN--\":2706:2707   */\n      dup1\n        /* \"--CODEGEN--\":2699:2711   */\n      revert\n        /* \"--CODEGEN--\":2661:2663   */\n    tag_701:\n        /* \"--CODEGEN--\":2744:2745   */\n      0x00\n        /* \"--CODEGEN--\":2761:2822   */\n      tag_702\n        /* \"--CODEGEN--\":2814:2821   */\n      dup5\n        /* \"--CODEGEN--\":2805:2811   */\n      dup3\n        /* \"--CODEGEN--\":2794:2803   */\n      dup6\n        /* \"--CODEGEN--\":2790:2812   */\n      add\n        /* \"--CODEGEN--\":2761:2822   */\n      tag_667\n      jump\t// in\n    tag_702:\n        /* \"--CODEGEN--\":2751:2822   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2723:2828   */\n      pop\n        /* \"--CODEGEN--\":2655:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":2845:3116   */\n    tag_83:\n      0x00\n        /* \"--CODEGEN--\":2964:2966   */\n      0x20\n        /* \"--CODEGEN--\":2952:2961   */\n      dup3\n        /* \"--CODEGEN--\":2943:2950   */\n      dup5\n        /* \"--CODEGEN--\":2939:2962   */\n      sub\n        /* \"--CODEGEN--\":2935:2967   */\n      slt\n        /* \"--CODEGEN--\":2932:2934   */\n      iszero\n      tag_704\n      jumpi\n        /* \"--CODEGEN--\":2980:2981   */\n      0x00\n        /* \"--CODEGEN--\":2977:2978   */\n      dup1\n        /* \"--CODEGEN--\":2970:2982   */\n      revert\n        /* \"--CODEGEN--\":2932:2934   */\n    tag_704:\n        /* \"--CODEGEN--\":3015:3016   */\n      0x00\n        /* \"--CODEGEN--\":3032:3100   */\n      tag_705\n        /* \"--CODEGEN--\":3092:3099   */\n      dup5\n        /* \"--CODEGEN--\":3083:3089   */\n      dup3\n        /* \"--CODEGEN--\":3072:3081   */\n      dup6\n        /* \"--CODEGEN--\":3068:3090   */\n      add\n        /* \"--CODEGEN--\":3032:3100   */\n      tag_670\n      jump\t// in\n    tag_705:\n        /* \"--CODEGEN--\":3022:3100   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2994:3106   */\n      pop\n        /* \"--CODEGEN--\":2926:3116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3123:3364   */\n    tag_77:\n      0x00\n        /* \"--CODEGEN--\":3227:3229   */\n      0x20\n        /* \"--CODEGEN--\":3215:3224   */\n      dup3\n        /* \"--CODEGEN--\":3206:3213   */\n      dup5\n        /* \"--CODEGEN--\":3202:3225   */\n      sub\n        /* \"--CODEGEN--\":3198:3230   */\n      slt\n        /* \"--CODEGEN--\":3195:3197   */\n      iszero\n      tag_707\n      jumpi\n        /* \"--CODEGEN--\":3243:3244   */\n      0x00\n        /* \"--CODEGEN--\":3240:3241   */\n      dup1\n        /* \"--CODEGEN--\":3233:3245   */\n      revert\n        /* \"--CODEGEN--\":3195:3197   */\n    tag_707:\n        /* \"--CODEGEN--\":3278:3279   */\n      0x00\n        /* \"--CODEGEN--\":3295:3348   */\n      tag_708\n        /* \"--CODEGEN--\":3340:3347   */\n      dup5\n        /* \"--CODEGEN--\":3331:3337   */\n      dup3\n        /* \"--CODEGEN--\":3320:3329   */\n      dup6\n        /* \"--CODEGEN--\":3316:3338   */\n      add\n        /* \"--CODEGEN--\":3295:3348   */\n      tag_674\n      jump\t// in\n    tag_708:\n        /* \"--CODEGEN--\":3285:3348   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3257:3354   */\n      pop\n        /* \"--CODEGEN--\":3189:3364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3371:3634   */\n    tag_305:\n      0x00\n        /* \"--CODEGEN--\":3486:3488   */\n      0x20\n        /* \"--CODEGEN--\":3474:3483   */\n      dup3\n        /* \"--CODEGEN--\":3465:3472   */\n      dup5\n        /* \"--CODEGEN--\":3461:3484   */\n      sub\n        /* \"--CODEGEN--\":3457:3489   */\n      slt\n        /* \"--CODEGEN--\":3454:3456   */\n      iszero\n      tag_710\n      jumpi\n        /* \"--CODEGEN--\":3502:3503   */\n      0x00\n        /* \"--CODEGEN--\":3499:3500   */\n      dup1\n        /* \"--CODEGEN--\":3492:3504   */\n      revert\n        /* \"--CODEGEN--\":3454:3456   */\n    tag_710:\n        /* \"--CODEGEN--\":3537:3538   */\n      0x00\n        /* \"--CODEGEN--\":3554:3618   */\n      tag_711\n        /* \"--CODEGEN--\":3610:3617   */\n      dup5\n        /* \"--CODEGEN--\":3601:3607   */\n      dup3\n        /* \"--CODEGEN--\":3590:3599   */\n      dup6\n        /* \"--CODEGEN--\":3586:3608   */\n      add\n        /* \"--CODEGEN--\":3554:3618   */\n      tag_678\n      jump\t// in\n    tag_711:\n        /* \"--CODEGEN--\":3544:3618   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3516:3624   */\n      pop\n        /* \"--CODEGEN--\":3448:3634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":3641:4007   */\n    tag_72:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":3762:3764   */\n      0x40\n        /* \"--CODEGEN--\":3750:3759   */\n      dup4\n        /* \"--CODEGEN--\":3741:3748   */\n      dup6\n        /* \"--CODEGEN--\":3737:3760   */\n      sub\n        /* \"--CODEGEN--\":3733:3765   */\n      slt\n        /* \"--CODEGEN--\":3730:3732   */\n      iszero\n      tag_713\n      jumpi\n        /* \"--CODEGEN--\":3778:3779   */\n      0x00\n        /* \"--CODEGEN--\":3775:3776   */\n      dup1\n        /* \"--CODEGEN--\":3768:3780   */\n      revert\n        /* \"--CODEGEN--\":3730:3732   */\n    tag_713:\n        /* \"--CODEGEN--\":3813:3814   */\n      0x00\n        /* \"--CODEGEN--\":3830:3883   */\n      tag_714\n        /* \"--CODEGEN--\":3875:3882   */\n      dup6\n        /* \"--CODEGEN--\":3866:3872   */\n      dup3\n        /* \"--CODEGEN--\":3855:3864   */\n      dup7\n        /* \"--CODEGEN--\":3851:3873   */\n      add\n        /* \"--CODEGEN--\":3830:3883   */\n      tag_674\n      jump\t// in\n    tag_714:\n        /* \"--CODEGEN--\":3820:3883   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":3792:3889   */\n      pop\n        /* \"--CODEGEN--\":3920:3922   */\n      0x20\n        /* \"--CODEGEN--\":3938:3991   */\n      tag_715\n        /* \"--CODEGEN--\":3983:3990   */\n      dup6\n        /* \"--CODEGEN--\":3974:3980   */\n      dup3\n        /* \"--CODEGEN--\":3963:3972   */\n      dup7\n        /* \"--CODEGEN--\":3959:3981   */\n      add\n        /* \"--CODEGEN--\":3938:3991   */\n      tag_659\n      jump\t// in\n    tag_715:\n        /* \"--CODEGEN--\":3928:3991   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3899:3997   */\n      pop\n        /* \"--CODEGEN--\":3724:4007   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4014:4649   */\n    tag_179:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4178:4181   */\n      0x80\n        /* \"--CODEGEN--\":4166:4175   */\n      dup6\n        /* \"--CODEGEN--\":4157:4164   */\n      dup8\n        /* \"--CODEGEN--\":4153:4176   */\n      sub\n        /* \"--CODEGEN--\":4149:4182   */\n      slt\n        /* \"--CODEGEN--\":4146:4148   */\n      iszero\n      tag_717\n      jumpi\n        /* \"--CODEGEN--\":4195:4196   */\n      0x00\n        /* \"--CODEGEN--\":4192:4193   */\n      dup1\n        /* \"--CODEGEN--\":4185:4197   */\n      revert\n        /* \"--CODEGEN--\":4146:4148   */\n    tag_717:\n        /* \"--CODEGEN--\":4230:4231   */\n      0x00\n        /* \"--CODEGEN--\":4247:4300   */\n      tag_718\n        /* \"--CODEGEN--\":4292:4299   */\n      dup8\n        /* \"--CODEGEN--\":4283:4289   */\n      dup3\n        /* \"--CODEGEN--\":4272:4281   */\n      dup9\n        /* \"--CODEGEN--\":4268:4290   */\n      add\n        /* \"--CODEGEN--\":4247:4300   */\n      tag_674\n      jump\t// in\n    tag_718:\n        /* \"--CODEGEN--\":4237:4300   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":4209:4306   */\n      pop\n        /* \"--CODEGEN--\":4337:4339   */\n      0x20\n        /* \"--CODEGEN--\":4355:4423   */\n      tag_719\n        /* \"--CODEGEN--\":4415:4422   */\n      dup8\n        /* \"--CODEGEN--\":4406:4412   */\n      dup3\n        /* \"--CODEGEN--\":4395:4404   */\n      dup9\n        /* \"--CODEGEN--\":4391:4413   */\n      add\n        /* \"--CODEGEN--\":4355:4423   */\n      tag_670\n      jump\t// in\n    tag_719:\n        /* \"--CODEGEN--\":4345:4423   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4316:4429   */\n      pop\n        /* \"--CODEGEN--\":4460:4462   */\n      0x40\n        /* \"--CODEGEN--\":4478:4528   */\n      tag_720\n        /* \"--CODEGEN--\":4520:4527   */\n      dup8\n        /* \"--CODEGEN--\":4511:4517   */\n      dup3\n        /* \"--CODEGEN--\":4500:4509   */\n      dup9\n        /* \"--CODEGEN--\":4496:4518   */\n      add\n        /* \"--CODEGEN--\":4478:4528   */\n      tag_663\n      jump\t// in\n    tag_720:\n        /* \"--CODEGEN--\":4468:4528   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":4439:4534   */\n      pop\n        /* \"--CODEGEN--\":4565:4567   */\n      0x60\n        /* \"--CODEGEN--\":4583:4633   */\n      tag_721\n        /* \"--CODEGEN--\":4625:4632   */\n      dup8\n        /* \"--CODEGEN--\":4616:4622   */\n      dup3\n        /* \"--CODEGEN--\":4605:4614   */\n      dup9\n        /* \"--CODEGEN--\":4601:4623   */\n      add\n        /* \"--CODEGEN--\":4583:4633   */\n      tag_663\n      jump\t// in\n    tag_721:\n        /* \"--CODEGEN--\":4573:4633   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4544:4639   */\n      pop\n        /* \"--CODEGEN--\":4140:4649   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":4656:5022   */\n    tag_103:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":4777:4779   */\n      0x40\n        /* \"--CODEGEN--\":4765:4774   */\n      dup4\n        /* \"--CODEGEN--\":4756:4763   */\n      dup6\n        /* \"--CODEGEN--\":4752:4775   */\n      sub\n        /* \"--CODEGEN--\":4748:4780   */\n      slt\n        /* \"--CODEGEN--\":4745:4747   */\n      iszero\n      tag_723\n      jumpi\n        /* \"--CODEGEN--\":4793:4794   */\n      0x00\n        /* \"--CODEGEN--\":4790:4791   */\n      dup1\n        /* \"--CODEGEN--\":4783:4795   */\n      revert\n        /* \"--CODEGEN--\":4745:4747   */\n    tag_723:\n        /* \"--CODEGEN--\":4828:4829   */\n      0x00\n        /* \"--CODEGEN--\":4845:4898   */\n      tag_724\n        /* \"--CODEGEN--\":4890:4897   */\n      dup6\n        /* \"--CODEGEN--\":4881:4887   */\n      dup3\n        /* \"--CODEGEN--\":4870:4879   */\n      dup7\n        /* \"--CODEGEN--\":4866:4888   */\n      add\n        /* \"--CODEGEN--\":4845:4898   */\n      tag_674\n      jump\t// in\n    tag_724:\n        /* \"--CODEGEN--\":4835:4898   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":4807:4904   */\n      pop\n        /* \"--CODEGEN--\":4935:4937   */\n      0x20\n        /* \"--CODEGEN--\":4953:5006   */\n      tag_725\n        /* \"--CODEGEN--\":4998:5005   */\n      dup6\n        /* \"--CODEGEN--\":4989:4995   */\n      dup3\n        /* \"--CODEGEN--\":4978:4987   */\n      dup7\n        /* \"--CODEGEN--\":4974:4996   */\n      add\n        /* \"--CODEGEN--\":4953:5006   */\n      tag_674\n      jump\t// in\n    tag_725:\n        /* \"--CODEGEN--\":4943:5006   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":4914:5012   */\n      pop\n        /* \"--CODEGEN--\":4739:5022   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5029:5514   */\n    tag_126:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":5164:5166   */\n      0x60\n        /* \"--CODEGEN--\":5152:5161   */\n      dup5\n        /* \"--CODEGEN--\":5143:5150   */\n      dup7\n        /* \"--CODEGEN--\":5139:5162   */\n      sub\n        /* \"--CODEGEN--\":5135:5167   */\n      slt\n        /* \"--CODEGEN--\":5132:5134   */\n      iszero\n      tag_727\n      jumpi\n        /* \"--CODEGEN--\":5180:5181   */\n      0x00\n        /* \"--CODEGEN--\":5177:5178   */\n      dup1\n        /* \"--CODEGEN--\":5170:5182   */\n      revert\n        /* \"--CODEGEN--\":5132:5134   */\n    tag_727:\n        /* \"--CODEGEN--\":5215:5216   */\n      0x00\n        /* \"--CODEGEN--\":5232:5285   */\n      tag_728\n        /* \"--CODEGEN--\":5277:5284   */\n      dup7\n        /* \"--CODEGEN--\":5268:5274   */\n      dup3\n        /* \"--CODEGEN--\":5257:5266   */\n      dup8\n        /* \"--CODEGEN--\":5253:5275   */\n      add\n        /* \"--CODEGEN--\":5232:5285   */\n      tag_674\n      jump\t// in\n    tag_728:\n        /* \"--CODEGEN--\":5222:5285   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":5194:5291   */\n      pop\n        /* \"--CODEGEN--\":5322:5324   */\n      0x20\n        /* \"--CODEGEN--\":5340:5393   */\n      tag_729\n        /* \"--CODEGEN--\":5385:5392   */\n      dup7\n        /* \"--CODEGEN--\":5376:5382   */\n      dup3\n        /* \"--CODEGEN--\":5365:5374   */\n      dup8\n        /* \"--CODEGEN--\":5361:5383   */\n      add\n        /* \"--CODEGEN--\":5340:5393   */\n      tag_674\n      jump\t// in\n    tag_729:\n        /* \"--CODEGEN--\":5330:5393   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5301:5399   */\n      pop\n        /* \"--CODEGEN--\":5430:5432   */\n      0x40\n        /* \"--CODEGEN--\":5448:5498   */\n      tag_730\n        /* \"--CODEGEN--\":5490:5497   */\n      dup7\n        /* \"--CODEGEN--\":5481:5487   */\n      dup3\n        /* \"--CODEGEN--\":5470:5479   */\n      dup8\n        /* \"--CODEGEN--\":5466:5488   */\n      add\n        /* \"--CODEGEN--\":5448:5498   */\n      tag_663\n      jump\t// in\n    tag_730:\n        /* \"--CODEGEN--\":5438:5498   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5409:5504   */\n      pop\n        /* \"--CODEGEN--\":5126:5514   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"--CODEGEN--\":5521:6132   */\n    tag_186:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":5673:5676   */\n      0x80\n        /* \"--CODEGEN--\":5661:5670   */\n      dup6\n        /* \"--CODEGEN--\":5652:5659   */\n      dup8\n        /* \"--CODEGEN--\":5648:5671   */\n      sub\n        /* \"--CODEGEN--\":5644:5677   */\n      slt\n        /* \"--CODEGEN--\":5641:5643   */\n      iszero\n      tag_732\n      jumpi\n        /* \"--CODEGEN--\":5690:5691   */\n      0x00\n        /* \"--CODEGEN--\":5687:5688   */\n      dup1\n        /* \"--CODEGEN--\":5680:5692   */\n      revert\n        /* \"--CODEGEN--\":5641:5643   */\n    tag_732:\n        /* \"--CODEGEN--\":5725:5726   */\n      0x00\n        /* \"--CODEGEN--\":5742:5795   */\n      tag_733\n        /* \"--CODEGEN--\":5787:5794   */\n      dup8\n        /* \"--CODEGEN--\":5778:5784   */\n      dup3\n        /* \"--CODEGEN--\":5767:5776   */\n      dup9\n        /* \"--CODEGEN--\":5763:5785   */\n      add\n        /* \"--CODEGEN--\":5742:5795   */\n      tag_674\n      jump\t// in\n    tag_733:\n        /* \"--CODEGEN--\":5732:5795   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":5704:5801   */\n      pop\n        /* \"--CODEGEN--\":5832:5834   */\n      0x20\n        /* \"--CODEGEN--\":5850:5903   */\n      tag_734\n        /* \"--CODEGEN--\":5895:5902   */\n      dup8\n        /* \"--CODEGEN--\":5886:5892   */\n      dup3\n        /* \"--CODEGEN--\":5875:5884   */\n      dup9\n        /* \"--CODEGEN--\":5871:5893   */\n      add\n        /* \"--CODEGEN--\":5850:5903   */\n      tag_674\n      jump\t// in\n    tag_734:\n        /* \"--CODEGEN--\":5840:5903   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":5811:5909   */\n      pop\n        /* \"--CODEGEN--\":5940:5942   */\n      0x40\n        /* \"--CODEGEN--\":5958:6011   */\n      tag_735\n        /* \"--CODEGEN--\":6003:6010   */\n      dup8\n        /* \"--CODEGEN--\":5994:6000   */\n      dup3\n        /* \"--CODEGEN--\":5983:5992   */\n      dup9\n        /* \"--CODEGEN--\":5979:6001   */\n      add\n        /* \"--CODEGEN--\":5958:6011   */\n      tag_674\n      jump\t// in\n    tag_735:\n        /* \"--CODEGEN--\":5948:6011   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":5919:6017   */\n      pop\n        /* \"--CODEGEN--\":6048:6050   */\n      0x60\n        /* \"--CODEGEN--\":6066:6116   */\n      tag_736\n        /* \"--CODEGEN--\":6108:6115   */\n      dup8\n        /* \"--CODEGEN--\":6099:6105   */\n      dup3\n        /* \"--CODEGEN--\":6088:6097   */\n      dup9\n        /* \"--CODEGEN--\":6084:6106   */\n      add\n        /* \"--CODEGEN--\":6066:6116   */\n      tag_663\n      jump\t// in\n    tag_736:\n        /* \"--CODEGEN--\":6056:6116   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6027:6122   */\n      pop\n        /* \"--CODEGEN--\":5635:6132   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6139:6281   */\n    tag_737:\n        /* \"--CODEGEN--\":6230:6275   */\n      tag_739\n        /* \"--CODEGEN--\":6269:6274   */\n      dup2\n        /* \"--CODEGEN--\":6230:6275   */\n      tag_740\n      jump\t// in\n    tag_739:\n        /* \"--CODEGEN--\":6225:6228   */\n      dup3\n        /* \"--CODEGEN--\":6218:6276   */\n      mstore\n        /* \"--CODEGEN--\":6212:6281   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6288:6401   */\n    tag_741:\n        /* \"--CODEGEN--\":6371:6395   */\n      tag_743\n        /* \"--CODEGEN--\":6389:6394   */\n      dup2\n        /* \"--CODEGEN--\":6371:6395   */\n      tag_744\n      jump\t// in\n    tag_743:\n        /* \"--CODEGEN--\":6366:6369   */\n      dup3\n        /* \"--CODEGEN--\":6359:6396   */\n      mstore\n        /* \"--CODEGEN--\":6353:6401   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6408:6502   */\n    tag_745:\n        /* \"--CODEGEN--\":6475:6496   */\n      tag_747\n        /* \"--CODEGEN--\":6490:6495   */\n      dup2\n        /* \"--CODEGEN--\":6475:6496   */\n      tag_748\n      jump\t// in\n    tag_747:\n        /* \"--CODEGEN--\":6470:6473   */\n      dup3\n        /* \"--CODEGEN--\":6463:6497   */\n      mstore\n        /* \"--CODEGEN--\":6457:6502   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6509:6613   */\n    tag_749:\n        /* \"--CODEGEN--\":6586:6607   */\n      tag_751\n        /* \"--CODEGEN--\":6601:6606   */\n      dup2\n        /* \"--CODEGEN--\":6586:6607   */\n      tag_748\n      jump\t// in\n    tag_751:\n        /* \"--CODEGEN--\":6581:6584   */\n      dup3\n        /* \"--CODEGEN--\":6574:6608   */\n      mstore\n        /* \"--CODEGEN--\":6568:6613   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6620:6976   */\n    tag_752:\n      0x00\n        /* \"--CODEGEN--\":6748:6786   */\n      tag_754\n        /* \"--CODEGEN--\":6780:6785   */\n      dup3\n        /* \"--CODEGEN--\":6748:6786   */\n      tag_755\n      jump\t// in\n    tag_754:\n        /* \"--CODEGEN--\":6798:6886   */\n      tag_756\n        /* \"--CODEGEN--\":6879:6885   */\n      dup2\n        /* \"--CODEGEN--\":6874:6877   */\n      dup6\n        /* \"--CODEGEN--\":6798:6886   */\n      tag_757\n      jump\t// in\n    tag_756:\n        /* \"--CODEGEN--\":6791:6886   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":6891:6943   */\n      tag_758\n        /* \"--CODEGEN--\":6936:6942   */\n      dup2\n        /* \"--CODEGEN--\":6931:6934   */\n      dup6\n        /* \"--CODEGEN--\":6924:6928   */\n      0x20\n        /* \"--CODEGEN--\":6917:6922   */\n      dup7\n        /* \"--CODEGEN--\":6913:6929   */\n      add\n        /* \"--CODEGEN--\":6891:6943   */\n      tag_759\n      jump\t// in\n    tag_758:\n        /* \"--CODEGEN--\":6964:6970   */\n      dup1\n        /* \"--CODEGEN--\":6959:6962   */\n      dup5\n        /* \"--CODEGEN--\":6955:6971   */\n      add\n        /* \"--CODEGEN--\":6948:6971   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":6728:6976   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":6983:7139   */\n    tag_760:\n        /* \"--CODEGEN--\":7081:7133   */\n      tag_762\n        /* \"--CODEGEN--\":7127:7132   */\n      dup2\n        /* \"--CODEGEN--\":7081:7133   */\n      tag_763\n      jump\t// in\n    tag_762:\n        /* \"--CODEGEN--\":7076:7079   */\n      dup3\n        /* \"--CODEGEN--\":7069:7134   */\n      mstore\n        /* \"--CODEGEN--\":7063:7139   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":7146:7312   */\n    tag_764:\n        /* \"--CODEGEN--\":7249:7306   */\n      tag_766\n        /* \"--CODEGEN--\":7300:7305   */\n      dup2\n        /* \"--CODEGEN--\":7249:7306   */\n      tag_767\n      jump\t// in\n    tag_766:\n        /* \"--CODEGEN--\":7244:7247   */\n      dup3\n        /* \"--CODEGEN--\":7237:7307   */\n      mstore\n        /* \"--CODEGEN--\":7231:7312   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":7319:7461   */\n    tag_768:\n        /* \"--CODEGEN--\":7410:7455   */\n      tag_770\n        /* \"--CODEGEN--\":7449:7454   */\n      dup2\n        /* \"--CODEGEN--\":7410:7455   */\n      tag_771\n      jump\t// in\n    tag_770:\n        /* \"--CODEGEN--\":7405:7408   */\n      dup3\n        /* \"--CODEGEN--\":7398:7456   */\n      mstore\n        /* \"--CODEGEN--\":7392:7461   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":7468:7815   */\n    tag_772:\n      0x00\n        /* \"--CODEGEN--\":7580:7619   */\n      tag_774\n        /* \"--CODEGEN--\":7613:7618   */\n      dup3\n        /* \"--CODEGEN--\":7580:7619   */\n      tag_775\n      jump\t// in\n    tag_774:\n        /* \"--CODEGEN--\":7631:7702   */\n      tag_776\n        /* \"--CODEGEN--\":7695:7701   */\n      dup2\n        /* \"--CODEGEN--\":7690:7693   */\n      dup6\n        /* \"--CODEGEN--\":7631:7702   */\n      tag_777\n      jump\t// in\n    tag_776:\n        /* \"--CODEGEN--\":7624:7702   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":7707:7759   */\n      tag_778\n        /* \"--CODEGEN--\":7752:7758   */\n      dup2\n        /* \"--CODEGEN--\":7747:7750   */\n      dup6\n        /* \"--CODEGEN--\":7740:7744   */\n      0x20\n        /* \"--CODEGEN--\":7733:7738   */\n      dup7\n        /* \"--CODEGEN--\":7729:7745   */\n      add\n        /* \"--CODEGEN--\":7707:7759   */\n      tag_759\n      jump\t// in\n    tag_778:\n        /* \"--CODEGEN--\":7780:7809   */\n      tag_779\n        /* \"--CODEGEN--\":7802:7808   */\n      dup2\n        /* \"--CODEGEN--\":7780:7809   */\n      tag_780\n      jump\t// in\n    tag_779:\n        /* \"--CODEGEN--\":7775:7778   */\n      dup5\n        /* \"--CODEGEN--\":7771:7810   */\n      add\n        /* \"--CODEGEN--\":7764:7810   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7560:7815   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":7823:8195   */\n    tag_781:\n      0x00\n        /* \"--CODEGEN--\":7983:8050   */\n      tag_783\n        /* \"--CODEGEN--\":8047:8049   */\n      0x23\n        /* \"--CODEGEN--\":8042:8045   */\n      dup4\n        /* \"--CODEGEN--\":7983:8050   */\n      tag_777\n      jump\t// in\n    tag_783:\n        /* \"--CODEGEN--\":7976:8050   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":8083:8117   */\n      0x4d61737465724368656656323a2042616c616e6365206d757374206578636565\n        /* \"--CODEGEN--\":8079:8080   */\n      0x00\n        /* \"--CODEGEN--\":8074:8077   */\n      dup4\n        /* \"--CODEGEN--\":8070:8081   */\n      add\n        /* \"--CODEGEN--\":8063:8118   */\n      mstore\n        /* \"--CODEGEN--\":8152:8157   */\n      0x6420300000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8147:8149   */\n      0x20\n        /* \"--CODEGEN--\":8142:8145   */\n      dup4\n        /* \"--CODEGEN--\":8138:8150   */\n      add\n        /* \"--CODEGEN--\":8131:8158   */\n      mstore\n        /* \"--CODEGEN--\":8186:8188   */\n      0x40\n        /* \"--CODEGEN--\":8181:8184   */\n      dup3\n        /* \"--CODEGEN--\":8177:8189   */\n      add\n        /* \"--CODEGEN--\":8170:8189   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":7969:8195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":8204:8583   */\n    tag_784:\n      0x00\n        /* \"--CODEGEN--\":8364:8431   */\n      tag_786\n        /* \"--CODEGEN--\":8428:8430   */\n      0x2a\n        /* \"--CODEGEN--\":8423:8426   */\n      dup4\n        /* \"--CODEGEN--\":8364:8431   */\n      tag_777\n      jump\t// in\n    tag_786:\n        /* \"--CODEGEN--\":8357:8431   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":8464:8498   */\n      0x4d61737465724368656656323a20496e76616c6964206e657720626f6f737420\n        /* \"--CODEGEN--\":8460:8461   */\n      0x00\n        /* \"--CODEGEN--\":8455:8458   */\n      dup4\n        /* \"--CODEGEN--\":8451:8462   */\n      add\n        /* \"--CODEGEN--\":8444:8499   */\n      mstore\n        /* \"--CODEGEN--\":8533:8545   */\n      0x6d756c7469706c69657200000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8528:8530   */\n      0x20\n        /* \"--CODEGEN--\":8523:8526   */\n      dup4\n        /* \"--CODEGEN--\":8519:8531   */\n      add\n        /* \"--CODEGEN--\":8512:8546   */\n      mstore\n        /* \"--CODEGEN--\":8574:8576   */\n      0x40\n        /* \"--CODEGEN--\":8569:8572   */\n      dup3\n        /* \"--CODEGEN--\":8565:8577   */\n      add\n        /* \"--CODEGEN--\":8558:8577   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8350:8583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":8592:8971   */\n    tag_787:\n      0x00\n        /* \"--CODEGEN--\":8752:8819   */\n      tag_789\n        /* \"--CODEGEN--\":8816:8818   */\n      0x2a\n        /* \"--CODEGEN--\":8811:8814   */\n      dup4\n        /* \"--CODEGEN--\":8752:8819   */\n      tag_777\n      jump\t// in\n    tag_789:\n        /* \"--CODEGEN--\":8745:8819   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":8852:8886   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"--CODEGEN--\":8848:8849   */\n      0x00\n        /* \"--CODEGEN--\":8843:8846   */\n      dup4\n        /* \"--CODEGEN--\":8839:8850   */\n      add\n        /* \"--CODEGEN--\":8832:8887   */\n      mstore\n        /* \"--CODEGEN--\":8921:8933   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":8916:8918   */\n      0x20\n        /* \"--CODEGEN--\":8911:8914   */\n      dup4\n        /* \"--CODEGEN--\":8907:8919   */\n      add\n        /* \"--CODEGEN--\":8900:8934   */\n      mstore\n        /* \"--CODEGEN--\":8962:8964   */\n      0x40\n        /* \"--CODEGEN--\":8957:8960   */\n      dup3\n        /* \"--CODEGEN--\":8953:8965   */\n      add\n        /* \"--CODEGEN--\":8946:8965   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8738:8971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":8980:9355   */\n    tag_790:\n      0x00\n        /* \"--CODEGEN--\":9140:9207   */\n      tag_792\n        /* \"--CODEGEN--\":9204:9206   */\n      0x26\n        /* \"--CODEGEN--\":9199:9202   */\n      dup4\n        /* \"--CODEGEN--\":9140:9207   */\n      tag_777\n      jump\t// in\n    tag_792:\n        /* \"--CODEGEN--\":9133:9207   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9240:9274   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":9236:9237   */\n      0x00\n        /* \"--CODEGEN--\":9231:9234   */\n      dup4\n        /* \"--CODEGEN--\":9227:9238   */\n      add\n        /* \"--CODEGEN--\":9220:9275   */\n      mstore\n        /* \"--CODEGEN--\":9309:9317   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":9304:9306   */\n      0x20\n        /* \"--CODEGEN--\":9299:9302   */\n      dup4\n        /* \"--CODEGEN--\":9295:9307   */\n      add\n        /* \"--CODEGEN--\":9288:9318   */\n      mstore\n        /* \"--CODEGEN--\":9346:9348   */\n      0x40\n        /* \"--CODEGEN--\":9341:9344   */\n      dup3\n        /* \"--CODEGEN--\":9337:9349   */\n      add\n        /* \"--CODEGEN--\":9330:9349   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":9126:9355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":9364:9691   */\n    tag_793:\n      0x00\n        /* \"--CODEGEN--\":9524:9591   */\n      tag_795\n        /* \"--CODEGEN--\":9588:9590   */\n      0x1b\n        /* \"--CODEGEN--\":9583:9586   */\n      dup4\n        /* \"--CODEGEN--\":9524:9591   */\n      tag_777\n      jump\t// in\n    tag_795:\n        /* \"--CODEGEN--\":9517:9591   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9624:9653   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"--CODEGEN--\":9620:9621   */\n      0x00\n        /* \"--CODEGEN--\":9615:9618   */\n      dup4\n        /* \"--CODEGEN--\":9611:9622   */\n      add\n        /* \"--CODEGEN--\":9604:9654   */\n      mstore\n        /* \"--CODEGEN--\":9682:9684   */\n      0x20\n        /* \"--CODEGEN--\":9677:9680   */\n      dup3\n        /* \"--CODEGEN--\":9673:9685   */\n      add\n        /* \"--CODEGEN--\":9666:9685   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":9510:9691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":9700:10081   */\n    tag_796:\n      0x00\n        /* \"--CODEGEN--\":9860:9927   */\n      tag_798\n        /* \"--CODEGEN--\":9924:9926   */\n      0x2c\n        /* \"--CODEGEN--\":9919:9922   */\n      dup4\n        /* \"--CODEGEN--\":9860:9927   */\n      tag_777\n      jump\t// in\n    tag_798:\n        /* \"--CODEGEN--\":9853:9927   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":9960:9994   */\n      0x4d61737465724368656656323a2054686520757365722061646472657373206d\n        /* \"--CODEGEN--\":9956:9957   */\n      0x00\n        /* \"--CODEGEN--\":9951:9954   */\n      dup4\n        /* \"--CODEGEN--\":9947:9958   */\n      add\n        /* \"--CODEGEN--\":9940:9995   */\n      mstore\n        /* \"--CODEGEN--\":10029:10043   */\n      0x7573742062652076616c69640000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10024:10026   */\n      0x20\n        /* \"--CODEGEN--\":10019:10022   */\n      dup4\n        /* \"--CODEGEN--\":10015:10027   */\n      add\n        /* \"--CODEGEN--\":10008:10044   */\n      mstore\n        /* \"--CODEGEN--\":10072:10074   */\n      0x40\n        /* \"--CODEGEN--\":10067:10070   */\n      dup3\n        /* \"--CODEGEN--\":10063:10075   */\n      add\n        /* \"--CODEGEN--\":10056:10075   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":9846:10081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10090:10473   */\n    tag_799:\n      0x00\n        /* \"--CODEGEN--\":10250:10317   */\n      tag_801\n        /* \"--CODEGEN--\":10314:10316   */\n      0x2e\n        /* \"--CODEGEN--\":10309:10312   */\n      dup4\n        /* \"--CODEGEN--\":10250:10317   */\n      tag_777\n      jump\t// in\n    tag_801:\n        /* \"--CODEGEN--\":10243:10317   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":10350:10384   */\n      0x4d61737465724368656656323a204275726e2061646d696e2061646472657373\n        /* \"--CODEGEN--\":10346:10347   */\n      0x00\n        /* \"--CODEGEN--\":10341:10344   */\n      dup4\n        /* \"--CODEGEN--\":10337:10348   */\n      add\n        /* \"--CODEGEN--\":10330:10385   */\n      mstore\n        /* \"--CODEGEN--\":10419:10435   */\n      0x206d7573742062652076616c6964000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10414:10416   */\n      0x20\n        /* \"--CODEGEN--\":10409:10412   */\n      dup4\n        /* \"--CODEGEN--\":10405:10417   */\n      add\n        /* \"--CODEGEN--\":10398:10436   */\n      mstore\n        /* \"--CODEGEN--\":10464:10466   */\n      0x40\n        /* \"--CODEGEN--\":10459:10462   */\n      dup3\n        /* \"--CODEGEN--\":10455:10467   */\n      add\n        /* \"--CODEGEN--\":10448:10467   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10236:10473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10482:10865   */\n    tag_802:\n      0x00\n        /* \"--CODEGEN--\":10642:10709   */\n      tag_804\n        /* \"--CODEGEN--\":10706:10708   */\n      0x2e\n        /* \"--CODEGEN--\":10701:10704   */\n      dup4\n        /* \"--CODEGEN--\":10642:10709   */\n      tag_777\n      jump\t// in\n    tag_804:\n        /* \"--CODEGEN--\":10635:10709   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":10742:10776   */\n      0x4d61737465724368656656323a2043616b652072617465206d75737420626520\n        /* \"--CODEGEN--\":10738:10739   */\n      0x00\n        /* \"--CODEGEN--\":10733:10736   */\n      dup4\n        /* \"--CODEGEN--\":10729:10740   */\n      add\n        /* \"--CODEGEN--\":10722:10777   */\n      mstore\n        /* \"--CODEGEN--\":10811:10827   */\n      0x67726561746572207468616e2030000000000000000000000000000000000000\n        /* \"--CODEGEN--\":10806:10808   */\n      0x20\n        /* \"--CODEGEN--\":10801:10804   */\n      dup4\n        /* \"--CODEGEN--\":10797:10809   */\n      add\n        /* \"--CODEGEN--\":10790:10828   */\n      mstore\n        /* \"--CODEGEN--\":10856:10858   */\n      0x40\n        /* \"--CODEGEN--\":10851:10854   */\n      dup3\n        /* \"--CODEGEN--\":10847:10859   */\n      add\n        /* \"--CODEGEN--\":10840:10859   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":10628:10865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":10874:11314   */\n    tag_805:\n      0x00\n        /* \"--CODEGEN--\":11034:11101   */\n      tag_807\n        /* \"--CODEGEN--\":11098:11100   */\n      0x42\n        /* \"--CODEGEN--\":11093:11096   */\n      dup4\n        /* \"--CODEGEN--\":11034:11101   */\n      tag_777\n      jump\t// in\n    tag_807:\n        /* \"--CODEGEN--\":11027:11101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":11134:11168   */\n      0x4d61737465724368656656323a205468652061646472657373206973206e6f74\n        /* \"--CODEGEN--\":11130:11131   */\n      0x00\n        /* \"--CODEGEN--\":11125:11128   */\n      dup4\n        /* \"--CODEGEN--\":11121:11132   */\n      add\n        /* \"--CODEGEN--\":11114:11169   */\n      mstore\n        /* \"--CODEGEN--\":11203:11237   */\n      0x20617661696c61626c6520746f206465706f73697420696e207468697320706f\n        /* \"--CODEGEN--\":11198:11200   */\n      0x20\n        /* \"--CODEGEN--\":11193:11196   */\n      dup4\n        /* \"--CODEGEN--\":11189:11201   */\n      add\n        /* \"--CODEGEN--\":11182:11238   */\n      mstore\n        /* \"--CODEGEN--\":11272:11276   */\n      0x6f6c000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":11267:11269   */\n      0x40\n        /* \"--CODEGEN--\":11262:11265   */\n      dup4\n        /* \"--CODEGEN--\":11258:11270   */\n      add\n        /* \"--CODEGEN--\":11251:11277   */\n      mstore\n        /* \"--CODEGEN--\":11305:11307   */\n      0x60\n        /* \"--CODEGEN--\":11300:11303   */\n      dup3\n        /* \"--CODEGEN--\":11296:11308   */\n      add\n        /* \"--CODEGEN--\":11289:11308   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":11020:11314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":11323:11693   */\n    tag_808:\n      0x00\n        /* \"--CODEGEN--\":11483:11550   */\n      tag_810\n        /* \"--CODEGEN--\":11547:11549   */\n      0x21\n        /* \"--CODEGEN--\":11542:11545   */\n      dup4\n        /* \"--CODEGEN--\":11483:11550   */\n      tag_777\n      jump\t// in\n    tag_810:\n        /* \"--CODEGEN--\":11476:11550   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":11583:11617   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"--CODEGEN--\":11579:11580   */\n      0x00\n        /* \"--CODEGEN--\":11574:11577   */\n      dup4\n        /* \"--CODEGEN--\":11570:11581   */\n      add\n        /* \"--CODEGEN--\":11563:11618   */\n      mstore\n        /* \"--CODEGEN--\":11652:11655   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":11647:11649   */\n      0x20\n        /* \"--CODEGEN--\":11642:11645   */\n      dup4\n        /* \"--CODEGEN--\":11638:11650   */\n      add\n        /* \"--CODEGEN--\":11631:11656   */\n      mstore\n        /* \"--CODEGEN--\":11684:11686   */\n      0x40\n        /* \"--CODEGEN--\":11679:11682   */\n      dup3\n        /* \"--CODEGEN--\":11675:11687   */\n      add\n        /* \"--CODEGEN--\":11668:11687   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":11469:11693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":11702:12024   */\n    tag_811:\n      0x00\n        /* \"--CODEGEN--\":11862:11929   */\n      tag_813\n        /* \"--CODEGEN--\":11926:11928   */\n      0x16\n        /* \"--CODEGEN--\":11921:11924   */\n      dup4\n        /* \"--CODEGEN--\":11862:11929   */\n      tag_777\n      jump\t// in\n    tag_813:\n        /* \"--CODEGEN--\":11855:11929   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":11962:11986   */\n      0x77697468647261773a20496e73756666696369656e7400000000000000000000\n        /* \"--CODEGEN--\":11958:11959   */\n      0x00\n        /* \"--CODEGEN--\":11953:11956   */\n      dup4\n        /* \"--CODEGEN--\":11949:11960   */\n      add\n        /* \"--CODEGEN--\":11942:11987   */\n      mstore\n        /* \"--CODEGEN--\":12015:12017   */\n      0x20\n        /* \"--CODEGEN--\":12010:12013   */\n      dup3\n        /* \"--CODEGEN--\":12006:12018   */\n      add\n        /* \"--CODEGEN--\":11999:12018   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":11848:12024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":12033:12350   */\n    tag_814:\n      0x00\n        /* \"--CODEGEN--\":12193:12260   */\n      tag_816\n        /* \"--CODEGEN--\":12257:12259   */\n      0x11\n        /* \"--CODEGEN--\":12252:12255   */\n      dup4\n        /* \"--CODEGEN--\":12193:12260   */\n      tag_777\n      jump\t// in\n    tag_816:\n        /* \"--CODEGEN--\":12186:12260   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":12293:12312   */\n      0x4e6f6e6520424550323020746f6b656e73000000000000000000000000000000\n        /* \"--CODEGEN--\":12289:12290   */\n      0x00\n        /* \"--CODEGEN--\":12284:12287   */\n      dup4\n        /* \"--CODEGEN--\":12280:12291   */\n      add\n        /* \"--CODEGEN--\":12273:12313   */\n      mstore\n        /* \"--CODEGEN--\":12341:12343   */\n      0x20\n        /* \"--CODEGEN--\":12336:12339   */\n      dup3\n        /* \"--CODEGEN--\":12332:12344   */\n      add\n        /* \"--CODEGEN--\":12325:12344   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":12179:12350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":12359:12691   */\n    tag_817:\n      0x00\n        /* \"--CODEGEN--\":12519:12586   */\n      tag_819\n        /* \"--CODEGEN--\":12583:12585   */\n      0x20\n        /* \"--CODEGEN--\":12578:12581   */\n      dup4\n        /* \"--CODEGEN--\":12519:12586   */\n      tag_777\n      jump\t// in\n    tag_819:\n        /* \"--CODEGEN--\":12512:12586   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":12619:12653   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":12615:12616   */\n      0x00\n        /* \"--CODEGEN--\":12610:12613   */\n      dup4\n        /* \"--CODEGEN--\":12606:12617   */\n      add\n        /* \"--CODEGEN--\":12599:12654   */\n      mstore\n        /* \"--CODEGEN--\":12682:12684   */\n      0x20\n        /* \"--CODEGEN--\":12677:12680   */\n      dup3\n        /* \"--CODEGEN--\":12673:12685   */\n      add\n        /* \"--CODEGEN--\":12666:12685   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":12505:12691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":12700:13078   */\n    tag_820:\n      0x00\n        /* \"--CODEGEN--\":12860:12927   */\n      tag_822\n        /* \"--CODEGEN--\":12924:12926   */\n      0x29\n        /* \"--CODEGEN--\":12919:12922   */\n      dup4\n        /* \"--CODEGEN--\":12860:12927   */\n      tag_777\n      jump\t// in\n    tag_822:\n        /* \"--CODEGEN--\":12853:12927   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":12960:12994   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f7374\n        /* \"--CODEGEN--\":12956:12957   */\n      0x00\n        /* \"--CODEGEN--\":12951:12954   */\n      dup4\n        /* \"--CODEGEN--\":12947:12958   */\n      add\n        /* \"--CODEGEN--\":12940:12995   */\n      mstore\n        /* \"--CODEGEN--\":13029:13040   */\n      0x20636f6e74726163740000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":13024:13026   */\n      0x20\n        /* \"--CODEGEN--\":13019:13022   */\n      dup4\n        /* \"--CODEGEN--\":13015:13027   */\n      add\n        /* \"--CODEGEN--\":13008:13041   */\n      mstore\n        /* \"--CODEGEN--\":13069:13071   */\n      0x40\n        /* \"--CODEGEN--\":13064:13067   */\n      dup3\n        /* \"--CODEGEN--\":13060:13072   */\n      add\n        /* \"--CODEGEN--\":13053:13072   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":12846:13078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":13087:13463   */\n    tag_823:\n      0x00\n        /* \"--CODEGEN--\":13247:13314   */\n      tag_825\n        /* \"--CODEGEN--\":13311:13313   */\n      0x27\n        /* \"--CODEGEN--\":13306:13309   */\n      dup4\n        /* \"--CODEGEN--\":13247:13314   */\n      tag_777\n      jump\t// in\n    tag_825:\n        /* \"--CODEGEN--\":13240:13314   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":13347:13381   */\n      0x43414b4520746f6b656e2063616e277420626520616464656420746f20666172\n        /* \"--CODEGEN--\":13343:13344   */\n      0x00\n        /* \"--CODEGEN--\":13338:13341   */\n      dup4\n        /* \"--CODEGEN--\":13334:13345   */\n      add\n        /* \"--CODEGEN--\":13327:13382   */\n      mstore\n        /* \"--CODEGEN--\":13416:13425   */\n      0x6d20706f6f6c7300000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":13411:13413   */\n      0x20\n        /* \"--CODEGEN--\":13406:13409   */\n      dup4\n        /* \"--CODEGEN--\":13402:13414   */\n      add\n        /* \"--CODEGEN--\":13395:13426   */\n      mstore\n        /* \"--CODEGEN--\":13454:13456   */\n      0x40\n        /* \"--CODEGEN--\":13449:13452   */\n      dup3\n        /* \"--CODEGEN--\":13445:13457   */\n      add\n        /* \"--CODEGEN--\":13438:13457   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13233:13463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":13472:13857   */\n    tag_826:\n      0x00\n        /* \"--CODEGEN--\":13632:13699   */\n      tag_828\n        /* \"--CODEGEN--\":13696:13698   */\n      0x30\n        /* \"--CODEGEN--\":13691:13694   */\n      dup4\n        /* \"--CODEGEN--\":13632:13699   */\n      tag_777\n      jump\t// in\n    tag_828:\n        /* \"--CODEGEN--\":13625:13699   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":13732:13766   */\n      0x4d61737465724368656656323a204f6e6c7920726567756c6172206661726d20\n        /* \"--CODEGEN--\":13728:13729   */\n      0x00\n        /* \"--CODEGEN--\":13723:13726   */\n      dup4\n        /* \"--CODEGEN--\":13719:13730   */\n      add\n        /* \"--CODEGEN--\":13712:13767   */\n      mstore\n        /* \"--CODEGEN--\":13801:13819   */\n      0x636f756c6420626520626f6f7374656400000000000000000000000000000000\n        /* \"--CODEGEN--\":13796:13798   */\n      0x20\n        /* \"--CODEGEN--\":13791:13794   */\n      dup4\n        /* \"--CODEGEN--\":13787:13799   */\n      add\n        /* \"--CODEGEN--\":13780:13820   */\n      mstore\n        /* \"--CODEGEN--\":13848:13850   */\n      0x40\n        /* \"--CODEGEN--\":13843:13846   */\n      dup3\n        /* \"--CODEGEN--\":13839:13851   */\n      add\n        /* \"--CODEGEN--\":13832:13851   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":13618:13857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":13866:14253   */\n    tag_829:\n      0x00\n        /* \"--CODEGEN--\":14026:14093   */\n      tag_831\n        /* \"--CODEGEN--\":14090:14092   */\n      0x32\n        /* \"--CODEGEN--\":14085:14088   */\n      dup4\n        /* \"--CODEGEN--\":14026:14093   */\n      tag_777\n      jump\t// in\n    tag_831:\n        /* \"--CODEGEN--\":14019:14093   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":14126:14160   */\n      0x4d61737465724368656656323a20546865207768697465206c69737420616464\n        /* \"--CODEGEN--\":14122:14123   */\n      0x00\n        /* \"--CODEGEN--\":14117:14120   */\n      dup4\n        /* \"--CODEGEN--\":14113:14124   */\n      add\n        /* \"--CODEGEN--\":14106:14161   */\n      mstore\n        /* \"--CODEGEN--\":14195:14215   */\n      0x72657373206d7573742062652076616c69640000000000000000000000000000\n        /* \"--CODEGEN--\":14190:14192   */\n      0x20\n        /* \"--CODEGEN--\":14185:14188   */\n      dup4\n        /* \"--CODEGEN--\":14181:14193   */\n      add\n        /* \"--CODEGEN--\":14174:14216   */\n      mstore\n        /* \"--CODEGEN--\":14244:14246   */\n      0x40\n        /* \"--CODEGEN--\":14239:14242   */\n      dup3\n        /* \"--CODEGEN--\":14235:14247   */\n      add\n        /* \"--CODEGEN--\":14228:14247   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14012:14253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":14262:14591   */\n    tag_832:\n      0x00\n        /* \"--CODEGEN--\":14422:14489   */\n      tag_834\n        /* \"--CODEGEN--\":14486:14488   */\n      0x1d\n        /* \"--CODEGEN--\":14481:14484   */\n      dup4\n        /* \"--CODEGEN--\":14422:14489   */\n      tag_777\n      jump\t// in\n    tag_834:\n        /* \"--CODEGEN--\":14415:14489   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":14522:14553   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"--CODEGEN--\":14518:14519   */\n      0x00\n        /* \"--CODEGEN--\":14513:14516   */\n      dup4\n        /* \"--CODEGEN--\":14509:14520   */\n      add\n        /* \"--CODEGEN--\":14502:14554   */\n      mstore\n        /* \"--CODEGEN--\":14582:14584   */\n      0x20\n        /* \"--CODEGEN--\":14577:14580   */\n      dup3\n        /* \"--CODEGEN--\":14573:14585   */\n      add\n        /* \"--CODEGEN--\":14566:14585   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14408:14591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":14600:14974   */\n    tag_835:\n      0x00\n        /* \"--CODEGEN--\":14760:14827   */\n      tag_837\n        /* \"--CODEGEN--\":14824:14826   */\n      0x25\n        /* \"--CODEGEN--\":14819:14822   */\n      dup4\n        /* \"--CODEGEN--\":14760:14827   */\n      tag_777\n      jump\t// in\n    tag_837:\n        /* \"--CODEGEN--\":14753:14827   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":14860:14894   */\n      0x4d61737465724368656656323a20546f74616c2072617465206d757374206265\n        /* \"--CODEGEN--\":14856:14857   */\n      0x00\n        /* \"--CODEGEN--\":14851:14854   */\n      dup4\n        /* \"--CODEGEN--\":14847:14858   */\n      add\n        /* \"--CODEGEN--\":14840:14895   */\n      mstore\n        /* \"--CODEGEN--\":14929:14936   */\n      0x2031653132000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":14924:14926   */\n      0x20\n        /* \"--CODEGEN--\":14919:14922   */\n      dup4\n        /* \"--CODEGEN--\":14915:14927   */\n      add\n        /* \"--CODEGEN--\":14908:14937   */\n      mstore\n        /* \"--CODEGEN--\":14965:14967   */\n      0x40\n        /* \"--CODEGEN--\":14960:14963   */\n      dup3\n        /* \"--CODEGEN--\":14956:14968   */\n      add\n        /* \"--CODEGEN--\":14949:14968   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":14746:14974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":14983:15314   */\n    tag_838:\n      0x00\n        /* \"--CODEGEN--\":15143:15210   */\n      tag_840\n        /* \"--CODEGEN--\":15207:15209   */\n      0x1f\n        /* \"--CODEGEN--\":15202:15205   */\n      dup4\n        /* \"--CODEGEN--\":15143:15210   */\n      tag_777\n      jump\t// in\n    tag_840:\n        /* \"--CODEGEN--\":15136:15210   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":15243:15276   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"--CODEGEN--\":15239:15240   */\n      0x00\n        /* \"--CODEGEN--\":15234:15237   */\n      dup4\n        /* \"--CODEGEN--\":15230:15241   */\n      add\n        /* \"--CODEGEN--\":15223:15277   */\n      mstore\n        /* \"--CODEGEN--\":15305:15307   */\n      0x20\n        /* \"--CODEGEN--\":15300:15303   */\n      dup3\n        /* \"--CODEGEN--\":15296:15308   */\n      add\n        /* \"--CODEGEN--\":15289:15308   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15129:15314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":15323:15762   */\n    tag_841:\n      0x00\n        /* \"--CODEGEN--\":15483:15550   */\n      tag_843\n        /* \"--CODEGEN--\":15547:15549   */\n      0x41\n        /* \"--CODEGEN--\":15542:15545   */\n      dup4\n        /* \"--CODEGEN--\":15483:15550   */\n      tag_777\n      jump\t// in\n    tag_843:\n        /* \"--CODEGEN--\":15476:15550   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":15583:15617   */\n      0x4d61737465724368656656323a204275726e2061646d696e2061646472657373\n        /* \"--CODEGEN--\":15579:15580   */\n      0x00\n        /* \"--CODEGEN--\":15574:15577   */\n      dup4\n        /* \"--CODEGEN--\":15570:15581   */\n      add\n        /* \"--CODEGEN--\":15563:15618   */\n      mstore\n        /* \"--CODEGEN--\":15652:15686   */\n      0x206973207468652073616d6520776974682063757272656e7420616464726573\n        /* \"--CODEGEN--\":15647:15649   */\n      0x20\n        /* \"--CODEGEN--\":15642:15645   */\n      dup4\n        /* \"--CODEGEN--\":15638:15650   */\n      add\n        /* \"--CODEGEN--\":15631:15687   */\n      mstore\n        /* \"--CODEGEN--\":15721:15724   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":15716:15718   */\n      0x40\n        /* \"--CODEGEN--\":15711:15714   */\n      dup4\n        /* \"--CODEGEN--\":15707:15719   */\n      add\n        /* \"--CODEGEN--\":15700:15725   */\n      mstore\n        /* \"--CODEGEN--\":15753:15755   */\n      0x60\n        /* \"--CODEGEN--\":15748:15751   */\n      dup3\n        /* \"--CODEGEN--\":15744:15756   */\n      add\n        /* \"--CODEGEN--\":15737:15756   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15469:15762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":15771:16162   */\n    tag_844:\n      0x00\n        /* \"--CODEGEN--\":15931:15998   */\n      tag_846\n        /* \"--CODEGEN--\":15995:15997   */\n      0x36\n        /* \"--CODEGEN--\":15990:15993   */\n      dup4\n        /* \"--CODEGEN--\":15931:15998   */\n      tag_777\n      jump\t// in\n    tag_846:\n        /* \"--CODEGEN--\":15924:15998   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":16031:16065   */\n      0x4d61737465724368656656323a204e657720626f6f737420636f6e7472616374\n        /* \"--CODEGEN--\":16027:16028   */\n      0x00\n        /* \"--CODEGEN--\":16022:16025   */\n      dup4\n        /* \"--CODEGEN--\":16018:16029   */\n      add\n        /* \"--CODEGEN--\":16011:16066   */\n      mstore\n        /* \"--CODEGEN--\":16100:16124   */\n      0x2061646472657373206d7573742062652076616c696400000000000000000000\n        /* \"--CODEGEN--\":16095:16097   */\n      0x20\n        /* \"--CODEGEN--\":16090:16093   */\n      dup4\n        /* \"--CODEGEN--\":16086:16098   */\n      add\n        /* \"--CODEGEN--\":16079:16125   */\n      mstore\n        /* \"--CODEGEN--\":16153:16155   */\n      0x40\n        /* \"--CODEGEN--\":16148:16151   */\n      dup3\n        /* \"--CODEGEN--\":16144:16156   */\n      add\n        /* \"--CODEGEN--\":16137:16156   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":15917:16162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":16237:17215   */\n    tag_847:\n        /* \"--CODEGEN--\":16380:16384   */\n      0xa0\n        /* \"--CODEGEN--\":16375:16378   */\n      dup3\n        /* \"--CODEGEN--\":16371:16385   */\n      add\n        /* \"--CODEGEN--\":16474:16478   */\n      0x00\n        /* \"--CODEGEN--\":16467:16472   */\n      dup3\n        /* \"--CODEGEN--\":16463:16479   */\n      add\n        /* \"--CODEGEN--\":16457:16480   */\n      mload\n        /* \"--CODEGEN--\":16486:16549   */\n      tag_849\n        /* \"--CODEGEN--\":16543:16547   */\n      0x00\n        /* \"--CODEGEN--\":16538:16541   */\n      dup6\n        /* \"--CODEGEN--\":16534:16548   */\n      add\n        /* \"--CODEGEN--\":16520:16532   */\n      dup3\n        /* \"--CODEGEN--\":16486:16549   */\n      tag_850\n      jump\t// in\n    tag_849:\n        /* \"--CODEGEN--\":16400:16555   */\n      pop\n        /* \"--CODEGEN--\":16639:16643   */\n      0x20\n        /* \"--CODEGEN--\":16632:16637   */\n      dup3\n        /* \"--CODEGEN--\":16628:16644   */\n      add\n        /* \"--CODEGEN--\":16622:16645   */\n      mload\n        /* \"--CODEGEN--\":16651:16714   */\n      tag_851\n        /* \"--CODEGEN--\":16708:16712   */\n      0x20\n        /* \"--CODEGEN--\":16703:16706   */\n      dup6\n        /* \"--CODEGEN--\":16699:16713   */\n      add\n        /* \"--CODEGEN--\":16685:16697   */\n      dup3\n        /* \"--CODEGEN--\":16651:16714   */\n      tag_850\n      jump\t// in\n    tag_851:\n        /* \"--CODEGEN--\":16565:16720   */\n      pop\n        /* \"--CODEGEN--\":16799:16803   */\n      0x40\n        /* \"--CODEGEN--\":16792:16797   */\n      dup3\n        /* \"--CODEGEN--\":16788:16804   */\n      add\n        /* \"--CODEGEN--\":16782:16805   */\n      mload\n        /* \"--CODEGEN--\":16811:16874   */\n      tag_852\n        /* \"--CODEGEN--\":16868:16872   */\n      0x40\n        /* \"--CODEGEN--\":16863:16866   */\n      dup6\n        /* \"--CODEGEN--\":16859:16873   */\n      add\n        /* \"--CODEGEN--\":16845:16857   */\n      dup3\n        /* \"--CODEGEN--\":16811:16874   */\n      tag_850\n      jump\t// in\n    tag_852:\n        /* \"--CODEGEN--\":16730:16880   */\n      pop\n        /* \"--CODEGEN--\":16966:16970   */\n      0x60\n        /* \"--CODEGEN--\":16959:16964   */\n      dup3\n        /* \"--CODEGEN--\":16955:16971   */\n      add\n        /* \"--CODEGEN--\":16949:16972   */\n      mload\n        /* \"--CODEGEN--\":16978:17041   */\n      tag_853\n        /* \"--CODEGEN--\":17035:17039   */\n      0x60\n        /* \"--CODEGEN--\":17030:17033   */\n      dup6\n        /* \"--CODEGEN--\":17026:17040   */\n      add\n        /* \"--CODEGEN--\":17012:17024   */\n      dup3\n        /* \"--CODEGEN--\":16978:17041   */\n      tag_850\n      jump\t// in\n    tag_853:\n        /* \"--CODEGEN--\":16890:17047   */\n      pop\n        /* \"--CODEGEN--\":17125:17129   */\n      0x80\n        /* \"--CODEGEN--\":17118:17123   */\n      dup3\n        /* \"--CODEGEN--\":17114:17130   */\n      add\n        /* \"--CODEGEN--\":17108:17131   */\n      mload\n        /* \"--CODEGEN--\":17137:17194   */\n      tag_854\n        /* \"--CODEGEN--\":17188:17192   */\n      0x80\n        /* \"--CODEGEN--\":17183:17186   */\n      dup6\n        /* \"--CODEGEN--\":17179:17193   */\n      add\n        /* \"--CODEGEN--\":17165:17177   */\n      dup3\n        /* \"--CODEGEN--\":17137:17194   */\n      tag_745\n      jump\t// in\n    tag_854:\n        /* \"--CODEGEN--\":17057:17200   */\n      pop\n        /* \"--CODEGEN--\":16353:17215   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":17222:17325   */\n    tag_850:\n        /* \"--CODEGEN--\":17295:17319   */\n      tag_856\n        /* \"--CODEGEN--\":17313:17318   */\n      dup2\n        /* \"--CODEGEN--\":17295:17319   */\n      tag_857\n      jump\t// in\n    tag_856:\n        /* \"--CODEGEN--\":17290:17293   */\n      dup3\n        /* \"--CODEGEN--\":17283:17320   */\n      mstore\n        /* \"--CODEGEN--\":17277:17325   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":17332:17445   */\n    tag_858:\n        /* \"--CODEGEN--\":17415:17439   */\n      tag_860\n        /* \"--CODEGEN--\":17433:17438   */\n      dup2\n        /* \"--CODEGEN--\":17415:17439   */\n      tag_857\n      jump\t// in\n    tag_860:\n        /* \"--CODEGEN--\":17410:17413   */\n      dup3\n        /* \"--CODEGEN--\":17403:17440   */\n      mstore\n        /* \"--CODEGEN--\":17397:17445   */\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":17452:17723   */\n    tag_648:\n      0x00\n        /* \"--CODEGEN--\":17605:17698   */\n      tag_862\n        /* \"--CODEGEN--\":17694:17697   */\n      dup3\n        /* \"--CODEGEN--\":17685:17691   */\n      dup5\n        /* \"--CODEGEN--\":17605:17698   */\n      tag_752\n      jump\t// in\n    tag_862:\n        /* \"--CODEGEN--\":17598:17698   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":17715:17718   */\n      dup2\n        /* \"--CODEGEN--\":17708:17718   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17586:17723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":17730:17952   */\n    tag_149:\n      0x00\n        /* \"--CODEGEN--\":17857:17859   */\n      0x20\n        /* \"--CODEGEN--\":17846:17855   */\n      dup3\n        /* \"--CODEGEN--\":17842:17860   */\n      add\n        /* \"--CODEGEN--\":17834:17860   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":17871:17942   */\n      tag_864\n        /* \"--CODEGEN--\":17939:17940   */\n      0x00\n        /* \"--CODEGEN--\":17928:17937   */\n      dup4\n        /* \"--CODEGEN--\":17924:17941   */\n      add\n        /* \"--CODEGEN--\":17915:17921   */\n      dup5\n        /* \"--CODEGEN--\":17871:17942   */\n      tag_741\n      jump\t// in\n    tag_864:\n        /* \"--CODEGEN--\":17828:17952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":17959:18197   */\n    tag_300:\n      0x00\n        /* \"--CODEGEN--\":18094:18096   */\n      0x20\n        /* \"--CODEGEN--\":18083:18092   */\n      dup3\n        /* \"--CODEGEN--\":18079:18097   */\n      add\n        /* \"--CODEGEN--\":18071:18097   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18108:18187   */\n      tag_866\n        /* \"--CODEGEN--\":18184:18185   */\n      0x00\n        /* \"--CODEGEN--\":18173:18182   */\n      dup4\n        /* \"--CODEGEN--\":18169:18186   */\n      add\n        /* \"--CODEGEN--\":18160:18166   */\n      dup5\n        /* \"--CODEGEN--\":18108:18187   */\n      tag_737\n      jump\t// in\n    tag_866:\n        /* \"--CODEGEN--\":18065:18197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":18204:18648   */\n    tag_601:\n      0x00\n        /* \"--CODEGEN--\":18387:18389   */\n      0x60\n        /* \"--CODEGEN--\":18376:18385   */\n      dup3\n        /* \"--CODEGEN--\":18372:18390   */\n      add\n        /* \"--CODEGEN--\":18364:18390   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18401:18472   */\n      tag_868\n        /* \"--CODEGEN--\":18469:18470   */\n      0x00\n        /* \"--CODEGEN--\":18458:18467   */\n      dup4\n        /* \"--CODEGEN--\":18454:18471   */\n      add\n        /* \"--CODEGEN--\":18445:18451   */\n      dup7\n        /* \"--CODEGEN--\":18401:18472   */\n      tag_741\n      jump\t// in\n    tag_868:\n        /* \"--CODEGEN--\":18483:18555   */\n      tag_869\n        /* \"--CODEGEN--\":18551:18553   */\n      0x20\n        /* \"--CODEGEN--\":18540:18549   */\n      dup4\n        /* \"--CODEGEN--\":18536:18554   */\n      add\n        /* \"--CODEGEN--\":18527:18533   */\n      dup6\n        /* \"--CODEGEN--\":18483:18555   */\n      tag_741\n      jump\t// in\n    tag_869:\n        /* \"--CODEGEN--\":18566:18638   */\n      tag_870\n        /* \"--CODEGEN--\":18634:18636   */\n      0x40\n        /* \"--CODEGEN--\":18623:18632   */\n      dup4\n        /* \"--CODEGEN--\":18619:18637   */\n      add\n        /* \"--CODEGEN--\":18610:18616   */\n      dup5\n        /* \"--CODEGEN--\":18566:18638   */\n      tag_858\n      jump\t// in\n    tag_870:\n        /* \"--CODEGEN--\":18358:18648   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":18655:18988   */\n    tag_312:\n      0x00\n        /* \"--CODEGEN--\":18810:18812   */\n      0x40\n        /* \"--CODEGEN--\":18799:18808   */\n      dup3\n        /* \"--CODEGEN--\":18795:18813   */\n      add\n        /* \"--CODEGEN--\":18787:18813   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":18824:18895   */\n      tag_872\n        /* \"--CODEGEN--\":18892:18893   */\n      0x00\n        /* \"--CODEGEN--\":18881:18890   */\n      dup4\n        /* \"--CODEGEN--\":18877:18894   */\n      add\n        /* \"--CODEGEN--\":18868:18874   */\n      dup6\n        /* \"--CODEGEN--\":18824:18895   */\n      tag_741\n      jump\t// in\n    tag_872:\n        /* \"--CODEGEN--\":18906:18978   */\n      tag_873\n        /* \"--CODEGEN--\":18974:18976   */\n      0x20\n        /* \"--CODEGEN--\":18963:18972   */\n      dup4\n        /* \"--CODEGEN--\":18959:18977   */\n      add\n        /* \"--CODEGEN--\":18950:18956   */\n      dup5\n        /* \"--CODEGEN--\":18906:18978   */\n      tag_858\n      jump\t// in\n    tag_873:\n        /* \"--CODEGEN--\":18781:18988   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":18995:19205   */\n    tag_97:\n      0x00\n        /* \"--CODEGEN--\":19116:19118   */\n      0x20\n        /* \"--CODEGEN--\":19105:19114   */\n      dup3\n        /* \"--CODEGEN--\":19101:19119   */\n      add\n        /* \"--CODEGEN--\":19093:19119   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19130:19195   */\n      tag_875\n        /* \"--CODEGEN--\":19192:19193   */\n      0x00\n        /* \"--CODEGEN--\":19181:19190   */\n      dup4\n        /* \"--CODEGEN--\":19177:19194   */\n      add\n        /* \"--CODEGEN--\":19168:19174   */\n      dup5\n        /* \"--CODEGEN--\":19130:19195   */\n      tag_749\n      jump\t// in\n    tag_875:\n        /* \"--CODEGEN--\":19087:19205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19212:19464   */\n    tag_108:\n      0x00\n        /* \"--CODEGEN--\":19354:19356   */\n      0x20\n        /* \"--CODEGEN--\":19343:19352   */\n      dup3\n        /* \"--CODEGEN--\":19339:19357   */\n      add\n        /* \"--CODEGEN--\":19331:19357   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19368:19454   */\n      tag_877\n        /* \"--CODEGEN--\":19451:19452   */\n      0x00\n        /* \"--CODEGEN--\":19440:19449   */\n      dup4\n        /* \"--CODEGEN--\":19436:19453   */\n      add\n        /* \"--CODEGEN--\":19427:19433   */\n      dup5\n        /* \"--CODEGEN--\":19368:19454   */\n      tag_760\n      jump\t// in\n    tag_877:\n        /* \"--CODEGEN--\":19325:19464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19471:19733   */\n    tag_203:\n      0x00\n        /* \"--CODEGEN--\":19618:19620   */\n      0x20\n        /* \"--CODEGEN--\":19607:19616   */\n      dup3\n        /* \"--CODEGEN--\":19603:19621   */\n      add\n        /* \"--CODEGEN--\":19595:19621   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19632:19723   */\n      tag_879\n        /* \"--CODEGEN--\":19720:19721   */\n      0x00\n        /* \"--CODEGEN--\":19709:19718   */\n      dup4\n        /* \"--CODEGEN--\":19705:19722   */\n      add\n        /* \"--CODEGEN--\":19696:19702   */\n      dup5\n        /* \"--CODEGEN--\":19632:19723   */\n      tag_764\n      jump\t// in\n    tag_879:\n        /* \"--CODEGEN--\":19589:19733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":19740:20050   */\n    tag_625:\n      0x00\n        /* \"--CODEGEN--\":19887:19889   */\n      0x20\n        /* \"--CODEGEN--\":19876:19885   */\n      dup3\n        /* \"--CODEGEN--\":19872:19890   */\n      add\n        /* \"--CODEGEN--\":19864:19890   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19937:19946   */\n      dup2\n        /* \"--CODEGEN--\":19931:19935   */\n      dup2\n        /* \"--CODEGEN--\":19927:19947   */\n      sub\n        /* \"--CODEGEN--\":19923:19924   */\n      0x00\n        /* \"--CODEGEN--\":19912:19921   */\n      dup4\n        /* \"--CODEGEN--\":19908:19925   */\n      add\n        /* \"--CODEGEN--\":19901:19948   */\n      mstore\n        /* \"--CODEGEN--\":19962:20040   */\n      tag_881\n        /* \"--CODEGEN--\":20035:20039   */\n      dup2\n        /* \"--CODEGEN--\":20026:20032   */\n      dup5\n        /* \"--CODEGEN--\":19962:20040   */\n      tag_772\n      jump\t// in\n    tag_881:\n        /* \"--CODEGEN--\":19954:20040   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":19858:20050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":20057:20473   */\n    tag_308:\n      0x00\n        /* \"--CODEGEN--\":20257:20259   */\n      0x20\n        /* \"--CODEGEN--\":20246:20255   */\n      dup3\n        /* \"--CODEGEN--\":20242:20260   */\n      add\n        /* \"--CODEGEN--\":20234:20260   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":20307:20316   */\n      dup2\n        /* \"--CODEGEN--\":20301:20305   */\n      dup2\n        /* \"--CODEGEN--\":20297:20317   */\n      sub\n        /* \"--CODEGEN--\":20293:20294   */\n      0x00\n        /* \"--CODEGEN--\":20282:20291   */\n      dup4\n        /* \"--CODEGEN--\":20278:20295   */\n      add\n        /* \"--CODEGEN--\":20271:20318   */\n      mstore\n        /* \"--CODEGEN--\":20332:20463   */\n      tag_883\n        /* \"--CODEGEN--\":20458:20462   */\n      dup2\n        /* \"--CODEGEN--\":20332:20463   */\n      tag_781\n      jump\t// in\n    tag_883:\n        /* \"--CODEGEN--\":20324:20463   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":20228:20473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":20480:20896   */\n    tag_230:\n      0x00\n        /* \"--CODEGEN--\":20680:20682   */\n      0x20\n        /* \"--CODEGEN--\":20669:20678   */\n      dup3\n        /* \"--CODEGEN--\":20665:20683   */\n      add\n        /* \"--CODEGEN--\":20657:20683   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":20730:20739   */\n      dup2\n        /* \"--CODEGEN--\":20724:20728   */\n      dup2\n        /* \"--CODEGEN--\":20720:20740   */\n      sub\n        /* \"--CODEGEN--\":20716:20717   */\n      0x00\n        /* \"--CODEGEN--\":20705:20714   */\n      dup4\n        /* \"--CODEGEN--\":20701:20718   */\n      add\n        /* \"--CODEGEN--\":20694:20741   */\n      mstore\n        /* \"--CODEGEN--\":20755:20886   */\n      tag_885\n        /* \"--CODEGEN--\":20881:20885   */\n      dup2\n        /* \"--CODEGEN--\":20755:20886   */\n      tag_784\n      jump\t// in\n    tag_885:\n        /* \"--CODEGEN--\":20747:20886   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":20651:20896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":20903:21319   */\n    tag_637:\n      0x00\n        /* \"--CODEGEN--\":21103:21105   */\n      0x20\n        /* \"--CODEGEN--\":21092:21101   */\n      dup3\n        /* \"--CODEGEN--\":21088:21106   */\n      add\n        /* \"--CODEGEN--\":21080:21106   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":21153:21162   */\n      dup2\n        /* \"--CODEGEN--\":21147:21151   */\n      dup2\n        /* \"--CODEGEN--\":21143:21163   */\n      sub\n        /* \"--CODEGEN--\":21139:21140   */\n      0x00\n        /* \"--CODEGEN--\":21128:21137   */\n      dup4\n        /* \"--CODEGEN--\":21124:21141   */\n      add\n        /* \"--CODEGEN--\":21117:21164   */\n      mstore\n        /* \"--CODEGEN--\":21178:21309   */\n      tag_887\n        /* \"--CODEGEN--\":21304:21308   */\n      dup2\n        /* \"--CODEGEN--\":21178:21309   */\n      tag_787\n      jump\t// in\n    tag_887:\n        /* \"--CODEGEN--\":21170:21309   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":21074:21319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":21326:21742   */\n    tag_570:\n      0x00\n        /* \"--CODEGEN--\":21526:21528   */\n      0x20\n        /* \"--CODEGEN--\":21515:21524   */\n      dup3\n        /* \"--CODEGEN--\":21511:21529   */\n      add\n        /* \"--CODEGEN--\":21503:21529   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":21576:21585   */\n      dup2\n        /* \"--CODEGEN--\":21570:21574   */\n      dup2\n        /* \"--CODEGEN--\":21566:21586   */\n      sub\n        /* \"--CODEGEN--\":21562:21563   */\n      0x00\n        /* \"--CODEGEN--\":21551:21560   */\n      dup4\n        /* \"--CODEGEN--\":21547:21564   */\n      add\n        /* \"--CODEGEN--\":21540:21587   */\n      mstore\n        /* \"--CODEGEN--\":21601:21732   */\n      tag_889\n        /* \"--CODEGEN--\":21727:21731   */\n      dup2\n        /* \"--CODEGEN--\":21601:21732   */\n      tag_790\n      jump\t// in\n    tag_889:\n        /* \"--CODEGEN--\":21593:21732   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":21497:21742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":21749:22165   */\n    tag_596:\n      0x00\n        /* \"--CODEGEN--\":21949:21951   */\n      0x20\n        /* \"--CODEGEN--\":21938:21947   */\n      dup3\n        /* \"--CODEGEN--\":21934:21952   */\n      add\n        /* \"--CODEGEN--\":21926:21952   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":21999:22008   */\n      dup2\n        /* \"--CODEGEN--\":21993:21997   */\n      dup2\n        /* \"--CODEGEN--\":21989:22009   */\n      sub\n        /* \"--CODEGEN--\":21985:21986   */\n      0x00\n        /* \"--CODEGEN--\":21974:21983   */\n      dup4\n        /* \"--CODEGEN--\":21970:21987   */\n      add\n        /* \"--CODEGEN--\":21963:22010   */\n      mstore\n        /* \"--CODEGEN--\":22024:22155   */\n      tag_891\n        /* \"--CODEGEN--\":22150:22154   */\n      dup2\n        /* \"--CODEGEN--\":22024:22155   */\n      tag_793\n      jump\t// in\n    tag_891:\n        /* \"--CODEGEN--\":22016:22155   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":21920:22165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":22172:22588   */\n    tag_221:\n      0x00\n        /* \"--CODEGEN--\":22372:22374   */\n      0x20\n        /* \"--CODEGEN--\":22361:22370   */\n      dup3\n        /* \"--CODEGEN--\":22357:22375   */\n      add\n        /* \"--CODEGEN--\":22349:22375   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":22422:22431   */\n      dup2\n        /* \"--CODEGEN--\":22416:22420   */\n      dup2\n        /* \"--CODEGEN--\":22412:22432   */\n      sub\n        /* \"--CODEGEN--\":22408:22409   */\n      0x00\n        /* \"--CODEGEN--\":22397:22406   */\n      dup4\n        /* \"--CODEGEN--\":22393:22410   */\n      add\n        /* \"--CODEGEN--\":22386:22433   */\n      mstore\n        /* \"--CODEGEN--\":22447:22578   */\n      tag_893\n        /* \"--CODEGEN--\":22573:22577   */\n      dup2\n        /* \"--CODEGEN--\":22447:22578   */\n      tag_796\n      jump\t// in\n    tag_893:\n        /* \"--CODEGEN--\":22439:22578   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":22343:22588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":22595:23011   */\n    tag_264:\n      0x00\n        /* \"--CODEGEN--\":22795:22797   */\n      0x20\n        /* \"--CODEGEN--\":22784:22793   */\n      dup3\n        /* \"--CODEGEN--\":22780:22798   */\n      add\n        /* \"--CODEGEN--\":22772:22798   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":22845:22854   */\n      dup2\n        /* \"--CODEGEN--\":22839:22843   */\n      dup2\n        /* \"--CODEGEN--\":22835:22855   */\n      sub\n        /* \"--CODEGEN--\":22831:22832   */\n      0x00\n        /* \"--CODEGEN--\":22820:22829   */\n      dup4\n        /* \"--CODEGEN--\":22816:22833   */\n      add\n        /* \"--CODEGEN--\":22809:22856   */\n      mstore\n        /* \"--CODEGEN--\":22870:23001   */\n      tag_895\n        /* \"--CODEGEN--\":22996:23000   */\n      dup2\n        /* \"--CODEGEN--\":22870:23001   */\n      tag_799\n      jump\t// in\n    tag_895:\n        /* \"--CODEGEN--\":22862:23001   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":22766:23011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":23018:23434   */\n    tag_510:\n      0x00\n        /* \"--CODEGEN--\":23218:23220   */\n      0x20\n        /* \"--CODEGEN--\":23207:23216   */\n      dup3\n        /* \"--CODEGEN--\":23203:23221   */\n      add\n        /* \"--CODEGEN--\":23195:23221   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":23268:23277   */\n      dup2\n        /* \"--CODEGEN--\":23262:23266   */\n      dup2\n        /* \"--CODEGEN--\":23258:23278   */\n      sub\n        /* \"--CODEGEN--\":23254:23255   */\n      0x00\n        /* \"--CODEGEN--\":23243:23252   */\n      dup4\n        /* \"--CODEGEN--\":23239:23256   */\n      add\n        /* \"--CODEGEN--\":23232:23279   */\n      mstore\n        /* \"--CODEGEN--\":23293:23424   */\n      tag_897\n        /* \"--CODEGEN--\":23419:23423   */\n      dup2\n        /* \"--CODEGEN--\":23293:23424   */\n      tag_802\n      jump\t// in\n    tag_897:\n        /* \"--CODEGEN--\":23285:23424   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":23189:23434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":23441:23857   */\n    tag_529:\n      0x00\n        /* \"--CODEGEN--\":23641:23643   */\n      0x20\n        /* \"--CODEGEN--\":23630:23639   */\n      dup3\n        /* \"--CODEGEN--\":23626:23644   */\n      add\n        /* \"--CODEGEN--\":23618:23644   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":23691:23700   */\n      dup2\n        /* \"--CODEGEN--\":23685:23689   */\n      dup2\n        /* \"--CODEGEN--\":23681:23701   */\n      sub\n        /* \"--CODEGEN--\":23677:23678   */\n      0x00\n        /* \"--CODEGEN--\":23666:23675   */\n      dup4\n        /* \"--CODEGEN--\":23662:23679   */\n      add\n        /* \"--CODEGEN--\":23655:23702   */\n      mstore\n        /* \"--CODEGEN--\":23716:23847   */\n      tag_899\n        /* \"--CODEGEN--\":23842:23846   */\n      dup2\n        /* \"--CODEGEN--\":23716:23847   */\n      tag_805\n      jump\t// in\n    tag_899:\n        /* \"--CODEGEN--\":23708:23847   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":23612:23857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":23864:24280   */\n    tag_586:\n      0x00\n        /* \"--CODEGEN--\":24064:24066   */\n      0x20\n        /* \"--CODEGEN--\":24053:24062   */\n      dup3\n        /* \"--CODEGEN--\":24049:24067   */\n      add\n        /* \"--CODEGEN--\":24041:24067   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":24114:24123   */\n      dup2\n        /* \"--CODEGEN--\":24108:24112   */\n      dup2\n        /* \"--CODEGEN--\":24104:24124   */\n      sub\n        /* \"--CODEGEN--\":24100:24101   */\n      0x00\n        /* \"--CODEGEN--\":24089:24098   */\n      dup4\n        /* \"--CODEGEN--\":24085:24102   */\n      add\n        /* \"--CODEGEN--\":24078:24125   */\n      mstore\n        /* \"--CODEGEN--\":24139:24270   */\n      tag_901\n        /* \"--CODEGEN--\":24265:24269   */\n      dup2\n        /* \"--CODEGEN--\":24139:24270   */\n      tag_808\n      jump\t// in\n    tag_901:\n        /* \"--CODEGEN--\":24131:24270   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":24035:24280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":24287:24703   */\n    tag_338:\n      0x00\n        /* \"--CODEGEN--\":24487:24489   */\n      0x20\n        /* \"--CODEGEN--\":24476:24485   */\n      dup3\n        /* \"--CODEGEN--\":24472:24490   */\n      add\n        /* \"--CODEGEN--\":24464:24490   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":24537:24546   */\n      dup2\n        /* \"--CODEGEN--\":24531:24535   */\n      dup2\n        /* \"--CODEGEN--\":24527:24547   */\n      sub\n        /* \"--CODEGEN--\":24523:24524   */\n      0x00\n        /* \"--CODEGEN--\":24512:24521   */\n      dup4\n        /* \"--CODEGEN--\":24508:24525   */\n      add\n        /* \"--CODEGEN--\":24501:24548   */\n      mstore\n        /* \"--CODEGEN--\":24562:24693   */\n      tag_903\n        /* \"--CODEGEN--\":24688:24692   */\n      dup2\n        /* \"--CODEGEN--\":24562:24693   */\n      tag_811\n      jump\t// in\n    tag_903:\n        /* \"--CODEGEN--\":24554:24693   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":24458:24703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":24710:25126   */\n    tag_486:\n      0x00\n        /* \"--CODEGEN--\":24910:24912   */\n      0x20\n        /* \"--CODEGEN--\":24899:24908   */\n      dup3\n        /* \"--CODEGEN--\":24895:24913   */\n      add\n        /* \"--CODEGEN--\":24887:24913   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":24960:24969   */\n      dup2\n        /* \"--CODEGEN--\":24954:24958   */\n      dup2\n        /* \"--CODEGEN--\":24950:24970   */\n      sub\n        /* \"--CODEGEN--\":24946:24947   */\n      0x00\n        /* \"--CODEGEN--\":24935:24944   */\n      dup4\n        /* \"--CODEGEN--\":24931:24948   */\n      add\n        /* \"--CODEGEN--\":24924:24971   */\n      mstore\n        /* \"--CODEGEN--\":24985:25116   */\n      tag_905\n        /* \"--CODEGEN--\":25111:25115   */\n      dup2\n        /* \"--CODEGEN--\":24985:25116   */\n      tag_814\n      jump\t// in\n    tag_905:\n        /* \"--CODEGEN--\":24977:25116   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":24881:25126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":25133:25549   */\n    tag_260:\n      0x00\n        /* \"--CODEGEN--\":25333:25335   */\n      0x20\n        /* \"--CODEGEN--\":25322:25331   */\n      dup3\n        /* \"--CODEGEN--\":25318:25336   */\n      add\n        /* \"--CODEGEN--\":25310:25336   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":25383:25392   */\n      dup2\n        /* \"--CODEGEN--\":25377:25381   */\n      dup2\n        /* \"--CODEGEN--\":25373:25393   */\n      sub\n        /* \"--CODEGEN--\":25369:25370   */\n      0x00\n        /* \"--CODEGEN--\":25358:25367   */\n      dup4\n        /* \"--CODEGEN--\":25354:25371   */\n      add\n        /* \"--CODEGEN--\":25347:25394   */\n      mstore\n        /* \"--CODEGEN--\":25408:25539   */\n      tag_907\n        /* \"--CODEGEN--\":25534:25538   */\n      dup2\n        /* \"--CODEGEN--\":25408:25539   */\n      tag_817\n      jump\t// in\n    tag_907:\n        /* \"--CODEGEN--\":25400:25539   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":25304:25549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":25556:25972   */\n    tag_213:\n      0x00\n        /* \"--CODEGEN--\":25756:25758   */\n      0x20\n        /* \"--CODEGEN--\":25745:25754   */\n      dup3\n        /* \"--CODEGEN--\":25741:25759   */\n      add\n        /* \"--CODEGEN--\":25733:25759   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":25806:25815   */\n      dup2\n        /* \"--CODEGEN--\":25800:25804   */\n      dup2\n        /* \"--CODEGEN--\":25796:25816   */\n      sub\n        /* \"--CODEGEN--\":25792:25793   */\n      0x00\n        /* \"--CODEGEN--\":25781:25790   */\n      dup4\n        /* \"--CODEGEN--\":25777:25794   */\n      add\n        /* \"--CODEGEN--\":25770:25817   */\n      mstore\n        /* \"--CODEGEN--\":25831:25962   */\n      tag_909\n        /* \"--CODEGEN--\":25957:25961   */\n      dup2\n        /* \"--CODEGEN--\":25831:25962   */\n      tag_820\n      jump\t// in\n    tag_909:\n        /* \"--CODEGEN--\":25823:25962   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":25727:25972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":25979:26395   */\n    tag_489:\n      0x00\n        /* \"--CODEGEN--\":26179:26181   */\n      0x20\n        /* \"--CODEGEN--\":26168:26177   */\n      dup3\n        /* \"--CODEGEN--\":26164:26182   */\n      add\n        /* \"--CODEGEN--\":26156:26182   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":26229:26238   */\n      dup2\n        /* \"--CODEGEN--\":26223:26227   */\n      dup2\n        /* \"--CODEGEN--\":26219:26239   */\n      sub\n        /* \"--CODEGEN--\":26215:26216   */\n      0x00\n        /* \"--CODEGEN--\":26204:26213   */\n      dup4\n        /* \"--CODEGEN--\":26200:26217   */\n      add\n        /* \"--CODEGEN--\":26193:26240   */\n      mstore\n        /* \"--CODEGEN--\":26254:26385   */\n      tag_911\n        /* \"--CODEGEN--\":26380:26384   */\n      dup2\n        /* \"--CODEGEN--\":26254:26385   */\n      tag_823\n      jump\t// in\n    tag_911:\n        /* \"--CODEGEN--\":26246:26385   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":26150:26395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":26402:26818   */\n    tag_226:\n      0x00\n        /* \"--CODEGEN--\":26602:26604   */\n      0x20\n        /* \"--CODEGEN--\":26591:26600   */\n      dup3\n        /* \"--CODEGEN--\":26587:26605   */\n      add\n        /* \"--CODEGEN--\":26579:26605   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":26652:26661   */\n      dup2\n        /* \"--CODEGEN--\":26646:26650   */\n      dup2\n        /* \"--CODEGEN--\":26642:26662   */\n      sub\n        /* \"--CODEGEN--\":26638:26639   */\n      0x00\n        /* \"--CODEGEN--\":26627:26636   */\n      dup4\n        /* \"--CODEGEN--\":26623:26640   */\n      add\n        /* \"--CODEGEN--\":26616:26663   */\n      mstore\n        /* \"--CODEGEN--\":26677:26808   */\n      tag_913\n        /* \"--CODEGEN--\":26803:26807   */\n      dup2\n        /* \"--CODEGEN--\":26677:26808   */\n      tag_826\n      jump\t// in\n    tag_913:\n        /* \"--CODEGEN--\":26669:26808   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":26573:26818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":26825:27241   */\n    tag_472:\n      0x00\n        /* \"--CODEGEN--\":27025:27027   */\n      0x20\n        /* \"--CODEGEN--\":27014:27023   */\n      dup3\n        /* \"--CODEGEN--\":27010:27028   */\n      add\n        /* \"--CODEGEN--\":27002:27028   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":27075:27084   */\n      dup2\n        /* \"--CODEGEN--\":27069:27073   */\n      dup2\n        /* \"--CODEGEN--\":27065:27085   */\n      sub\n        /* \"--CODEGEN--\":27061:27062   */\n      0x00\n        /* \"--CODEGEN--\":27050:27059   */\n      dup4\n        /* \"--CODEGEN--\":27046:27063   */\n      add\n        /* \"--CODEGEN--\":27039:27086   */\n      mstore\n        /* \"--CODEGEN--\":27100:27231   */\n      tag_915\n        /* \"--CODEGEN--\":27226:27230   */\n      dup2\n        /* \"--CODEGEN--\":27100:27231   */\n      tag_829\n      jump\t// in\n    tag_915:\n        /* \"--CODEGEN--\":27092:27231   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":26996:27241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":27248:27664   */\n    tag_646:\n      0x00\n        /* \"--CODEGEN--\":27448:27450   */\n      0x20\n        /* \"--CODEGEN--\":27437:27446   */\n      dup3\n        /* \"--CODEGEN--\":27433:27451   */\n      add\n        /* \"--CODEGEN--\":27425:27451   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":27498:27507   */\n      dup2\n        /* \"--CODEGEN--\":27492:27496   */\n      dup2\n        /* \"--CODEGEN--\":27488:27508   */\n      sub\n        /* \"--CODEGEN--\":27484:27485   */\n      0x00\n        /* \"--CODEGEN--\":27473:27482   */\n      dup4\n        /* \"--CODEGEN--\":27469:27486   */\n      add\n        /* \"--CODEGEN--\":27462:27509   */\n      mstore\n        /* \"--CODEGEN--\":27523:27654   */\n      tag_917\n        /* \"--CODEGEN--\":27649:27653   */\n      dup2\n        /* \"--CODEGEN--\":27523:27654   */\n      tag_832\n      jump\t// in\n    tag_917:\n        /* \"--CODEGEN--\":27515:27654   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":27419:27664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":27671:28087   */\n    tag_515:\n      0x00\n        /* \"--CODEGEN--\":27871:27873   */\n      0x20\n        /* \"--CODEGEN--\":27860:27869   */\n      dup3\n        /* \"--CODEGEN--\":27856:27874   */\n      add\n        /* \"--CODEGEN--\":27848:27874   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":27921:27930   */\n      dup2\n        /* \"--CODEGEN--\":27915:27919   */\n      dup2\n        /* \"--CODEGEN--\":27911:27931   */\n      sub\n        /* \"--CODEGEN--\":27907:27908   */\n      0x00\n        /* \"--CODEGEN--\":27896:27905   */\n      dup4\n        /* \"--CODEGEN--\":27892:27909   */\n      add\n        /* \"--CODEGEN--\":27885:27932   */\n      mstore\n        /* \"--CODEGEN--\":27946:28077   */\n      tag_919\n        /* \"--CODEGEN--\":28072:28076   */\n      dup2\n        /* \"--CODEGEN--\":27946:28077   */\n      tag_835\n      jump\t// in\n    tag_919:\n        /* \"--CODEGEN--\":27938:28077   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":27842:28087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":28094:28510   */\n    tag_217:\n      0x00\n        /* \"--CODEGEN--\":28294:28296   */\n      0x20\n        /* \"--CODEGEN--\":28283:28292   */\n      dup3\n        /* \"--CODEGEN--\":28279:28297   */\n      add\n        /* \"--CODEGEN--\":28271:28297   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":28344:28353   */\n      dup2\n        /* \"--CODEGEN--\":28338:28342   */\n      dup2\n        /* \"--CODEGEN--\":28334:28354   */\n      sub\n        /* \"--CODEGEN--\":28330:28331   */\n      0x00\n        /* \"--CODEGEN--\":28319:28328   */\n      dup4\n        /* \"--CODEGEN--\":28315:28332   */\n      add\n        /* \"--CODEGEN--\":28308:28355   */\n      mstore\n        /* \"--CODEGEN--\":28369:28500   */\n      tag_921\n        /* \"--CODEGEN--\":28495:28499   */\n      dup2\n        /* \"--CODEGEN--\":28369:28500   */\n      tag_838\n      jump\t// in\n    tag_921:\n        /* \"--CODEGEN--\":28361:28500   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":28265:28510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":28517:28933   */\n    tag_267:\n      0x00\n        /* \"--CODEGEN--\":28717:28719   */\n      0x20\n        /* \"--CODEGEN--\":28706:28715   */\n      dup3\n        /* \"--CODEGEN--\":28702:28720   */\n      add\n        /* \"--CODEGEN--\":28694:28720   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":28767:28776   */\n      dup2\n        /* \"--CODEGEN--\":28761:28765   */\n      dup2\n        /* \"--CODEGEN--\":28757:28777   */\n      sub\n        /* \"--CODEGEN--\":28753:28754   */\n      0x00\n        /* \"--CODEGEN--\":28742:28751   */\n      dup4\n        /* \"--CODEGEN--\":28738:28755   */\n      add\n        /* \"--CODEGEN--\":28731:28778   */\n      mstore\n        /* \"--CODEGEN--\":28792:28923   */\n      tag_923\n        /* \"--CODEGEN--\":28918:28922   */\n      dup2\n        /* \"--CODEGEN--\":28792:28923   */\n      tag_841\n      jump\t// in\n    tag_923:\n        /* \"--CODEGEN--\":28784:28923   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":28688:28933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":28940:29356   */\n    tag_464:\n      0x00\n        /* \"--CODEGEN--\":29140:29142   */\n      0x20\n        /* \"--CODEGEN--\":29129:29138   */\n      dup3\n        /* \"--CODEGEN--\":29125:29143   */\n      add\n        /* \"--CODEGEN--\":29117:29143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":29190:29199   */\n      dup2\n        /* \"--CODEGEN--\":29184:29188   */\n      dup2\n        /* \"--CODEGEN--\":29180:29200   */\n      sub\n        /* \"--CODEGEN--\":29176:29177   */\n      0x00\n        /* \"--CODEGEN--\":29165:29174   */\n      dup4\n        /* \"--CODEGEN--\":29161:29178   */\n      add\n        /* \"--CODEGEN--\":29154:29201   */\n      mstore\n        /* \"--CODEGEN--\":29215:29346   */\n      tag_925\n        /* \"--CODEGEN--\":29341:29345   */\n      dup2\n        /* \"--CODEGEN--\":29215:29346   */\n      tag_844\n      jump\t// in\n    tag_925:\n        /* \"--CODEGEN--\":29207:29346   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":29111:29356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":29363:29686   */\n    tag_115:\n      0x00\n        /* \"--CODEGEN--\":29540:29543   */\n      0xa0\n        /* \"--CODEGEN--\":29529:29538   */\n      dup3\n        /* \"--CODEGEN--\":29525:29544   */\n      add\n        /* \"--CODEGEN--\":29517:29544   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":29555:29676   */\n      tag_927\n        /* \"--CODEGEN--\":29673:29674   */\n      0x00\n        /* \"--CODEGEN--\":29662:29671   */\n      dup4\n        /* \"--CODEGEN--\":29658:29675   */\n      add\n        /* \"--CODEGEN--\":29649:29655   */\n      dup5\n        /* \"--CODEGEN--\":29555:29676   */\n      tag_847\n      jump\t// in\n    tag_927:\n        /* \"--CODEGEN--\":29511:29686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":29693:29915   */\n    tag_58:\n      0x00\n        /* \"--CODEGEN--\":29820:29822   */\n      0x20\n        /* \"--CODEGEN--\":29809:29818   */\n      dup3\n        /* \"--CODEGEN--\":29805:29823   */\n      add\n        /* \"--CODEGEN--\":29797:29823   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":29834:29905   */\n      tag_929\n        /* \"--CODEGEN--\":29902:29903   */\n      0x00\n        /* \"--CODEGEN--\":29891:29900   */\n      dup4\n        /* \"--CODEGEN--\":29887:29904   */\n      add\n        /* \"--CODEGEN--\":29878:29884   */\n      dup5\n        /* \"--CODEGEN--\":29834:29905   */\n      tag_858\n      jump\t// in\n    tag_929:\n        /* \"--CODEGEN--\":29791:29915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":29922:30243   */\n    tag_500:\n      0x00\n        /* \"--CODEGEN--\":30071:30073   */\n      0x40\n        /* \"--CODEGEN--\":30060:30069   */\n      dup3\n        /* \"--CODEGEN--\":30056:30074   */\n      add\n        /* \"--CODEGEN--\":30048:30074   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":30085:30156   */\n      tag_931\n        /* \"--CODEGEN--\":30153:30154   */\n      0x00\n        /* \"--CODEGEN--\":30142:30151   */\n      dup4\n        /* \"--CODEGEN--\":30138:30155   */\n      add\n        /* \"--CODEGEN--\":30129:30135   */\n      dup6\n        /* \"--CODEGEN--\":30085:30156   */\n      tag_858\n      jump\t// in\n    tag_931:\n        /* \"--CODEGEN--\":30167:30233   */\n      tag_932\n        /* \"--CODEGEN--\":30229:30231   */\n      0x20\n        /* \"--CODEGEN--\":30218:30227   */\n      dup4\n        /* \"--CODEGEN--\":30214:30232   */\n      add\n        /* \"--CODEGEN--\":30205:30211   */\n      dup5\n        /* \"--CODEGEN--\":30167:30233   */\n      tag_749\n      jump\t// in\n    tag_932:\n        /* \"--CODEGEN--\":30042:30243   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":30250:30599   */\n    tag_361:\n      0x00\n        /* \"--CODEGEN--\":30413:30415   */\n      0x40\n        /* \"--CODEGEN--\":30402:30411   */\n      dup3\n        /* \"--CODEGEN--\":30398:30416   */\n      add\n        /* \"--CODEGEN--\":30390:30416   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":30427:30498   */\n      tag_934\n        /* \"--CODEGEN--\":30495:30496   */\n      0x00\n        /* \"--CODEGEN--\":30484:30493   */\n      dup4\n        /* \"--CODEGEN--\":30480:30497   */\n      add\n        /* \"--CODEGEN--\":30471:30477   */\n      dup6\n        /* \"--CODEGEN--\":30427:30498   */\n      tag_858\n      jump\t// in\n    tag_934:\n        /* \"--CODEGEN--\":30509:30589   */\n      tag_935\n        /* \"--CODEGEN--\":30585:30587   */\n      0x20\n        /* \"--CODEGEN--\":30574:30583   */\n      dup4\n        /* \"--CODEGEN--\":30570:30588   */\n      add\n        /* \"--CODEGEN--\":30561:30567   */\n      dup5\n        /* \"--CODEGEN--\":30509:30589   */\n      tag_768\n      jump\t// in\n    tag_935:\n        /* \"--CODEGEN--\":30384:30599   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":30606:30939   */\n    tag_319:\n      0x00\n        /* \"--CODEGEN--\":30761:30763   */\n      0x40\n        /* \"--CODEGEN--\":30750:30759   */\n      dup3\n        /* \"--CODEGEN--\":30746:30764   */\n      add\n        /* \"--CODEGEN--\":30738:30764   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":30775:30846   */\n      tag_937\n        /* \"--CODEGEN--\":30843:30844   */\n      0x00\n        /* \"--CODEGEN--\":30832:30841   */\n      dup4\n        /* \"--CODEGEN--\":30828:30845   */\n      add\n        /* \"--CODEGEN--\":30819:30825   */\n      dup6\n        /* \"--CODEGEN--\":30775:30846   */\n      tag_858\n      jump\t// in\n    tag_937:\n        /* \"--CODEGEN--\":30857:30929   */\n      tag_938\n        /* \"--CODEGEN--\":30925:30927   */\n      0x20\n        /* \"--CODEGEN--\":30914:30923   */\n      dup4\n        /* \"--CODEGEN--\":30910:30928   */\n      add\n        /* \"--CODEGEN--\":30901:30907   */\n      dup5\n        /* \"--CODEGEN--\":30857:30929   */\n      tag_858\n      jump\t// in\n    tag_938:\n        /* \"--CODEGEN--\":30732:30939   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":30946:31390   */\n    tag_157:\n      0x00\n        /* \"--CODEGEN--\":31129:31131   */\n      0x60\n        /* \"--CODEGEN--\":31118:31127   */\n      dup3\n        /* \"--CODEGEN--\":31114:31132   */\n      add\n        /* \"--CODEGEN--\":31106:31132   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":31143:31214   */\n      tag_940\n        /* \"--CODEGEN--\":31211:31212   */\n      0x00\n        /* \"--CODEGEN--\":31200:31209   */\n      dup4\n        /* \"--CODEGEN--\":31196:31213   */\n      add\n        /* \"--CODEGEN--\":31187:31193   */\n      dup7\n        /* \"--CODEGEN--\":31143:31214   */\n      tag_858\n      jump\t// in\n    tag_940:\n        /* \"--CODEGEN--\":31225:31297   */\n      tag_941\n        /* \"--CODEGEN--\":31293:31295   */\n      0x20\n        /* \"--CODEGEN--\":31282:31291   */\n      dup4\n        /* \"--CODEGEN--\":31278:31296   */\n      add\n        /* \"--CODEGEN--\":31269:31275   */\n      dup6\n        /* \"--CODEGEN--\":31225:31297   */\n      tag_858\n      jump\t// in\n    tag_941:\n        /* \"--CODEGEN--\":31308:31380   */\n      tag_942\n        /* \"--CODEGEN--\":31376:31378   */\n      0x40\n        /* \"--CODEGEN--\":31365:31374   */\n      dup4\n        /* \"--CODEGEN--\":31361:31379   */\n      add\n        /* \"--CODEGEN--\":31352:31358   */\n      dup5\n        /* \"--CODEGEN--\":31308:31380   */\n      tag_858\n      jump\t// in\n    tag_942:\n        /* \"--CODEGEN--\":31100:31390   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":31397:32053   */\n    tag_80:\n      0x00\n        /* \"--CODEGEN--\":31630:31633   */\n      0xa0\n        /* \"--CODEGEN--\":31619:31628   */\n      dup3\n        /* \"--CODEGEN--\":31615:31634   */\n      add\n        /* \"--CODEGEN--\":31607:31634   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":31645:31716   */\n      tag_944\n        /* \"--CODEGEN--\":31713:31714   */\n      0x00\n        /* \"--CODEGEN--\":31702:31711   */\n      dup4\n        /* \"--CODEGEN--\":31698:31715   */\n      add\n        /* \"--CODEGEN--\":31689:31695   */\n      dup9\n        /* \"--CODEGEN--\":31645:31716   */\n      tag_858\n      jump\t// in\n    tag_944:\n        /* \"--CODEGEN--\":31727:31799   */\n      tag_945\n        /* \"--CODEGEN--\":31795:31797   */\n      0x20\n        /* \"--CODEGEN--\":31784:31793   */\n      dup4\n        /* \"--CODEGEN--\":31780:31798   */\n      add\n        /* \"--CODEGEN--\":31771:31777   */\n      dup8\n        /* \"--CODEGEN--\":31727:31799   */\n      tag_858\n      jump\t// in\n    tag_945:\n        /* \"--CODEGEN--\":31810:31882   */\n      tag_946\n        /* \"--CODEGEN--\":31878:31880   */\n      0x40\n        /* \"--CODEGEN--\":31867:31876   */\n      dup4\n        /* \"--CODEGEN--\":31863:31881   */\n      add\n        /* \"--CODEGEN--\":31854:31860   */\n      dup7\n        /* \"--CODEGEN--\":31810:31882   */\n      tag_858\n      jump\t// in\n    tag_946:\n        /* \"--CODEGEN--\":31893:31965   */\n      tag_947\n        /* \"--CODEGEN--\":31961:31963   */\n      0x60\n        /* \"--CODEGEN--\":31950:31959   */\n      dup4\n        /* \"--CODEGEN--\":31946:31964   */\n      add\n        /* \"--CODEGEN--\":31937:31943   */\n      dup6\n        /* \"--CODEGEN--\":31893:31965   */\n      tag_858\n      jump\t// in\n    tag_947:\n        /* \"--CODEGEN--\":31976:32043   */\n      tag_948\n        /* \"--CODEGEN--\":32038:32041   */\n      0x80\n        /* \"--CODEGEN--\":32027:32036   */\n      dup4\n        /* \"--CODEGEN--\":32023:32042   */\n      add\n        /* \"--CODEGEN--\":32014:32020   */\n      dup5\n        /* \"--CODEGEN--\":31976:32043   */\n      tag_749\n      jump\t// in\n    tag_948:\n        /* \"--CODEGEN--\":31601:32053   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32060:32181   */\n    tag_755:\n      0x00\n        /* \"--CODEGEN--\":32153:32158   */\n      dup2\n        /* \"--CODEGEN--\":32147:32159   */\n      mload\n        /* \"--CODEGEN--\":32137:32159   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32118:32181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32188:32310   */\n    tag_775:\n      0x00\n        /* \"--CODEGEN--\":32282:32287   */\n      dup2\n        /* \"--CODEGEN--\":32276:32288   */\n      mload\n        /* \"--CODEGEN--\":32266:32288   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32247:32310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32318:32462   */\n    tag_757:\n      0x00\n        /* \"--CODEGEN--\":32453:32456   */\n      dup2\n        /* \"--CODEGEN--\":32438:32456   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32431:32462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32471:32634   */\n    tag_777:\n      0x00\n        /* \"--CODEGEN--\":32586:32592   */\n      dup3\n        /* \"--CODEGEN--\":32581:32584   */\n      dup3\n        /* \"--CODEGEN--\":32574:32593   */\n      mstore\n        /* \"--CODEGEN--\":32623:32627   */\n      0x20\n        /* \"--CODEGEN--\":32618:32621   */\n      dup3\n        /* \"--CODEGEN--\":32614:32628   */\n      add\n        /* \"--CODEGEN--\":32599:32628   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32567:32634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32642:32733   */\n    tag_744:\n      0x00\n        /* \"--CODEGEN--\":32704:32728   */\n      tag_954\n        /* \"--CODEGEN--\":32722:32727   */\n      dup3\n        /* \"--CODEGEN--\":32704:32728   */\n      tag_955\n      jump\t// in\n    tag_954:\n        /* \"--CODEGEN--\":32693:32728   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32687:32733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32740:32825   */\n    tag_748:\n      0x00\n        /* \"--CODEGEN--\":32813:32818   */\n      dup2\n        /* \"--CODEGEN--\":32806:32819   */\n      iszero\n        /* \"--CODEGEN--\":32799:32820   */\n      iszero\n        /* \"--CODEGEN--\":32788:32820   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32782:32825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32832:32938   */\n    tag_957:\n      0x00\n        /* \"--CODEGEN--\":32909:32933   */\n      tag_959\n        /* \"--CODEGEN--\":32927:32932   */\n      dup3\n        /* \"--CODEGEN--\":32909:32933   */\n      tag_744\n      jump\t// in\n    tag_959:\n        /* \"--CODEGEN--\":32898:32933   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32892:32938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":32945:33066   */\n    tag_955:\n      0x00\n        /* \"--CODEGEN--\":33018:33060   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":33011:33016   */\n      dup3\n        /* \"--CODEGEN--\":33007:33061   */\n      and\n        /* \"--CODEGEN--\":32996:33061   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":32990:33066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33073:33145   */\n    tag_857:\n      0x00\n        /* \"--CODEGEN--\":33135:33140   */\n      dup2\n        /* \"--CODEGEN--\":33124:33140   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33118:33145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33152:33281   */\n    tag_740:\n      0x00\n        /* \"--CODEGEN--\":33239:33276   */\n      tag_963\n        /* \"--CODEGEN--\":33270:33275   */\n      dup3\n        /* \"--CODEGEN--\":33239:33276   */\n      tag_964\n      jump\t// in\n    tag_963:\n        /* \"--CODEGEN--\":33226:33276   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33220:33281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33288:33439   */\n    tag_763:\n      0x00\n        /* \"--CODEGEN--\":33382:33434   */\n      tag_966\n        /* \"--CODEGEN--\":33428:33433   */\n      dup3\n        /* \"--CODEGEN--\":33382:33434   */\n      tag_967\n      jump\t// in\n    tag_966:\n        /* \"--CODEGEN--\":33369:33434   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33363:33439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33446:33569   */\n    tag_967:\n      0x00\n        /* \"--CODEGEN--\":33540:33564   */\n      tag_969\n        /* \"--CODEGEN--\":33558:33563   */\n      dup3\n        /* \"--CODEGEN--\":33540:33564   */\n      tag_955\n      jump\t// in\n    tag_969:\n        /* \"--CODEGEN--\":33527:33564   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33521:33569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33576:33737   */\n    tag_767:\n      0x00\n        /* \"--CODEGEN--\":33675:33732   */\n      tag_971\n        /* \"--CODEGEN--\":33726:33731   */\n      dup3\n        /* \"--CODEGEN--\":33675:33732   */\n      tag_972\n      jump\t// in\n    tag_971:\n        /* \"--CODEGEN--\":33662:33732   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33656:33737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33744:33872   */\n    tag_972:\n      0x00\n        /* \"--CODEGEN--\":33843:33867   */\n      tag_974\n        /* \"--CODEGEN--\":33861:33866   */\n      dup3\n        /* \"--CODEGEN--\":33843:33867   */\n      tag_955\n      jump\t// in\n    tag_974:\n        /* \"--CODEGEN--\":33830:33867   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33824:33872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":33879:33995   */\n    tag_771:\n      0x00\n        /* \"--CODEGEN--\":33966:33990   */\n      tag_976\n        /* \"--CODEGEN--\":33984:33989   */\n      dup3\n        /* \"--CODEGEN--\":33966:33990   */\n      tag_857\n      jump\t// in\n    tag_976:\n        /* \"--CODEGEN--\":33953:33990   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":33947:33995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34002:34123   */\n    tag_964:\n      0x00\n        /* \"--CODEGEN--\":34081:34118   */\n      tag_978\n        /* \"--CODEGEN--\":34112:34117   */\n      dup3\n        /* \"--CODEGEN--\":34081:34118   */\n      tag_979\n      jump\t// in\n    tag_978:\n        /* \"--CODEGEN--\":34068:34118   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":34062:34123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34130:34238   */\n    tag_979:\n      0x00\n        /* \"--CODEGEN--\":34209:34233   */\n      tag_981\n        /* \"--CODEGEN--\":34227:34232   */\n      dup3\n        /* \"--CODEGEN--\":34209:34233   */\n      tag_955\n      jump\t// in\n    tag_981:\n        /* \"--CODEGEN--\":34196:34233   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":34190:34238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34246:34514   */\n    tag_759:\n        /* \"--CODEGEN--\":34311:34312   */\n      0x00\n        /* \"--CODEGEN--\":34318:34419   */\n    tag_983:\n        /* \"--CODEGEN--\":34332:34338   */\n      dup4\n        /* \"--CODEGEN--\":34329:34330   */\n      dup2\n        /* \"--CODEGEN--\":34326:34339   */\n      lt\n        /* \"--CODEGEN--\":34318:34419   */\n      iszero\n      tag_985\n      jumpi\n        /* \"--CODEGEN--\":34408:34409   */\n      dup1\n        /* \"--CODEGEN--\":34403:34406   */\n      dup3\n        /* \"--CODEGEN--\":34399:34410   */\n      add\n        /* \"--CODEGEN--\":34393:34411   */\n      mload\n        /* \"--CODEGEN--\":34389:34390   */\n      dup2\n        /* \"--CODEGEN--\":34384:34387   */\n      dup5\n        /* \"--CODEGEN--\":34380:34391   */\n      add\n        /* \"--CODEGEN--\":34373:34412   */\n      mstore\n        /* \"--CODEGEN--\":34354:34356   */\n      0x20\n        /* \"--CODEGEN--\":34351:34352   */\n      dup2\n        /* \"--CODEGEN--\":34347:34357   */\n      add\n        /* \"--CODEGEN--\":34342:34357   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":34318:34419   */\n      jump(tag_983)\n    tag_985:\n        /* \"--CODEGEN--\":34434:34440   */\n      dup4\n        /* \"--CODEGEN--\":34431:34432   */\n      dup2\n        /* \"--CODEGEN--\":34428:34441   */\n      gt\n        /* \"--CODEGEN--\":34425:34427   */\n      iszero\n      tag_986\n      jumpi\n        /* \"--CODEGEN--\":34499:34500   */\n      0x00\n        /* \"--CODEGEN--\":34490:34496   */\n      dup5\n        /* \"--CODEGEN--\":34485:34488   */\n      dup5\n        /* \"--CODEGEN--\":34481:34497   */\n      add\n        /* \"--CODEGEN--\":34474:34501   */\n      mstore\n        /* \"--CODEGEN--\":34425:34427   */\n    tag_986:\n        /* \"--CODEGEN--\":34295:34514   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34522:34619   */\n    tag_780:\n      0x00\n        /* \"--CODEGEN--\":34610:34612   */\n      0x1f\n        /* \"--CODEGEN--\":34606:34613   */\n      not\n        /* \"--CODEGEN--\":34601:34603   */\n      0x1f\n        /* \"--CODEGEN--\":34594:34599   */\n      dup4\n        /* \"--CODEGEN--\":34590:34604   */\n      add\n        /* \"--CODEGEN--\":34586:34614   */\n      and\n        /* \"--CODEGEN--\":34576:34614   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":34570:34619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34627:34744   */\n    tag_662:\n        /* \"--CODEGEN--\":34696:34720   */\n      tag_989\n        /* \"--CODEGEN--\":34714:34719   */\n      dup2\n        /* \"--CODEGEN--\":34696:34720   */\n      tag_744\n      jump\t// in\n    tag_989:\n        /* \"--CODEGEN--\":34689:34694   */\n      dup2\n        /* \"--CODEGEN--\":34686:34721   */\n      eq\n        /* \"--CODEGEN--\":34676:34678   */\n      tag_990\n      jumpi\n        /* \"--CODEGEN--\":34735:34736   */\n      0x00\n        /* \"--CODEGEN--\":34732:34733   */\n      dup1\n        /* \"--CODEGEN--\":34725:34737   */\n      revert\n        /* \"--CODEGEN--\":34676:34678   */\n    tag_990:\n        /* \"--CODEGEN--\":34670:34744   */\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34751:34862   */\n    tag_666:\n        /* \"--CODEGEN--\":34817:34838   */\n      tag_992\n        /* \"--CODEGEN--\":34832:34837   */\n      dup2\n        /* \"--CODEGEN--\":34817:34838   */\n      tag_748\n      jump\t// in\n    tag_992:\n        /* \"--CODEGEN--\":34810:34815   */\n      dup2\n        /* \"--CODEGEN--\":34807:34839   */\n      eq\n        /* \"--CODEGEN--\":34797:34799   */\n      tag_993\n      jumpi\n        /* \"--CODEGEN--\":34853:34854   */\n      0x00\n        /* \"--CODEGEN--\":34850:34851   */\n      dup1\n        /* \"--CODEGEN--\":34843:34855   */\n      revert\n        /* \"--CODEGEN--\":34797:34799   */\n    tag_993:\n        /* \"--CODEGEN--\":34791:34862   */\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":34869:35016   */\n    tag_673:\n        /* \"--CODEGEN--\":34953:34992   */\n      tag_995\n        /* \"--CODEGEN--\":34986:34991   */\n      dup2\n        /* \"--CODEGEN--\":34953:34992   */\n      tag_957\n      jump\t// in\n    tag_995:\n        /* \"--CODEGEN--\":34946:34951   */\n      dup2\n        /* \"--CODEGEN--\":34943:34993   */\n      eq\n        /* \"--CODEGEN--\":34933:34935   */\n      tag_996\n      jumpi\n        /* \"--CODEGEN--\":35007:35008   */\n      0x00\n        /* \"--CODEGEN--\":35004:35005   */\n      dup1\n        /* \"--CODEGEN--\":34997:35009   */\n      revert\n        /* \"--CODEGEN--\":34933:34935   */\n    tag_996:\n        /* \"--CODEGEN--\":34927:35016   */\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":35023:35140   */\n    tag_677:\n        /* \"--CODEGEN--\":35092:35116   */\n      tag_998\n        /* \"--CODEGEN--\":35110:35115   */\n      dup2\n        /* \"--CODEGEN--\":35092:35116   */\n      tag_857\n      jump\t// in\n    tag_998:\n        /* \"--CODEGEN--\":35085:35090   */\n      dup2\n        /* \"--CODEGEN--\":35082:35117   */\n      eq\n        /* \"--CODEGEN--\":35072:35074   */\n      tag_999\n      jumpi\n        /* \"--CODEGEN--\":35131:35132   */\n      0x00\n        /* \"--CODEGEN--\":35128:35129   */\n      dup1\n        /* \"--CODEGEN--\":35121:35133   */\n      revert\n        /* \"--CODEGEN--\":35072:35074   */\n    tag_999:\n        /* \"--CODEGEN--\":35066:35140   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220743ace61d3a62ce2cfff9fa955388da5348138b71bdd0451ad7ab1c3f903ac0d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH5 0x95E27D7580 PUSH1 0xA SSTORE PUSH5 0xEA1FC81CE PUSH1 0xB SSTORE PUSH5 0x44502B18B2 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x54EC CODESIZE SUB DUP1 PUSH3 0x54EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x52 SWAP2 SWAP1 PUSH3 0x22E JUMP JUMPDEST PUSH1 0x0 PUSH3 0x64 PUSH3 0x1CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x368 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E3 DUP2 PUSH3 0x300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FA DUP2 PUSH3 0x31A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x211 DUP2 PUSH3 0x334 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x228 DUP2 PUSH3 0x34E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x255 DUP8 DUP3 DUP9 ADD PUSH3 0x200 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x268 DUP8 DUP3 DUP9 ADD PUSH3 0x1E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x27B DUP8 DUP3 DUP9 ADD PUSH3 0x217 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x28E DUP8 DUP3 DUP9 ADD PUSH3 0x1D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A7 DUP3 PUSH3 0x2D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2BB DUP3 PUSH3 0x29A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CF DUP3 PUSH3 0x29A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30B DUP2 PUSH3 0x29A JUMP JUMPDEST DUP2 EQ PUSH3 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x325 DUP2 PUSH3 0x2AE JUMP JUMPDEST DUP2 EQ PUSH3 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x33F DUP2 PUSH3 0x2C2 JUMP JUMPDEST DUP2 EQ PUSH3 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x359 DUP2 PUSH3 0x2F6 JUMP JUMPDEST DUP2 EQ PUSH3 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH2 0x5124 PUSH3 0x3C8 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x147C MSTORE DUP1 PUSH2 0x1917 MSTORE DUP1 PUSH2 0x1DB9 MSTORE POP DUP1 PUSH2 0x18B7 MSTORE DUP1 PUSH2 0x28EE MSTORE DUP1 PUSH2 0x37E7 MSTORE DUP1 PUSH2 0x38A1 MSTORE DUP1 PUSH2 0x395D MSTORE POP DUP1 PUSH2 0x13AE MSTORE DUP1 PUSH2 0x1440 MSTORE DUP1 PUSH2 0x18DB MSTORE DUP1 PUSH2 0x3255 MSTORE POP PUSH2 0x5124 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7398B7EA GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xAC1D0609 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDFCEDEEE GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xE0F91F6C EQ PUSH2 0x726 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xE39E1323 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xEDD8B170 EQ PUSH2 0x77E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x79C JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xAC1D0609 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC40D337B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xC507AEAA EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xCC6DB2DA EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xDC6363DF EQ PUSH2 0x6EC JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x99D7E84A EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x9DCC1B5F EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0x9DD2FCC3 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xAA47BC8E EQ PUSH2 0x65A JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x7398B7EA EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x777A97F8 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x78DB4C34 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x81BDF98C EQ PUSH2 0x594 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x39AAE5BA GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x5312EA8E GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x61621AAA EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x69B02128 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x502 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x39AAE5BA EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x4F70B15A EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x454 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x1CE06D57 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x1E9B828B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x3C2 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x33186E8 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x41A84C9 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xBB844BC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x1175A1DD EQ PUSH2 0x2F4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x3DE9 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x3F05 JUMP JUMPDEST PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x3E8A JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x3E38 JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x4AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH2 0x15C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x3FA4 JUMP JUMPDEST PUSH2 0x15D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH2 0x18D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x4DF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x1BB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A8 PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH2 0x1DDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x3FE0 JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EC PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50A PUSH2 0x206F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x514 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x3E38 JUMP JUMPDEST PUSH2 0x21CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54E PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BA PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x3F05 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60A PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x628 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x23EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x662 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x3D71 JUMP JUMPDEST PUSH2 0x25D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69C PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x3F41 JUMP JUMPDEST PUSH2 0x278B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D6 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x706 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x701 SWAP2 SWAP1 PUSH2 0x402F JUMP JUMPDEST PUSH2 0x2B47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x710 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72E PUSH2 0x2D37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x3FA4 JUMP JUMPDEST PUSH2 0x2D3D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x768 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x786 PUSH2 0x3253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x4AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x3277 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x828 JUMPI PUSH5 0xE8D4A51000 PUSH2 0x82A JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP1 PUSH2 0x4CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP1 PUSH2 0x4BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E3 SWAP1 PUSH2 0x4D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI POP PUSH6 0x1D1A94A2000 DUP2 GT ISZERO JUMPDEST PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP1 PUSH2 0x4B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA4E PUSH2 0x3C78 JUMP JUMPDEST PUSH2 0xA57 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xAB9 DUP7 DUP7 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP PUSH2 0xAC6 DUP7 DUP7 DUP4 PUSH2 0x3439 JUMP JUMPDEST PUSH2 0xB24 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB16 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xB08 PUSH5 0xE8D4A51000 PUSH2 0xAFA DUP11 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBAF PUSH2 0xB5D PUSH5 0xE8D4A51000 PUSH2 0xB4F DUP8 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBA1 PUSH2 0xB8E PUSH5 0xE8D4A51000 PUSH2 0xB80 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xBC6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA DUP7 DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0xCC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCED PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE1 SWAP1 PUSH2 0x4BF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE72 SWAP1 PUSH2 0x4DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4B PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF58 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0xFBE PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD NUMBER GT DUP1 ISZERO PUSH2 0x105F JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 PUSH2 0x107D DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10DC DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0x1095 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH2 0x10CE DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x10C0 PUSH2 0x10B1 DUP12 PUSH1 0x80 ADD MLOAD PUSH2 0x1528 JUMP JUMPDEST DUP8 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x111D PUSH2 0x110E DUP5 PUSH2 0x1100 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH5 0xE8D4A51000 PUSH2 0x114D PUSH2 0x113A DUP11 DUP13 PUSH2 0x7B8 JUMP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x11A0 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1192 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1184 DUP8 DUP7 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11BA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CD SWAP2 SWAP1 PUSH2 0x4A49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135A SWAP1 PUSH2 0x4B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1390 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36CC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP3 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x3E61 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2BBB158 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP3 SWAP2 SWAP1 PUSH2 0x4E7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP NUMBER PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH32 0x57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x156C JUMPI PUSH2 0x1565 PUSH5 0xE8D4A51000 PUSH2 0x1557 PUSH1 0xB SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x15A1 PUSH5 0xE8D4A51000 PUSH2 0x1593 PUSH1 0xC SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH9 0x22B1C8C1227A00000 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x162C PUSH2 0x3C78 JUMP JUMPDEST PUSH2 0x1635 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C9 SWAP1 PUSH2 0x4C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16DE CALLER DUP7 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x16EB CALLER DUP7 DUP4 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x170B DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1775 CALLER DUP6 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1725 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x17D4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x17C6 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x17B8 PUSH5 0xE8D4A51000 PUSH2 0x17AA DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1836 PUSH2 0x1809 PUSH5 0xE8D4A51000 PUSH2 0x17FB DUP5 DUP9 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1816 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1843 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x189F SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2BBB158 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1955 SWAP3 SWAP2 SWAP1 PUSH2 0x4E56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1991 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x199E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD NUMBER GT ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1A24 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1A3A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 PUSH2 0x1A58 DUP5 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AA3 DUP4 PUSH2 0x1A95 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1A87 PUSH2 0x1A78 DUP11 PUSH1 0x80 ADD MLOAD PUSH2 0x1528 JUMP JUMPDEST DUP8 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE8 PUSH2 0x1AD5 DUP6 PUSH2 0x1AC7 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP POP POP JUMPDEST NUMBER DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B0C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH32 0x3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46 DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1BA1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEE SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C0E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1CC4 PUSH5 0xE8D4A51000 PUSH2 0x1CB6 PUSH2 0x1CA7 CALLER DUP10 PUSH2 0x7B8 JUMP JUMPDEST DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x3 ADD SLOAD GT PUSH2 0x1CD8 JUMPI PUSH1 0x0 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x1CEF DUP2 DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1D5A CALLER DUP4 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1D0A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DA1 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1DF8 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E05 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x1E7A JUMPI PUSH2 0x1E78 DUP3 PUSH2 0x1989 JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E92 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F16 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F28 DUP4 PUSH2 0x1989 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F45 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FB9 JUMPI PUSH2 0x1FAE DUP3 PUSH2 0x1FA0 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F7D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x1FFE DUP3 PUSH2 0x1FF0 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1FCD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2013 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0xC0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2058 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH6 0x1D1A94A2000 DUP2 JUMP JUMPDEST PUSH2 0x2077 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20FB SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x21D6 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225A SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2272 JUMPI PUSH2 0x2271 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2289 PUSH1 0xD SLOAD NUMBER PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22A7 PUSH2 0x2298 PUSH2 0x23AF JUMP JUMPDEST DUP4 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22D5 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x37DB JUMP JUMPDEST NUMBER PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22F4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E6 PUSH5 0xE8D4A51000 PUSH2 0x23D8 PUSH1 0xA SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23F3 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2477 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x250B JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x254A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2541 SWAP1 PUSH2 0x4DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25DF PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x266C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2663 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D3 SWAP1 PUSH2 0x4D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2779 SWAP2 SWAP1 PUSH2 0x4AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2793 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2817 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285B SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2887 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28AB SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST LT ISZERO PUSH2 0x28EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E3 SWAP1 PUSH2 0x4C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x297B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2972 SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x298A JUMPI PUSH2 0x2989 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST DUP2 ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29A5 DUP5 PUSH1 0x8 SLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x29CC JUMP JUMPDEST PUSH2 0x29C5 DUP5 PUSH1 0x9 SLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AFF PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2B30 SWAP3 SWAP2 SWAP1 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH2 0x2B4F PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD3 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x2BEC JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x2BF8 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x2C37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2E SWAP1 PUSH2 0x4C17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x2C62 DUP4 PUSH2 0x2C54 DUP7 DUP9 PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x2CA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C99 SWAP1 PUSH2 0x4D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2CB1 JUMPI PUSH2 0x2CB0 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH2 0x2CBB PUSH1 0x0 PUSH2 0x21CE JUMP JUMPDEST DUP4 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xAE2D2E7D1AE84564FC72227253CE0F36A007209F7FD5EC414DEA80E5AF2FB5B0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x2D83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7A SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2D93 PUSH2 0x3C78 JUMP JUMPDEST PUSH2 0x2D9C DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD DUP1 PUSH2 0x2E4B JUMPI POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x2E8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E81 SWAP1 PUSH2 0x4C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E96 CALLER DUP7 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2EB1 JUMPI PUSH2 0x2EB0 CALLER DUP7 DUP4 PUSH2 0x3439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x3120 JUMPI PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2EC9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2C SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F7C SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE2 CALLER ADDRESS DUP8 PUSH1 0x5 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x2F91 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36CC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30B4 DUP2 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x2FF3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3056 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x306E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30A6 SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP PUSH2 0x30CD DUP6 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3115 PUSH2 0x3102 PUSH5 0xE8D4A51000 PUSH2 0x30F4 DUP6 DUP10 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST PUSH2 0x317E PUSH8 0xDE0B6B3A7640000 PUSH2 0x3170 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x3162 PUSH5 0xE8D4A51000 PUSH2 0x3154 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x3194 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3234 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x327F PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x330C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3303 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x337C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3373 SWAP1 PUSH2 0x4B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3441 PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x34EC PUSH5 0xE8D4A51000 PUSH2 0x34DE DUP6 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x353B PUSH8 0xDE0B6B3A7640000 PUSH2 0x352D PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x350C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3556 DUP5 PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3562 DUP8 DUP3 PUSH2 0x37DB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x357E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x358F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x35D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C7 SWAP1 PUSH2 0x4C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x39A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3667 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x3A08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x36BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B1 SWAP1 PUSH2 0x4BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x374F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x36ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3A63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x37D6 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3774 SWAP3 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3A63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x39A3 JUMPI DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383E SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x386A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x388E SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST LT ISZERO PUSH2 0x389D JUMPI PUSH2 0x389C PUSH2 0x18D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F8 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3924 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3948 SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3956 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x39A1 DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x39EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E5 SWAP2 SWAP1 PUSH2 0x4B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x39FA JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3A50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A47 SWAP2 SWAP1 PUSH2 0x4B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AC5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B2A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3B25 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3AE5 SWAP2 SWAP1 PUSH2 0x3E61 JUMP JUMPDEST PUSH2 0x3B24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B1B SWAP1 PUSH2 0x4B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B39 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3B42 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B4D DUP6 PUSH2 0x3C65 JUMP JUMPDEST PUSH2 0x3B8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B83 SWAP1 PUSH2 0x4D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3BB6 SWAP2 SWAP1 PUSH2 0x4A17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3BF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3BF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x3C0D JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3C20 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C54 SWAP2 SWAP1 PUSH2 0x4B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CD9 DUP2 PUSH2 0x5092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CEE DUP2 PUSH2 0x50A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D03 DUP2 PUSH2 0x50A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D18 DUP2 PUSH2 0x50C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D2D DUP2 PUSH2 0x50D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D42 DUP2 PUSH2 0x50D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D68 DUP5 DUP3 DUP6 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D92 DUP6 DUP3 DUP7 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3DA3 DUP6 DUP3 DUP7 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DCE DUP6 DUP3 DUP7 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3DDF DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E0C DUP7 DUP3 DUP8 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E1D DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E2E DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E58 DUP5 DUP3 DUP6 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E81 DUP5 DUP3 DUP6 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EAA DUP5 DUP3 DUP6 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EFC DUP5 DUP3 DUP6 ADD PUSH2 0x3D33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F26 DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F37 DUP6 DUP3 DUP7 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F65 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3F76 DUP8 DUP3 DUP9 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F87 DUP8 DUP3 DUP9 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3F98 DUP8 DUP3 DUP9 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FD6 DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4003 DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4014 DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4025 DUP7 DUP3 DUP8 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4053 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4064 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4075 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4086 DUP8 DUP3 DUP9 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x409B DUP2 PUSH2 0x4FBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40AA DUP2 PUSH2 0x4F64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40B9 DUP2 PUSH2 0x4F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40C8 DUP2 PUSH2 0x4F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D9 DUP3 PUSH2 0x4F32 JUMP JUMPDEST PUSH2 0x40E3 DUP2 DUP6 PUSH2 0x4F48 JUMP JUMPDEST SWAP4 POP PUSH2 0x40F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x504E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4108 DUP2 PUSH2 0x4FD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4117 DUP2 PUSH2 0x4FF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4126 DUP2 PUSH2 0x5018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4137 DUP3 PUSH2 0x4F3D JUMP JUMPDEST PUSH2 0x4141 DUP2 DUP6 PUSH2 0x4F53 JUMP JUMPDEST SWAP4 POP PUSH2 0x4151 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x504E JUMP JUMPDEST PUSH2 0x415A DUP2 PUSH2 0x5081 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4172 PUSH1 0x23 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A2042616C616E6365206D757374206578636565 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6420300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D8 PUSH1 0x2A DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A20496E76616C6964206E657720626F6F737420 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6D756C7469706C69657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x423E PUSH1 0x2A DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A4 PUSH1 0x26 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x430A PUSH1 0x1B DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x434A PUSH1 0x2C DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A2054686520757365722061646472657373206D PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7573742062652076616C69640000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B0 PUSH1 0x2E DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x206D7573742062652076616C6964000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4416 PUSH1 0x2E DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A2043616B652072617465206D75737420626520 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447C PUSH1 0x42 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A205468652061646472657373206973206E6F74 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20617661696C61626C6520746F206465706F73697420696E207468697320706F PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4508 PUSH1 0x21 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456E PUSH1 0x16 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x77697468647261773A20496E73756666696369656E7400000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45AE PUSH1 0x11 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F6E6520424550323020746F6B656E73000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45EE PUSH1 0x20 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x462E PUSH1 0x29 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20636F6E74726163740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4694 PUSH1 0x27 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x43414B4520746F6B656E2063616E277420626520616464656420746F20666172 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6D20706F6F6C7300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46FA PUSH1 0x30 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204F6E6C7920726567756C6172206661726D20 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x636F756C6420626520626F6F7374656400000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4760 PUSH1 0x32 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A20546865207768697465206C69737420616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x72657373206D7573742062652076616C69640000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C6 PUSH1 0x1D DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4806 PUSH1 0x25 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A20546F74616C2072617465206D757374206265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2031653132000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486C PUSH1 0x1F DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48AC PUSH1 0x41 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x206973207468652073616D6520776974682063757272656E7420616464726573 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4938 PUSH1 0x36 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204E657720626F6F737420636F6E7472616374 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2061646472657373206D7573742062652076616C696400000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x49A7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x49BA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x49CD PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x49E0 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x49F3 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4A02 DUP2 PUSH2 0x4FB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4A11 DUP2 PUSH2 0x4FB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A23 DUP3 DUP5 PUSH2 0x40CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A5E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4A79 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40A1 JUMP JUMPDEST PUSH2 0x4A86 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x40A1 JUMP JUMPDEST PUSH2 0x4A93 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4AB0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A1 JUMP JUMPDEST PUSH2 0x4ABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x410E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B2F DUP2 DUP5 PUSH2 0x412C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B50 DUP2 PUSH2 0x4165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B70 DUP2 PUSH2 0x41CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B90 DUP2 PUSH2 0x4231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB0 DUP2 PUSH2 0x4297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BD0 DUP2 PUSH2 0x42FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BF0 DUP2 PUSH2 0x433D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C10 DUP2 PUSH2 0x43A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C30 DUP2 PUSH2 0x4409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C50 DUP2 PUSH2 0x446F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C70 DUP2 PUSH2 0x44FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C90 DUP2 PUSH2 0x4561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CB0 DUP2 PUSH2 0x45A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CD0 DUP2 PUSH2 0x45E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF0 DUP2 PUSH2 0x4621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D10 DUP2 PUSH2 0x4687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D30 DUP2 PUSH2 0x46ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D50 DUP2 PUSH2 0x4753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D70 DUP2 PUSH2 0x47B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D90 DUP2 PUSH2 0x47F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DB0 DUP2 PUSH2 0x485F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DD0 DUP2 PUSH2 0x489F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DF0 DUP2 PUSH2 0x492B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4E0C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E42 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4E4F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E6B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4E78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x411D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E94 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4EA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4EBD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4ECA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4ED7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4EF4 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F01 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F0E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F1B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F28 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6F DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8D DUP3 PUSH2 0x4F64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC9 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FDB DUP3 PUSH2 0x4FE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FED DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FFF DUP3 PUSH2 0x5006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5011 DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5023 DUP3 PUSH2 0x4FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5035 DUP3 PUSH2 0x503C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5047 DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x506C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5051 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x507B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x509B DUP2 PUSH2 0x4F64 JUMP JUMPDEST DUP2 EQ PUSH2 0x50A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50B2 DUP2 PUSH2 0x4F76 JUMP JUMPDEST DUP2 EQ PUSH2 0x50BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50C9 DUP2 PUSH2 0x4F82 JUMP JUMPDEST DUP2 EQ PUSH2 0x50D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50E0 DUP2 PUSH2 0x4FB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x50EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x3ACE61D3A62CE2CFFF9FA955388DA5348138B71BDD DIV MLOAD 0xAD PUSH27 0xB1C3F903AC0D64736F6C634300060C003300000000000000000000 ",
							"sourceMap": "704:22869:2:-:0;;;4683:12;4651:44;;4796:11;4757:50;;4904:12;4865:51;;6152:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;860:17:3;880:12;:10;;;:12;;:::i;:::-;860:32;;911:9;902:6;;:18;;;;;;;;;;;;;;;;;;968:9;935:43;;964:1;935:43;;;;;;;;;;;;826:159;1628:1:4;1743:7;:22;;;;6314:12:2;6300:26;;;;;;;;;;;;6343:5;6336:12;;;;;;;;;;;;6371:11;6358:24;;;;;;6404:10;6392:9;;:22;;;;;;;;;;;;;;;;;;6152:269;;;;704:22869;;590:104:1;643:15;677:10;670:17;;590:104;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;146:164::-;;245:6;239:13;230:22;;257:48;299:5;257:48;:::i;:::-;224:86;;;;:::o;317:174::-;;421:6;415:13;406:22;;433:53;480:5;433:53;:::i;:::-;400:91;;;;:::o;498:134::-;;582:6;576:13;567:22;;594:33;621:5;594:33;:::i;:::-;561:71;;;;:::o;639:742::-;;;;;840:3;828:9;819:7;815:23;811:33;808:2;;;857:1;854;847:12;808:2;892:1;909:84;985:7;976:6;965:9;961:22;909:84;:::i;:::-;899:94;;871:128;1030:2;1048:79;1119:7;1110:6;1099:9;1095:22;1048:79;:::i;:::-;1038:89;;1009:124;1164:2;1182:64;1238:7;1229:6;1218:9;1214:22;1182:64;:::i;:::-;1172:74;;1143:109;1283:2;1301:64;1357:7;1348:6;1337:9;1333:22;1301:64;:::i;:::-;1291:74;;1262:109;802:579;;;;;;;:::o;1388:91::-;;1450:24;1468:5;1450:24;:::i;:::-;1439:35;;1433:46;;;:::o;1486:106::-;;1563:24;1581:5;1563:24;:::i;:::-;1552:35;;1546:46;;;:::o;1599:111::-;;1681:24;1699:5;1681:24;:::i;:::-;1670:35;;1664:46;;;:::o;1717:121::-;;1790:42;1783:5;1779:54;1768:65;;1762:76;;;:::o;1845:72::-;;1907:5;1896:16;;1890:27;;;:::o;1924:117::-;1993:24;2011:5;1993:24;:::i;:::-;1986:5;1983:35;1973:2;;2032:1;2029;2022:12;1973:2;1967:74;:::o;2048:147::-;2132:39;2165:5;2132:39;:::i;:::-;2125:5;2122:50;2112:2;;2186:1;2183;2176:12;2112:2;2106:89;:::o;2202:157::-;2291:44;2329:5;2291:44;:::i;:::-;2284:5;2281:55;2271:2;;2350:1;2347;2340:12;2271:2;2265:94;:::o;2366:117::-;2435:24;2453:5;2435:24;:::i;:::-;2428:5;2425:35;2415:2;;2474:1;2471;2464:12;2415:2;2409:74;:::o;704:22869:2:-;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"258": [
									{
										"length": 32,
										"start": 5038
									},
									{
										"length": 32,
										"start": 5184
									},
									{
										"length": 32,
										"start": 6363
									},
									{
										"length": 32,
										"start": 12885
									}
								],
								"261": [
									{
										"length": 32,
										"start": 6327
									},
									{
										"length": 32,
										"start": 10478
									},
									{
										"length": 32,
										"start": 14311
									},
									{
										"length": 32,
										"start": 14497
									},
									{
										"length": 32,
										"start": 14685
									}
								],
								"290": [
									{
										"length": 32,
										"start": 5244
									},
									{
										"length": 32,
										"start": 6423
									},
									{
										"length": 32,
										"start": 7609
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7398B7EA GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xAC1D0609 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDFCEDEEE GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDFCEDEEE EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xE0F91F6C EQ PUSH2 0x726 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xE39E1323 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xEDD8B170 EQ PUSH2 0x77E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x79C JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xAC1D0609 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC40D337B EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xC507AEAA EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0xCC6DB2DA EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xDC6363DF EQ PUSH2 0x6EC JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x99D7E84A EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x9DCC1B5F EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0x9DD2FCC3 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xAA47BC8E EQ PUSH2 0x65A JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x7398B7EA EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x777A97F8 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x78DB4C34 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x78ED5D1F EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x81BDF98C EQ PUSH2 0x594 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x39AAE5BA GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x5312EA8E GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x61621AAA EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x69B02128 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x502 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x39AAE5BA EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x4F70B15A EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x454 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x1CE06D57 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x1E9B828B EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x3C2 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x33186E8 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x41A84C9 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xBB844BC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x1175A1DD EQ PUSH2 0x2F4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x3DAD JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x3DE9 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x3F05 JUMP JUMPDEST PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x3E8A JUMP JUMPDEST PUSH2 0x11FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x3E38 JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x4AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH2 0x15C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x3FA4 JUMP JUMPDEST PUSH2 0x15D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH2 0x18D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x1989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x4DF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x1BB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A8 PUSH2 0x1DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH2 0x1DDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x3FE0 JUMP JUMPDEST PUSH2 0x1E8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EC PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50A PUSH2 0x206F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x514 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x3E38 JUMP JUMPDEST PUSH2 0x21CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54E PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0x3EB3 JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59C PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BA PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x3F05 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60A PUSH2 0x23A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x628 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x23EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x662 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x692 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x3D71 JUMP JUMPDEST PUSH2 0x25D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69C PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x3F41 JUMP JUMPDEST PUSH2 0x278B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D6 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x706 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x701 SWAP2 SWAP1 PUSH2 0x402F JUMP JUMPDEST PUSH2 0x2B47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x710 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72E PUSH2 0x2D37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x3FA4 JUMP JUMPDEST PUSH2 0x2D3D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x768 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x786 PUSH2 0x3253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x4AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x3D48 JUMP JUMPDEST PUSH2 0x3277 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x828 JUMPI PUSH5 0xE8D4A51000 PUSH2 0x82A JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP1 PUSH2 0x4CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP1 PUSH2 0x4BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E3 SWAP1 PUSH2 0x4D17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI POP PUSH6 0x1D1A94A2000 DUP2 GT ISZERO JUMPDEST PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP1 PUSH2 0x4B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA4E PUSH2 0x3C78 JUMP JUMPDEST PUSH2 0xA57 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xAB9 DUP7 DUP7 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP PUSH2 0xAC6 DUP7 DUP7 DUP4 PUSH2 0x3439 JUMP JUMPDEST PUSH2 0xB24 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB16 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xB08 PUSH5 0xE8D4A51000 PUSH2 0xAFA DUP11 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBAF PUSH2 0xB5D PUSH5 0xE8D4A51000 PUSH2 0xB4F DUP8 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBA1 PUSH2 0xB8E PUSH5 0xE8D4A51000 PUSH2 0xB80 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xBC6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA DUP7 DUP4 DUP8 PUSH1 0x40 MLOAD PUSH2 0xCC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCED PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE1 SWAP1 PUSH2 0x4BF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE72 SWAP1 PUSH2 0x4DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4B PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF58 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH2 0xFBE PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD SWAP1 POP DUP4 PUSH1 0x20 ADD MLOAD NUMBER GT DUP1 ISZERO PUSH2 0x105F JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 PUSH2 0x107D DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10DC DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0x1095 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH2 0x10CE DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x10C0 PUSH2 0x10B1 DUP12 PUSH1 0x80 ADD MLOAD PUSH2 0x1528 JUMP JUMPDEST DUP8 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x111D PUSH2 0x110E DUP5 PUSH2 0x1100 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH5 0xE8D4A51000 PUSH2 0x114D PUSH2 0x113A DUP11 DUP13 PUSH2 0x7B8 JUMP JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x11A0 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x1192 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1184 DUP8 DUP7 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11BA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x1205 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CD SWAP2 SWAP1 PUSH2 0x4A49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135A SWAP1 PUSH2 0x4B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1390 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36CC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EB SWAP3 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x3E61 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2BBB158 PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP3 SWAP2 SWAP1 PUSH2 0x4E7F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP NUMBER PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH32 0x57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x156C JUMPI PUSH2 0x1565 PUSH5 0xE8D4A51000 PUSH2 0x1557 PUSH1 0xB SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x15A1 PUSH5 0xE8D4A51000 PUSH2 0x1593 PUSH1 0xC SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH9 0x22B1C8C1227A00000 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x161C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x162C PUSH2 0x3C78 JUMP JUMPDEST PUSH2 0x1635 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x16D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C9 SWAP1 PUSH2 0x4C77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16DE CALLER DUP7 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x16EB CALLER DUP7 DUP4 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x170B DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1775 CALLER DUP6 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1725 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x17D4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x17C6 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x17B8 PUSH5 0xE8D4A51000 PUSH2 0x17AA DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1836 PUSH2 0x1809 PUSH5 0xE8D4A51000 PUSH2 0x17FB DUP5 DUP9 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1816 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1843 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x189F SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE2BBB158 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1955 SWAP3 SWAP2 SWAP1 PUSH2 0x4E56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1991 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x199E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD NUMBER GT ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1A24 JUMPI PUSH1 0x9 SLOAD PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1A3A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 PUSH2 0x1A58 DUP5 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AA3 DUP4 PUSH2 0x1A95 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1A87 PUSH2 0x1A78 DUP11 PUSH1 0x80 ADD MLOAD PUSH2 0x1528 JUMP JUMPDEST DUP8 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE8 PUSH2 0x1AD5 DUP6 PUSH2 0x1AC7 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP POP POP JUMPDEST NUMBER DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1B0C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP4 PUSH32 0x3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46 DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1BA1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEE SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C0E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1CC4 PUSH5 0xE8D4A51000 PUSH2 0x1CB6 PUSH2 0x1CA7 CALLER DUP10 PUSH2 0x7B8 JUMP JUMPDEST DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x3 ADD SLOAD GT PUSH2 0x1CD8 JUMPI PUSH1 0x0 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x1CEF DUP2 DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1D5A CALLER DUP4 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1D0A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1DA1 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E86 JUMPI PUSH2 0x1DF8 PUSH2 0x3C78 JUMP JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E05 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x1E7A JUMPI PUSH2 0x1E78 DUP3 PUSH2 0x1989 JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E92 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F16 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F28 DUP4 PUSH2 0x1989 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F45 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FB9 JUMPI PUSH2 0x1FAE DUP3 PUSH2 0x1FA0 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F7D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x1FFE DUP3 PUSH2 0x1FF0 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1FCD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2013 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0xC0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2058 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH6 0x1D1A94A2000 DUP2 JUMP JUMPDEST PUSH2 0x2077 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20FB SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x21D6 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225A SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2272 JUMPI PUSH2 0x2271 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2289 PUSH1 0xD SLOAD NUMBER PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22A7 PUSH2 0x2298 PUSH2 0x23AF JUMP JUMPDEST DUP4 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x22D5 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x37DB JUMP JUMPDEST NUMBER PUSH1 0xD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22F4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E6 PUSH5 0xE8D4A51000 PUSH2 0x23D8 PUSH1 0xA SLOAD PUSH9 0x22B1C8C1227A00000 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23F3 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2477 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x250B JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x254A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2541 SWAP1 PUSH2 0x4DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25DF PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x266C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2663 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x26DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D3 SWAP1 PUSH2 0x4D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2779 SWAP2 SWAP1 PUSH2 0x4AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2793 PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2817 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285B SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2887 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28AB SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST LT ISZERO PUSH2 0x28EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E3 SWAP1 PUSH2 0x4C97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x297B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2972 SWAP1 PUSH2 0x4CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x298A JUMPI PUSH2 0x2989 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST DUP2 ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29A5 DUP5 PUSH1 0x8 SLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x29CC JUMP JUMPDEST PUSH2 0x29C5 DUP5 PUSH1 0x9 SLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x5 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD NUMBER DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AFF PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2B30 SWAP3 SWAP2 SWAP1 PUSH2 0x4E2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH2 0x2B4F PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BD3 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x2BEC JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST DUP1 ISZERO PUSH2 0x2BF8 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x2C37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2E SWAP1 PUSH2 0x4C17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0x2C62 DUP4 PUSH2 0x2C54 DUP7 DUP9 PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ PUSH2 0x2CA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C99 SWAP1 PUSH2 0x4D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2CB1 JUMPI PUSH2 0x2CB0 PUSH2 0x1DDB JUMP JUMPDEST JUMPDEST PUSH2 0x2CBB PUSH1 0x0 PUSH2 0x21CE JUMP JUMPDEST DUP4 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xAE2D2E7D1AE84564FC72227253CE0F36A007209F7FD5EC414DEA80E5AF2FB5B0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D03 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4EA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x2D83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7A SWAP1 PUSH2 0x4D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x2D93 PUSH2 0x3C78 JUMP JUMPDEST PUSH2 0x2D9C DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD DUP1 PUSH2 0x2E4B JUMPI POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x2E8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E81 SWAP1 PUSH2 0x4C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E96 CALLER DUP7 PUSH2 0x7B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2EB1 JUMPI PUSH2 0x2EB0 CALLER DUP7 DUP4 PUSH2 0x3439 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x3120 JUMPI PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x2EC9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2C SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F7C SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE2 CALLER ADDRESS DUP8 PUSH1 0x5 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x2F91 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36CC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30B4 DUP2 PUSH1 0x5 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x2FF3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3056 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x306E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30A6 SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP PUSH2 0x30CD DUP6 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3115 PUSH2 0x3102 PUSH5 0xE8D4A51000 PUSH2 0x30F4 DUP6 DUP10 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x366F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP POP JUMPDEST PUSH2 0x317E PUSH8 0xDE0B6B3A7640000 PUSH2 0x3170 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x3162 PUSH5 0xE8D4A51000 PUSH2 0x3154 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x3194 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3234 SWAP2 SWAP1 PUSH2 0x4E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x327F PUSH2 0x36C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x330C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3303 SWAP1 PUSH2 0x4CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x337C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3373 SWAP1 PUSH2 0x4B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x3441 PUSH2 0x3CA9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x34EC PUSH5 0xE8D4A51000 PUSH2 0x34DE DUP6 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x353B PUSH8 0xDE0B6B3A7640000 PUSH2 0x352D PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x350C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH2 0x356B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3556 DUP5 PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x3625 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3562 DUP8 DUP3 PUSH2 0x37DB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x357E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x358F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x35D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C7 SWAP1 PUSH2 0x4C57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x39A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3667 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x3A08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x36BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B1 SWAP1 PUSH2 0x4BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x374F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x36ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3A63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x37D6 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3774 SWAP3 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3A63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x39A3 JUMPI DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383E SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x386A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x388E SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST LT ISZERO PUSH2 0x389D JUMPI PUSH2 0x389C PUSH2 0x18D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F8 SWAP2 SWAP1 PUSH2 0x4A2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3924 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3948 SWAP2 SWAP1 PUSH2 0x3EDC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3956 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x39A1 DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3755 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x39EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E5 SWAP2 SWAP1 PUSH2 0x4B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x39FA JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3A50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A47 SWAP2 SWAP1 PUSH2 0x4B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AC5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B2A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3B25 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3AE5 SWAP2 SWAP1 PUSH2 0x3E61 JUMP JUMPDEST PUSH2 0x3B24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B1B SWAP1 PUSH2 0x4B77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B39 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3B42 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B4D DUP6 PUSH2 0x3C65 JUMP JUMPDEST PUSH2 0x3B8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B83 SWAP1 PUSH2 0x4D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3BB6 SWAP2 SWAP1 PUSH2 0x4A17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3BF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3BF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x3C0D JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x3C5D JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3C20 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C54 SWAP2 SWAP1 PUSH2 0x4B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CD9 DUP2 PUSH2 0x5092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CEE DUP2 PUSH2 0x50A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D03 DUP2 PUSH2 0x50A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D18 DUP2 PUSH2 0x50C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3D2D DUP2 PUSH2 0x50D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3D42 DUP2 PUSH2 0x50D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D68 DUP5 DUP3 DUP6 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3D92 DUP6 DUP3 DUP7 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3DA3 DUP6 DUP3 DUP7 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3DCE DUP6 DUP3 DUP7 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3DDF DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E0C DUP7 DUP3 DUP8 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3E1D DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E2E DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E58 DUP5 DUP3 DUP6 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E81 DUP5 DUP3 DUP6 ADD PUSH2 0x3CF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EAA DUP5 DUP3 DUP6 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3ED3 DUP5 DUP3 DUP6 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3EFC DUP5 DUP3 DUP6 ADD PUSH2 0x3D33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F26 DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F37 DUP6 DUP3 DUP7 ADD PUSH2 0x3CCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F65 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3F76 DUP8 DUP3 DUP9 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F87 DUP8 DUP3 DUP9 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3F98 DUP8 DUP3 DUP9 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3FC5 DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3FD6 DUP6 DUP3 DUP7 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4003 DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4014 DUP7 DUP3 DUP8 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4025 DUP7 DUP3 DUP8 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4053 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4064 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4075 DUP8 DUP3 DUP9 ADD PUSH2 0x3D1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4086 DUP8 DUP3 DUP9 ADD PUSH2 0x3CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x409B DUP2 PUSH2 0x4FBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40AA DUP2 PUSH2 0x4F64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40B9 DUP2 PUSH2 0x4F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x40C8 DUP2 PUSH2 0x4F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D9 DUP3 PUSH2 0x4F32 JUMP JUMPDEST PUSH2 0x40E3 DUP2 DUP6 PUSH2 0x4F48 JUMP JUMPDEST SWAP4 POP PUSH2 0x40F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x504E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4108 DUP2 PUSH2 0x4FD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4117 DUP2 PUSH2 0x4FF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4126 DUP2 PUSH2 0x5018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4137 DUP3 PUSH2 0x4F3D JUMP JUMPDEST PUSH2 0x4141 DUP2 DUP6 PUSH2 0x4F53 JUMP JUMPDEST SWAP4 POP PUSH2 0x4151 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x504E JUMP JUMPDEST PUSH2 0x415A DUP2 PUSH2 0x5081 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4172 PUSH1 0x23 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A2042616C616E6365206D757374206578636565 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6420300000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D8 PUSH1 0x2A DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A20496E76616C6964206E657720626F6F737420 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6D756C7469706C69657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x423E PUSH1 0x2A DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A4 PUSH1 0x26 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x430A PUSH1 0x1B DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x434A PUSH1 0x2C DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A2054686520757365722061646472657373206D PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7573742062652076616C69640000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B0 PUSH1 0x2E DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x206D7573742062652076616C6964000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4416 PUSH1 0x2E DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A2043616B652072617465206D75737420626520 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x447C PUSH1 0x42 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A205468652061646472657373206973206E6F74 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20617661696C61626C6520746F206465706F73697420696E207468697320706F PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6F6C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4508 PUSH1 0x21 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456E PUSH1 0x16 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x77697468647261773A20496E73756666696369656E7400000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45AE PUSH1 0x11 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F6E6520424550323020746F6B656E73000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45EE PUSH1 0x20 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x462E PUSH1 0x29 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20636F6E74726163740000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4694 PUSH1 0x27 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x43414B4520746F6B656E2063616E277420626520616464656420746F20666172 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6D20706F6F6C7300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46FA PUSH1 0x30 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204F6E6C7920726567756C6172206661726D20 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x636F756C6420626520626F6F7374656400000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4760 PUSH1 0x32 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A20546865207768697465206C69737420616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x72657373206D7573742062652076616C69640000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47C6 PUSH1 0x1D DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4806 PUSH1 0x25 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A20546F74616C2072617465206D757374206265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2031653132000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486C PUSH1 0x1F DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48AC PUSH1 0x41 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204275726E2061646D696E2061646472657373 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x206973207468652073616D6520776974682063757272656E7420616464726573 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4938 PUSH1 0x36 DUP4 PUSH2 0x4F53 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D61737465724368656656323A204E657720626F6F737420636F6E7472616374 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2061646472657373206D7573742062652076616C696400000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x49A7 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x49BA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x49CD PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x49E0 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x49F9 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x49F3 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x40B0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4A02 DUP2 PUSH2 0x4FB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4A11 DUP2 PUSH2 0x4FB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A23 DUP3 DUP5 PUSH2 0x40CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A5E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4092 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4A79 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40A1 JUMP JUMPDEST PUSH2 0x4A86 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x40A1 JUMP JUMPDEST PUSH2 0x4A93 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4AB0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A1 JUMP JUMPDEST PUSH2 0x4ABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x410E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B2F DUP2 DUP5 PUSH2 0x412C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B50 DUP2 PUSH2 0x4165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B70 DUP2 PUSH2 0x41CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B90 DUP2 PUSH2 0x4231 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB0 DUP2 PUSH2 0x4297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BD0 DUP2 PUSH2 0x42FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BF0 DUP2 PUSH2 0x433D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C10 DUP2 PUSH2 0x43A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C30 DUP2 PUSH2 0x4409 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C50 DUP2 PUSH2 0x446F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C70 DUP2 PUSH2 0x44FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C90 DUP2 PUSH2 0x4561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CB0 DUP2 PUSH2 0x45A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CD0 DUP2 PUSH2 0x45E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF0 DUP2 PUSH2 0x4621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D10 DUP2 PUSH2 0x4687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D30 DUP2 PUSH2 0x46ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D50 DUP2 PUSH2 0x4753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D70 DUP2 PUSH2 0x47B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D90 DUP2 PUSH2 0x47F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DB0 DUP2 PUSH2 0x485F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DD0 DUP2 PUSH2 0x489F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DF0 DUP2 PUSH2 0x492B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4E0C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E42 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4E4F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E6B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4E78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x411D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E94 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4EA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4EBD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4ECA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4ED7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4A08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4EF4 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F01 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F0E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F1B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x4A08 JUMP JUMPDEST PUSH2 0x4F28 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x40BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6F DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8D DUP3 PUSH2 0x4F64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC9 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FDB DUP3 PUSH2 0x4FE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FED DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FFF DUP3 PUSH2 0x5006 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5011 DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5023 DUP3 PUSH2 0x4FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5035 DUP3 PUSH2 0x503C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5047 DUP3 PUSH2 0x4F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x506C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5051 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x507B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x509B DUP2 PUSH2 0x4F64 JUMP JUMPDEST DUP2 EQ PUSH2 0x50A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50B2 DUP2 PUSH2 0x4F76 JUMP JUMPDEST DUP2 EQ PUSH2 0x50BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50C9 DUP2 PUSH2 0x4F82 JUMP JUMPDEST DUP2 EQ PUSH2 0x50D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x50E0 DUP2 PUSH2 0x4FB4 JUMP JUMPDEST DUP2 EQ PUSH2 0x50EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x3ACE61D3A62CE2CFFF9FA955388DA5348138B71BDD DIV MLOAD 0xAD PUSH27 0xB1C3F903AC0D64736F6C634300060C003300000000000000000000 ",
							"sourceMap": "704:22869:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21958:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20548:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7599:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18980:394;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10496:953;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3197:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;7037:506;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4865:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11973:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3509:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4005:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15227:881;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2937:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16199:91;;;:::i;:::-;;12753:932;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16427:677;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3622:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11544:283;;;:::i;:::-;;9616:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4345:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1684:145:3;;;:::i;:::-;;4072:49:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17238:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4923:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3289:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3037:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1061:77:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3359:64:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3918:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12406:169;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19963:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4757:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19547:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3769:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8238:1078;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4197:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18006:872;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3122:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4651:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13845:1218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4472:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1978:240:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21958:238:2;22036:7;22055:18;22076:8;:14;22085:4;22076:14;;;;;;;;;;;:21;22091:5;22076:21;;;;;;;;;;;;;;;:37;;;22055:58;;4239:10;22130;:28;:59;;4239:10;22130:59;;;22161:10;22130:59;22123:66;;;21958:238;;;;:::o;20548:1268::-;6563:10;6546:27;;:13;;;;;;;;;;;:27;;;6538:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:1:4::1;2260:7;;:19;;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:1;2390:7;:18;;;;20737:1:2::2;20720:19;;:5;:19;;;;20712:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;20806:8;20815:4;20806:14;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;20798:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4239:10;20914:14;:33;;:74;;;;;4391:10;20951:14;:37;;20914:74;20893:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;21067:20;;:::i;:::-;21090:16;21101:4;21090:10;:16::i;:::-;21067:39;;21116:21;21140:8;:14;21149:4;21140:14;;;;;;;;;;;:21;21155:5;21140:21;;;;;;;;;;;;;;;21116:45;;21172:22;21197:31;21216:5;21223:4;21197:18;:31::i;:::-;21172:56;;21238:46;21256:5;21263:4;21269:14;21238:17;:46::i;:::-;21313:124;4117:4;21313:78;21370:4;:20;;;21313:52;4239:10;21313:31;21329:14;21313:4;:11;;;:15;;:31;;;;:::i;:::-;:35;;:52;;;;:::i;:::-;:56;;:78;;;;:::i;:::-;:82;;:124;;;;:::i;:::-;21295:4;:15;;:142;;;;21472:160;21570:52;4239:10;21570:31;21586:14;21570:4;:11;;;:15;;:31;;;;:::i;:::-;:35;;:52;;;;:::i;:::-;21472:80;21499:52;4239:10;21499:31;21515:14;21499:4;:11;;;:15;;:31;;;;:::i;:::-;:35;;:52;;;;:::i;:::-;21472:4;:22;;;:26;;:80;;;;:::i;:::-;:84;;:160;;;;:::i;:::-;21447:4;:22;;:185;;;::::0;::::2;21659:4;21642:8;21651:4;21642:14;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21713:14;21673:8;:14;21682:4;21673:14;;;;;;;;;;;:21;21688:5;21673:21;;;;;;;;;;;;;;;:37;;:54;;;;21765:5;21743:66;;;21772:4;21778:14;21794;21743:66;;;;;;;;:::i;:::-;;;;;;;;2419:1:4;;;1628::::1;2563:7:::0;:22:::1;;;;20548:1268:2::0;;;:::o;7599:98::-;7642:13;7675:8;:15;;;;7667:23;;7599:98;:::o;18980:394::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;19082:1:2::1;19061:23;;:9;:23;;;;19053:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;19166:9;;;;;;;;;;;19153:22;;:9;:22;;;;19145:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;19255:17;19275:9;;;;;;;;;;;19255:29;;19306:9;19294;;:21;;;;;;;;;;;;;;;;;;19357:9;19330:37;;19346:9;19330:37;;;;;;;;;;;;1334:1:3;18980:394:2::0;:::o;10496:953::-;10569:7;10588:20;;:::i;:::-;10611:8;10620:4;10611:14;;;;;;;;;;;;;;;;;;10588:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10635:20;;:::i;:::-;10658:8;:14;10667:4;10658:14;;;;;;;;;;;:21;10673:5;10658:21;;;;;;;;;;;;;;;10635:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10689:23;10715:4;:20;;;10689:46;;10745:16;10764:4;:22;;;10745:41;;10816:4;:20;;;10801:12;:35;:52;;;;;10852:1;10840:8;:13;;10801:52;10797:446;;;10869:18;10890:38;10907:4;:20;;;10890:12;:16;;:38;;;;:::i;:::-;10869:59;;10943:18;10964:167;11052:4;:14;;;:64;;11094:22;;11052:64;;;11069:22;;11052:64;10964:65;11013:4;:15;;;10964:44;10979:28;10992:4;:14;;;10979:12;:28::i;:::-;10964:10;:14;;:44;;;;:::i;:::-;:48;;:65;;;;:::i;:::-;:69;;:167;;;;:::i;:::-;10943:188;;11163:69;11183:48;11222:8;11183:34;4117:4;11183:10;:14;;:34;;;;:::i;:::-;:38;;:48;;;;:::i;:::-;11163:15;:19;;:69;;;;:::i;:::-;11145:87;;10797:446;;;11253:21;11277:69;4239:10;11277:48;11293:31;11312:5;11319:4;11293:18;:31::i;:::-;11277:4;:11;;;:15;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;11253:93;;11363:79;11426:4;:15;;;11363:58;4117:4;11363:34;11381:15;11363:13;:17;;:34;;;;:::i;:::-;:38;;:58;;;;:::i;:::-;:62;;:79;;;;:::i;:::-;11356:86;;;;;;;10496:953;;;;:::o;3197:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7037:506::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7099:15:2::1;7117:10;:20;;;7138:10;7117:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7099:50;;7178:1;7167:7;:12;;7159:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7229:63;7257:10;7277:4;7284:7;7229:10;:27;;;;:63;;;;;;:::i;:::-;7302:10;:18;;;7329:11;7343:7;7302:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7361:11;:19;;;7381:10;7393:7;7361:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7503:12;7485:15;:30;;;;7530:6;;;;;;;;;;1334:1:3;7037:506:2::0;:::o;4865:51::-;;;;:::o;11973:348::-;12033:14;12063:10;12059:256;;;12098:83;4524:4;12098:52;12128:21;;4057:9;12098:29;;:52;;;;:::i;:::-;:56;;:83;;;;:::i;:::-;12089:92;;12059:256;;;12221:83;4524:4;12221:52;12251:21;;4057:9;12221:29;;:52;;;;:::i;:::-;:56;;:83;;;;:::i;:::-;12212:92;;12059:256;11973:348;;;:::o;3509:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;4005:61::-;4057:9;4005:61;:::o;15227:881::-;1671:1:4;2260:7;;:19;;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:1;2390:7;:18;;;;15308:20:2::1;;:::i;:::-;15331:16;15342:4;15331:10;:16::i;:::-;15308:39;;15357:21;15381:8;:14;15390:4;15381:14;;;;;;;;;;;:26;15396:10;15381:26;;;;;;;;;;;;;;;15357:50;;15441:7;15426:4;:11;;;:22;;15418:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;15486:18;15507:36;15526:10;15538:4;15507:18;:36::i;:::-;15486:57;;15554:47;15572:10;15584:4;15590:10;15554:17;:47::i;:::-;15626:1;15616:7;:11;15612:141;;;15657:24;15673:7;15657:4;:11;;;:15;;:24;;;;:::i;:::-;15643:4;:11;;:38;;;;15695:47;15722:10;15734:7;15695;15703:4;15695:13;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;;:47;;;;;:::i;:::-;15612:141;15781:120;4117:4;15781:74;15834:4;:20;;;15781:48;4239:10;15781:27;15797:10;15781:4;:11;;;:15;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:74;;;;:::i;:::-;:78;;:120;;;;:::i;:::-;15763:4;:15;;:138;;;;15946:104;15996:44;4239:10;15996:23;16008:10;15996:7;:11;;:23;;;;:::i;:::-;:27;;:44;;;;:::i;:::-;15946:8;15955:4;15946:14;;;;;;;;;;;;;;;;;;:32;;;:36;;:104;;;;:::i;:::-;15911:8;15920:4;15911:14;;;;;;;;;;;;;;;;;;:32;;:139;;;;16087:4;16075:10;16066:35;;;16093:7;16066:35;;;;;;:::i;:::-;;;;;;;;2419:1:4;;;1628::::0;2563:7;:22;;;;15227:881:2;;:::o;2937:28::-;;;:::o;16199:91::-;16249:11;:19;;;16269:10;16281:1;16249:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16199:91::o;12753:932::-;12803:20;;:::i;:::-;12842:8;12851:4;12842:14;;;;;;;;;;;;;;;;;;12835:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12885:4;:20;;;12870:12;:35;12866:813;;;12921:16;12940:4;:22;;;12921:41;;12976:23;13003:4;:14;;;:64;;13045:22;;13003:64;;;13020:22;;13003:64;12976:92;;13098:1;13087:8;:12;:35;;;;;13121:1;13103:15;:19;13087:35;13083:413;;;13142:18;13163:38;13180:4;:20;;;13163:12;:16;;:38;;;;:::i;:::-;13142:59;;13219:18;13240:124;13331:15;13240:65;13289:4;:15;;;13240:44;13255:28;13268:4;:14;;;13255:12;:28::i;:::-;13240:10;:14;;:44;;;;:::i;:::-;:48;;:65;;;;:::i;:::-;:69;;:124;;;;:::i;:::-;13219:145;;13405:76;13431:48;13470:8;13431:34;4117:4;13431:10;:14;;:34;;;;:::i;:::-;:38;;:48;;;;:::i;:::-;13405:4;:20;;;:24;;:76;;;;:::i;:::-;13382:4;:20;;:99;;;;;13083:413;;;13532:12;13509:4;:20;;:35;;;;;13575:4;13558:8;13567:4;13558:14;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13609:4;13598:70;13615:4;:20;;;13637:8;13647:4;:20;;;13598:70;;;;;;;;:::i;:::-;;;;;;;;12866:813;;;12753:932;;;:::o;16427:677::-;1671:1:4;2260:7;;:19;;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:1;2390:7;:18;;;;16500:21:2::1;16524:8;16533:4;16524:14;;;;;;;;;;;;;;;;;;16500:38;;16548:21;16572:8;:14;16581:4;16572:14;;;;;;;;;;;:26;16587:10;16572:26;;;;;;;;;;;;;;;16548:50;;16609:14;16626:4;:11;;;16609:28;;16661:1;16647:4;:11;;:15;;;;16690:1;16672:4;:15;;:19;;;;16701:21;16725:69;4239:10;16725:48;16736:36;16755:10;16767:4;16736:18;:36::i;:::-;16725:6;:10;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;16701:93;;16854:13;16829:4;:22;;;:38;:86;;16914:1;16829:86;;;16870:41;16897:13;16870:4;:22;;;:26;;:41;;;;:::i;:::-;16829:86;16804:4;:22;;:111;;;;16993:46;17020:10;17032:6;16993:7;17001:4;16993:13;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;;:46;;;;;:::i;:::-;17084:4;17072:10;17054:43;;;17090:6;17054:43;;;;;;:::i;:::-;;;;;;;;2419:1:4;;;;1628::::0;2563:7;:22;;;;16427:677:2;:::o;3622:35::-;;;:::o;11544:283::-;11588:14;11605:8;:15;;;;11588:32;;11635:11;11630:191;11658:6;11652:3;:12;11630:191;;;11687:20;;:::i;:::-;11710:8;11719:3;11710:13;;;;;;;;;;;;;;;;;;11687:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11760:1;11741:4;:15;;;:20;11737:74;;11781:15;11792:3;11781:10;:15::i;:::-;;11737:74;11630:191;11666:5;;;;;11630:191;;;;11544:283;:::o;9616:711::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9859:16:2::1;9870:4;9859:10;:16::i;:::-;;9890:11;9886:59;;;9917:17;:15;:17::i;:::-;9886:59;9959:8;9968:4;9959:14;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;9955:276;;;10024:70;10082:11;10024:53;10051:8;10060:4;10051:14;;;;;;;;;;;;;;;;;;:25;;;10024:22;;:26;;:53;;;;:::i;:::-;:57;;:70;;;;:::i;:::-;9999:22;:95;;;;9955:276;;;10150:70;10208:11;10150:53;10177:8;10186:4;10177:14;;;;;;;;;;;;;;;;;;:25;;;10150:22;;:26;;:53;;;;:::i;:::-;:57;;:70;;;;:::i;:::-;10125:22;:95;;;;9955:276;10268:11;10240:8;10249:4;10240:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;10302:4;10294:26;10308:11;10294:26;;;;;;:::i;:::-;;;;;;;;9616:711:::0;;;:::o;4345:56::-;4391:10;4345:56;:::o;1684:145:3:-;1275:12;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1790:1:::1;1753:40;;1774:6;::::0;::::1;;;;;;;;1753:40;;;;;;;;;;;;1820:1;1803:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1684:145::o:0;4072:49:2:-;4117:4;4072:49;:::o;17238:390::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;17305:11:2::1;17301:59;;;17332:17;:15;:17::i;:::-;17301:59;17370:18;17391:33;17408:15;;17391:12;:16;;:33;;;;:::i;:::-;17370:54;;17434:25;17462:36;17477:20;:18;:20::i;:::-;17462:10;:14;;:36;;;;:::i;:::-;17434:64;;17538:43;17552:9;;;;;;;;;;;17563:17;17538:13;:43::i;:::-;17609:12;17591:15;:30;;;;1334:1:3;;17238:390:2::0;:::o;4923:30::-;;;;:::o;3289:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3037:24::-;;;;;;;;;;;;;:::o;1061:77:3:-;1099:7;1125:6;;;;;;;;;;;1118:13;;1061:77;:::o;3359:64:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3918:37::-;;;;:::o;12406:169::-;12457:14;12492:76;4524:4;12492:45;12522:14;;4057:9;12492:29;;:45;;;;:::i;:::-;:49;;:76;;;;:::i;:::-;12483:85;;12406:169;:::o;19963:359::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;20098:1:2::1;20069:31;;:17;:31;;;;:69;;;;;20125:13;;;;;;;;;;;20104:34;;:17;:34;;;;20069:69;20048:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;20245:17;20229:13;;:33;;;;;;;;;;;;;;;;;;20297:17;20277:38;;;;;;;;;;;;19963:359:::0;:::o;4757:50::-;;;;:::o;19547:258::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;19656:1:2::1;19639:19;;:5;:19;;;;19631:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;19743:8;19724:9;:16;19734:5;19724:16;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;19782:5;19766:32;;;19789:8;19766:32;;;;;;:::i;:::-;;;;;;;;19547:258:::0;;:::o;3769:37::-;;;;:::o;8238:1078::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8436:1:2::1;8399:8;:18;;;8426:4;8399:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;8391:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8641:4;8629:16;;:8;:16;;;;8621:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8704:11;8700:59;;;8731:17;:15;:17::i;:::-;8700:59;8773:10;8769:200;;;8824:39;8851:11;8824:22;;:26;;:39;;;;:::i;:::-;8799:22;:64;;;;8769:200;;;8919:39;8946:11;8919:22;;:26;;:39;;;;:::i;:::-;8894:22;:64;;;;8769:200;8978:7;8991:8;8978:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9011:8;9038:181;;;;;;;;9146:1;9038:181;;;;9107:12;9038:181;;;;9069:11;9038:181;;;;9207:1;9038:181;;;;9168:10;9038:181;;;;::::0;9011:218:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9288:8;9244:65;;9252:21;9271:1;9252:7;:14;;;;:18;;:21;;;;:::i;:::-;9244:65;9275:11;9298:10;9244:65;;;;;;;:::i;:::-;;;;;;;;8238:1078:::0;;;;:::o;4197:52::-;4239:10;4197:52;:::o;18006:872::-;1275:12:3;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;18219:1:2::1;18207:9;:13;:37;;;;;18243:1;18224:16;:20;18207:37;:61;;;;;18267:1;18248:16;:20;18207:61;18186:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;4524:4;18371:53;18407:16;18371:31;18385:16;18371:9;:13;;:31;;;;:::i;:::-;:35;;:53;;;;:::i;:::-;:82;18350:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;18530:11;18526:59;;;18557:17;:15;:17::i;:::-;18526:59;18642:15;18651:5;18642:8;:15::i;:::-;18685:9;18668:14;:26;;;;18728:16;18704:21;:40;;;;18778:16;18754:21;:40;;;;18810:61;18825:9;18836:16;18854;18810:61;;;;;;;;:::i;:::-;;;;;;;;18006:872:::0;;;;:::o;3122:28::-;;;;;;;;;;;;;:::o;4651:44::-;;;;:::o;13845:1218::-;1671:1:4;2260:7;;:19;;2252:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:1;2390:7;:18;;;;13925:20:2::1;;:::i;:::-;13948:16;13959:4;13948:10;:16::i;:::-;13925:39;;13974:21;13998:8;:14;14007:4;13998:14;;;;;;;;;;;:26;14013:10;13998:26;;;;;;;;;;;;;;;13974:50;;14056:4;:14;;;:39;;;;14074:9;:21;14084:10;14074:21;;;;;;;;;;;;;;;;;;;;;;;;;14056:39;14035:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;14198:18;14219:36;14238:10;14250:4;14219:18;:36::i;:::-;14198:57;;14284:1;14270:4;:11;;;:15;14266:93;;;14301:47;14319:10;14331:4;14337:10;14301:17;:47::i;:::-;14266:93;14383:1;14373:7;:11;14369:458;;;14400:14;14417:7;14425:4;14417:13;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;14449:4;14417:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14400:55;;14469:66;14500:10;14520:4;14527:7;14469;14477:4;14469:13;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;:66;;;;;;:::i;:::-;14559:50;14602:6;14559:7;14567:4;14559:13;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;14591:4;14559:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;:50;;;;:::i;:::-;14549:60;;14637:24;14653:7;14637:4;:11;;;:15;;:24;;;;:::i;:::-;14623:4;:11;;:38;;;;14744:72;14771:44;4239:10;14771:23;14783:10;14771:7;:11;;:23;;;;:::i;:::-;:27;;:44;;;;:::i;:::-;14744:4;:22;;;:26;;:72;;;;:::i;:::-;14719:4;:22;;:97;;;::::0;::::1;14369:458;;14855:120;4117:4;14855:74;14908:4;:20;;;14855:48;4239:10;14855:27;14871:10;14855:4;:11;;;:15;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;:52;;:74;;;;:::i;:::-;:78;;:120;;;;:::i;:::-;14837:4;:15;;:138;;;;15002:4;14985:8;14994:4;14985:14;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15042:4;15030:10;15022:34;;;15048:7;15022:34;;;;;;:::i;:::-;;;;;;;;2419:1:4;;;1628::::0;2563:7;:22;;;;13845:1218:2;;:::o;4472:56::-;4524:4;4472:56;:::o;2849:40::-;;;:::o;1978:240:3:-;1275:12;:10;:12::i;:::-;1265:22;;:6;;;;;;;;;;:22;;;1257:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2086:1:::1;2066:22;;:8;:22;;;;2058:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2175:8;2146:38;;2167:6;::::0;::::1;;;;;;;;2146:38;;;;;;;;;;;;2203:8;2194:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1978:240:::0;:::o;22451:496:2:-;22582:20;;:::i;:::-;22605:8;:14;22614:4;22605:14;;;;;;;;;;;:21;22620:5;22605:21;;;;;;;;;;;;;;;22582:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22637:21;22661:54;4239:10;22661:33;22677:16;22661:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:54;;;;:::i;:::-;22637:78;;22725:15;22743:73;4117:4;22743:49;22761:8;22770:4;22761:14;;;;;;;;;;;;;;;;;;:30;;;22743:13;:17;;:49;;;;:::i;:::-;:53;;:73;;;;:::i;:::-;22725:91;;22826:15;22844:28;22856:4;:15;;;22844:7;:11;;:28;;;;:::i;:::-;22826:46;;22911:29;22925:5;22932:7;22911:13;:29::i;:::-;22451:496;;;;;;;:::o;2180:459:6:-;2238:7;2484:1;2479;:6;2475:45;;;2508:1;2501:8;;;;2475:45;2530:9;2546:1;2542;:5;2530:17;;2574:1;2569;2565;:5;;;;;;:10;2557:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2631:1;2624:8;;;2180:459;;;;;:::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3178:46;;3101:130;;;;:::o;1321:134::-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;;1321:134;;;;:::o;874:176::-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;590:104:1:-;643:15;677:10;670:17;;590:104;:::o;932:275:5:-;1070:130;1103:5;1145:27;;;1174:4;1180:2;1184:5;1122:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:19;:130::i;:::-;932:275;;;;:::o;687:239::-;799:120;832:5;874:23;;;899:2;903:5;851:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:120::i;:::-;687:239;;;:::o;23081:490:2:-;23167:1;23157:7;:11;23153:412;;;23298:7;23266:4;:14;;;23289:4;23266:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;23262:101;;;23325:23;:21;:23::i;:::-;23262:101;23376:15;23394:4;:14;;;23417:4;23394:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23376:47;;23451:7;23441;:17;23437:73;;;23488:7;23478:17;;23437:73;23523:31;23541:3;23546:7;23523:4;:17;;;;:31;;;;;:::i;:::-;23153:412;;23081:490;;:::o;3713:272:6:-;3799:7;3830:1;3826;:5;3833:12;3818:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;3856:17;;3977:1;3970:8;;;3713:272;;;;;:::o;1746:187::-;1832:7;1864:1;1859;:6;;1867:12;1851:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1890:9;1906:1;1902;:5;1890:17;;1925:1;1918:8;;;1746:187;;;;;:::o;3315:817:5:-;3734:23;3768:69;3796:4;3768:69;;;;;;;;;;;;;;;;;3776:5;3768:27;;;;:69;;;;;:::i;:::-;3734:103;;3871:1;3851:10;:17;:21;3847:279;;;4020:10;4009:30;;;;;;;;;;;;:::i;:::-;3984:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:279;3315:817;;;:::o;3573:194:0:-;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;;3573:194;;;;;:::o;4920:958::-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5205:12;5219:23;5246:6;:11;;5266:8;5277:4;5246:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;5319:17;;;;;;5292:580;5457:1;5437:10;:17;:21;5433:429;;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5834:12;5827:20;;;;;;;;;;;:::i;:::-;;;;;;;;4920:958;;;;;;;:::o;718:413::-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:124::-;;219:6;206:20;197:29;;231:30;255:5;231:30;:::i;:::-;191:75;;;;:::o;273:128::-;;354:6;348:13;339:22;;366:30;390:5;366:30;:::i;:::-;333:68;;;;:::o;408:160::-;;503:6;490:20;481:29;;515:48;557:5;515:48;:::i;:::-;475:93;;;;:::o;575:130::-;;655:6;642:20;633:29;;667:33;694:5;667:33;:::i;:::-;627:78;;;;:::o;712:134::-;;796:6;790:13;781:22;;808:33;835:5;808:33;:::i;:::-;775:71;;;;:::o;853:241::-;;957:2;945:9;936:7;932:23;928:32;925:2;;;973:1;970;963:12;925:2;1008:1;1025:53;1070:7;1061:6;1050:9;1046:22;1025:53;:::i;:::-;1015:63;;987:97;919:175;;;;:::o;1101:360::-;;;1219:2;1207:9;1198:7;1194:23;1190:32;1187:2;;;1235:1;1232;1225:12;1187:2;1270:1;1287:53;1332:7;1323:6;1312:9;1308:22;1287:53;:::i;:::-;1277:63;;1249:97;1377:2;1395:50;1437:7;1428:6;1417:9;1413:22;1395:50;:::i;:::-;1385:60;;1356:95;1181:280;;;;;:::o;1468:366::-;;;1589:2;1577:9;1568:7;1564:23;1560:32;1557:2;;;1605:1;1602;1595:12;1557:2;1640:1;1657:53;1702:7;1693:6;1682:9;1678:22;1657:53;:::i;:::-;1647:63;;1619:97;1747:2;1765:53;1810:7;1801:6;1790:9;1786:22;1765:53;:::i;:::-;1755:63;;1726:98;1551:283;;;;;:::o;1841:491::-;;;;1979:2;1967:9;1958:7;1954:23;1950:32;1947:2;;;1995:1;1992;1985:12;1947:2;2030:1;2047:53;2092:7;2083:6;2072:9;2068:22;2047:53;:::i;:::-;2037:63;;2009:97;2137:2;2155:53;2200:7;2191:6;2180:9;2176:22;2155:53;:::i;:::-;2145:63;;2116:98;2245:2;2263:53;2308:7;2299:6;2288:9;2284:22;2263:53;:::i;:::-;2253:63;;2224:98;1941:391;;;;;:::o;2339:235::-;;2440:2;2428:9;2419:7;2415:23;2411:32;2408:2;;;2456:1;2453;2446:12;2408:2;2491:1;2508:50;2550:7;2541:6;2530:9;2526:22;2508:50;:::i;:::-;2498:60;;2470:94;2402:172;;;;:::o;2581:257::-;;2693:2;2681:9;2672:7;2668:23;2664:32;2661:2;;;2709:1;2706;2699:12;2661:2;2744:1;2761:61;2814:7;2805:6;2794:9;2790:22;2761:61;:::i;:::-;2751:71;;2723:105;2655:183;;;;:::o;2845:271::-;;2964:2;2952:9;2943:7;2939:23;2935:32;2932:2;;;2980:1;2977;2970:12;2932:2;3015:1;3032:68;3092:7;3083:6;3072:9;3068:22;3032:68;:::i;:::-;3022:78;;2994:112;2926:190;;;;:::o;3123:241::-;;3227:2;3215:9;3206:7;3202:23;3198:32;3195:2;;;3243:1;3240;3233:12;3195:2;3278:1;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3257:97;3189:175;;;;:::o;3371:263::-;;3486:2;3474:9;3465:7;3461:23;3457:32;3454:2;;;3502:1;3499;3492:12;3454:2;3537:1;3554:64;3610:7;3601:6;3590:9;3586:22;3554:64;:::i;:::-;3544:74;;3516:108;3448:186;;;;:::o;3641:366::-;;;3762:2;3750:9;3741:7;3737:23;3733:32;3730:2;;;3778:1;3775;3768:12;3730:2;3813:1;3830:53;3875:7;3866:6;3855:9;3851:22;3830:53;:::i;:::-;3820:63;;3792:97;3920:2;3938:53;3983:7;3974:6;3963:9;3959:22;3938:53;:::i;:::-;3928:63;;3899:98;3724:283;;;;;:::o;4014:635::-;;;;;4178:3;4166:9;4157:7;4153:23;4149:33;4146:2;;;4195:1;4192;4185:12;4146:2;4230:1;4247:53;4292:7;4283:6;4272:9;4268:22;4247:53;:::i;:::-;4237:63;;4209:97;4337:2;4355:68;4415:7;4406:6;4395:9;4391:22;4355:68;:::i;:::-;4345:78;;4316:113;4460:2;4478:50;4520:7;4511:6;4500:9;4496:22;4478:50;:::i;:::-;4468:60;;4439:95;4565:2;4583:50;4625:7;4616:6;4605:9;4601:22;4583:50;:::i;:::-;4573:60;;4544:95;4140:509;;;;;;;:::o;4656:366::-;;;4777:2;4765:9;4756:7;4752:23;4748:32;4745:2;;;4793:1;4790;4783:12;4745:2;4828:1;4845:53;4890:7;4881:6;4870:9;4866:22;4845:53;:::i;:::-;4835:63;;4807:97;4935:2;4953:53;4998:7;4989:6;4978:9;4974:22;4953:53;:::i;:::-;4943:63;;4914:98;4739:283;;;;;:::o;5029:485::-;;;;5164:2;5152:9;5143:7;5139:23;5135:32;5132:2;;;5180:1;5177;5170:12;5132:2;5215:1;5232:53;5277:7;5268:6;5257:9;5253:22;5232:53;:::i;:::-;5222:63;;5194:97;5322:2;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5301:98;5430:2;5448:50;5490:7;5481:6;5470:9;5466:22;5448:50;:::i;:::-;5438:60;;5409:95;5126:388;;;;;:::o;5521:611::-;;;;;5673:3;5661:9;5652:7;5648:23;5644:33;5641:2;;;5690:1;5687;5680:12;5641:2;5725:1;5742:53;5787:7;5778:6;5767:9;5763:22;5742:53;:::i;:::-;5732:63;;5704:97;5832:2;5850:53;5895:7;5886:6;5875:9;5871:22;5850:53;:::i;:::-;5840:63;;5811:98;5940:2;5958:53;6003:7;5994:6;5983:9;5979:22;5958:53;:::i;:::-;5948:63;;5919:98;6048:2;6066:50;6108:7;6099:6;6088:9;6084:22;6066:50;:::i;:::-;6056:60;;6027:95;5635:497;;;;;;;:::o;6139:142::-;6230:45;6269:5;6230:45;:::i;:::-;6225:3;6218:58;6212:69;;:::o;6288:113::-;6371:24;6389:5;6371:24;:::i;:::-;6366:3;6359:37;6353:48;;:::o;6408:94::-;6475:21;6490:5;6475:21;:::i;:::-;6470:3;6463:34;6457:45;;:::o;6509:104::-;6586:21;6601:5;6586:21;:::i;:::-;6581:3;6574:34;6568:45;;:::o;6620:356::-;;6748:38;6780:5;6748:38;:::i;:::-;6798:88;6879:6;6874:3;6798:88;:::i;:::-;6791:95;;6891:52;6936:6;6931:3;6924:4;6917:5;6913:16;6891:52;:::i;:::-;6964:6;6959:3;6955:16;6948:23;;6728:248;;;;;:::o;6983:156::-;7081:52;7127:5;7081:52;:::i;:::-;7076:3;7069:65;7063:76;;:::o;7146:166::-;7249:57;7300:5;7249:57;:::i;:::-;7244:3;7237:70;7231:81;;:::o;7319:142::-;7410:45;7449:5;7410:45;:::i;:::-;7405:3;7398:58;7392:69;;:::o;7468:347::-;;7580:39;7613:5;7580:39;:::i;:::-;7631:71;7695:6;7690:3;7631:71;:::i;:::-;7624:78;;7707:52;7752:6;7747:3;7740:4;7733:5;7729:16;7707:52;:::i;:::-;7780:29;7802:6;7780:29;:::i;:::-;7775:3;7771:39;7764:46;;7560:255;;;;;:::o;7823:372::-;;7983:67;8047:2;8042:3;7983:67;:::i;:::-;7976:74;;8083:34;8079:1;8074:3;8070:11;8063:55;8152:5;8147:2;8142:3;8138:12;8131:27;8186:2;8181:3;8177:12;8170:19;;7969:226;;;:::o;8204:379::-;;8364:67;8428:2;8423:3;8364:67;:::i;:::-;8357:74;;8464:34;8460:1;8455:3;8451:11;8444:55;8533:12;8528:2;8523:3;8519:12;8512:34;8574:2;8569:3;8565:12;8558:19;;8350:233;;;:::o;8592:379::-;;8752:67;8816:2;8811:3;8752:67;:::i;:::-;8745:74;;8852:34;8848:1;8843:3;8839:11;8832:55;8921:12;8916:2;8911:3;8907:12;8900:34;8962:2;8957:3;8953:12;8946:19;;8738:233;;;:::o;8980:375::-;;9140:67;9204:2;9199:3;9140:67;:::i;:::-;9133:74;;9240:34;9236:1;9231:3;9227:11;9220:55;9309:8;9304:2;9299:3;9295:12;9288:30;9346:2;9341:3;9337:12;9330:19;;9126:229;;;:::o;9364:327::-;;9524:67;9588:2;9583:3;9524:67;:::i;:::-;9517:74;;9624:29;9620:1;9615:3;9611:11;9604:50;9682:2;9677:3;9673:12;9666:19;;9510:181;;;:::o;9700:381::-;;9860:67;9924:2;9919:3;9860:67;:::i;:::-;9853:74;;9960:34;9956:1;9951:3;9947:11;9940:55;10029:14;10024:2;10019:3;10015:12;10008:36;10072:2;10067:3;10063:12;10056:19;;9846:235;;;:::o;10090:383::-;;10250:67;10314:2;10309:3;10250:67;:::i;:::-;10243:74;;10350:34;10346:1;10341:3;10337:11;10330:55;10419:16;10414:2;10409:3;10405:12;10398:38;10464:2;10459:3;10455:12;10448:19;;10236:237;;;:::o;10482:383::-;;10642:67;10706:2;10701:3;10642:67;:::i;:::-;10635:74;;10742:34;10738:1;10733:3;10729:11;10722:55;10811:16;10806:2;10801:3;10797:12;10790:38;10856:2;10851:3;10847:12;10840:19;;10628:237;;;:::o;10874:440::-;;11034:67;11098:2;11093:3;11034:67;:::i;:::-;11027:74;;11134:34;11130:1;11125:3;11121:11;11114:55;11203:34;11198:2;11193:3;11189:12;11182:56;11272:4;11267:2;11262:3;11258:12;11251:26;11305:2;11300:3;11296:12;11289:19;;11020:294;;;:::o;11323:370::-;;11483:67;11547:2;11542:3;11483:67;:::i;:::-;11476:74;;11583:34;11579:1;11574:3;11570:11;11563:55;11652:3;11647:2;11642:3;11638:12;11631:25;11684:2;11679:3;11675:12;11668:19;;11469:224;;;:::o;11702:322::-;;11862:67;11926:2;11921:3;11862:67;:::i;:::-;11855:74;;11962:24;11958:1;11953:3;11949:11;11942:45;12015:2;12010:3;12006:12;11999:19;;11848:176;;;:::o;12033:317::-;;12193:67;12257:2;12252:3;12193:67;:::i;:::-;12186:74;;12293:19;12289:1;12284:3;12280:11;12273:40;12341:2;12336:3;12332:12;12325:19;;12179:171;;;:::o;12359:332::-;;12519:67;12583:2;12578:3;12519:67;:::i;:::-;12512:74;;12619:34;12615:1;12610:3;12606:11;12599:55;12682:2;12677:3;12673:12;12666:19;;12505:186;;;:::o;12700:378::-;;12860:67;12924:2;12919:3;12860:67;:::i;:::-;12853:74;;12960:34;12956:1;12951:3;12947:11;12940:55;13029:11;13024:2;13019:3;13015:12;13008:33;13069:2;13064:3;13060:12;13053:19;;12846:232;;;:::o;13087:376::-;;13247:67;13311:2;13306:3;13247:67;:::i;:::-;13240:74;;13347:34;13343:1;13338:3;13334:11;13327:55;13416:9;13411:2;13406:3;13402:12;13395:31;13454:2;13449:3;13445:12;13438:19;;13233:230;;;:::o;13472:385::-;;13632:67;13696:2;13691:3;13632:67;:::i;:::-;13625:74;;13732:34;13728:1;13723:3;13719:11;13712:55;13801:18;13796:2;13791:3;13787:12;13780:40;13848:2;13843:3;13839:12;13832:19;;13618:239;;;:::o;13866:387::-;;14026:67;14090:2;14085:3;14026:67;:::i;:::-;14019:74;;14126:34;14122:1;14117:3;14113:11;14106:55;14195:20;14190:2;14185:3;14181:12;14174:42;14244:2;14239:3;14235:12;14228:19;;14012:241;;;:::o;14262:329::-;;14422:67;14486:2;14481:3;14422:67;:::i;:::-;14415:74;;14522:31;14518:1;14513:3;14509:11;14502:52;14582:2;14577:3;14573:12;14566:19;;14408:183;;;:::o;14600:374::-;;14760:67;14824:2;14819:3;14760:67;:::i;:::-;14753:74;;14860:34;14856:1;14851:3;14847:11;14840:55;14929:7;14924:2;14919:3;14915:12;14908:29;14965:2;14960:3;14956:12;14949:19;;14746:228;;;:::o;14983:331::-;;15143:67;15207:2;15202:3;15143:67;:::i;:::-;15136:74;;15243:33;15239:1;15234:3;15230:11;15223:54;15305:2;15300:3;15296:12;15289:19;;15129:185;;;:::o;15323:439::-;;15483:67;15547:2;15542:3;15483:67;:::i;:::-;15476:74;;15583:34;15579:1;15574:3;15570:11;15563:55;15652:34;15647:2;15642:3;15638:12;15631:56;15721:3;15716:2;15711:3;15707:12;15700:25;15753:2;15748:3;15744:12;15737:19;;15469:293;;;:::o;15771:391::-;;15931:67;15995:2;15990:3;15931:67;:::i;:::-;15924:74;;16031:34;16027:1;16022:3;16018:11;16011:55;16100:24;16095:2;16090:3;16086:12;16079:46;16153:2;16148:3;16144:12;16137:19;;15917:245;;;:::o;16237:978::-;16380:4;16375:3;16371:14;16474:4;16467:5;16463:16;16457:23;16486:63;16543:4;16538:3;16534:14;16520:12;16486:63;:::i;:::-;16400:155;16639:4;16632:5;16628:16;16622:23;16651:63;16708:4;16703:3;16699:14;16685:12;16651:63;:::i;:::-;16565:155;16799:4;16792:5;16788:16;16782:23;16811:63;16868:4;16863:3;16859:14;16845:12;16811:63;:::i;:::-;16730:150;16966:4;16959:5;16955:16;16949:23;16978:63;17035:4;17030:3;17026:14;17012:12;16978:63;:::i;:::-;16890:157;17125:4;17118:5;17114:16;17108:23;17137:57;17188:4;17183:3;17179:14;17165:12;17137:57;:::i;:::-;17057:143;16353:862;;;:::o;17222:103::-;17295:24;17313:5;17295:24;:::i;:::-;17290:3;17283:37;17277:48;;:::o;17332:113::-;17415:24;17433:5;17415:24;:::i;:::-;17410:3;17403:37;17397:48;;:::o;17452:271::-;;17605:93;17694:3;17685:6;17605:93;:::i;:::-;17598:100;;17715:3;17708:10;;17586:137;;;;:::o;17730:222::-;;17857:2;17846:9;17842:18;17834:26;;17871:71;17939:1;17928:9;17924:17;17915:6;17871:71;:::i;:::-;17828:124;;;;:::o;17959:238::-;;18094:2;18083:9;18079:18;18071:26;;18108:79;18184:1;18173:9;18169:17;18160:6;18108:79;:::i;:::-;18065:132;;;;:::o;18204:444::-;;18387:2;18376:9;18372:18;18364:26;;18401:71;18469:1;18458:9;18454:17;18445:6;18401:71;:::i;:::-;18483:72;18551:2;18540:9;18536:18;18527:6;18483:72;:::i;:::-;18566;18634:2;18623:9;18619:18;18610:6;18566:72;:::i;:::-;18358:290;;;;;;:::o;18655:333::-;;18810:2;18799:9;18795:18;18787:26;;18824:71;18892:1;18881:9;18877:17;18868:6;18824:71;:::i;:::-;18906:72;18974:2;18963:9;18959:18;18950:6;18906:72;:::i;:::-;18781:207;;;;;:::o;18995:210::-;;19116:2;19105:9;19101:18;19093:26;;19130:65;19192:1;19181:9;19177:17;19168:6;19130:65;:::i;:::-;19087:118;;;;:::o;19212:252::-;;19354:2;19343:9;19339:18;19331:26;;19368:86;19451:1;19440:9;19436:17;19427:6;19368:86;:::i;:::-;19325:139;;;;:::o;19471:262::-;;19618:2;19607:9;19603:18;19595:26;;19632:91;19720:1;19709:9;19705:17;19696:6;19632:91;:::i;:::-;19589:144;;;;:::o;19740:310::-;;19887:2;19876:9;19872:18;19864:26;;19937:9;19931:4;19927:20;19923:1;19912:9;19908:17;19901:47;19962:78;20035:4;20026:6;19962:78;:::i;:::-;19954:86;;19858:192;;;;:::o;20057:416::-;;20257:2;20246:9;20242:18;20234:26;;20307:9;20301:4;20297:20;20293:1;20282:9;20278:17;20271:47;20332:131;20458:4;20332:131;:::i;:::-;20324:139;;20228:245;;;:::o;20480:416::-;;20680:2;20669:9;20665:18;20657:26;;20730:9;20724:4;20720:20;20716:1;20705:9;20701:17;20694:47;20755:131;20881:4;20755:131;:::i;:::-;20747:139;;20651:245;;;:::o;20903:416::-;;21103:2;21092:9;21088:18;21080:26;;21153:9;21147:4;21143:20;21139:1;21128:9;21124:17;21117:47;21178:131;21304:4;21178:131;:::i;:::-;21170:139;;21074:245;;;:::o;21326:416::-;;21526:2;21515:9;21511:18;21503:26;;21576:9;21570:4;21566:20;21562:1;21551:9;21547:17;21540:47;21601:131;21727:4;21601:131;:::i;:::-;21593:139;;21497:245;;;:::o;21749:416::-;;21949:2;21938:9;21934:18;21926:26;;21999:9;21993:4;21989:20;21985:1;21974:9;21970:17;21963:47;22024:131;22150:4;22024:131;:::i;:::-;22016:139;;21920:245;;;:::o;22172:416::-;;22372:2;22361:9;22357:18;22349:26;;22422:9;22416:4;22412:20;22408:1;22397:9;22393:17;22386:47;22447:131;22573:4;22447:131;:::i;:::-;22439:139;;22343:245;;;:::o;22595:416::-;;22795:2;22784:9;22780:18;22772:26;;22845:9;22839:4;22835:20;22831:1;22820:9;22816:17;22809:47;22870:131;22996:4;22870:131;:::i;:::-;22862:139;;22766:245;;;:::o;23018:416::-;;23218:2;23207:9;23203:18;23195:26;;23268:9;23262:4;23258:20;23254:1;23243:9;23239:17;23232:47;23293:131;23419:4;23293:131;:::i;:::-;23285:139;;23189:245;;;:::o;23441:416::-;;23641:2;23630:9;23626:18;23618:26;;23691:9;23685:4;23681:20;23677:1;23666:9;23662:17;23655:47;23716:131;23842:4;23716:131;:::i;:::-;23708:139;;23612:245;;;:::o;23864:416::-;;24064:2;24053:9;24049:18;24041:26;;24114:9;24108:4;24104:20;24100:1;24089:9;24085:17;24078:47;24139:131;24265:4;24139:131;:::i;:::-;24131:139;;24035:245;;;:::o;24287:416::-;;24487:2;24476:9;24472:18;24464:26;;24537:9;24531:4;24527:20;24523:1;24512:9;24508:17;24501:47;24562:131;24688:4;24562:131;:::i;:::-;24554:139;;24458:245;;;:::o;24710:416::-;;24910:2;24899:9;24895:18;24887:26;;24960:9;24954:4;24950:20;24946:1;24935:9;24931:17;24924:47;24985:131;25111:4;24985:131;:::i;:::-;24977:139;;24881:245;;;:::o;25133:416::-;;25333:2;25322:9;25318:18;25310:26;;25383:9;25377:4;25373:20;25369:1;25358:9;25354:17;25347:47;25408:131;25534:4;25408:131;:::i;:::-;25400:139;;25304:245;;;:::o;25556:416::-;;25756:2;25745:9;25741:18;25733:26;;25806:9;25800:4;25796:20;25792:1;25781:9;25777:17;25770:47;25831:131;25957:4;25831:131;:::i;:::-;25823:139;;25727:245;;;:::o;25979:416::-;;26179:2;26168:9;26164:18;26156:26;;26229:9;26223:4;26219:20;26215:1;26204:9;26200:17;26193:47;26254:131;26380:4;26254:131;:::i;:::-;26246:139;;26150:245;;;:::o;26402:416::-;;26602:2;26591:9;26587:18;26579:26;;26652:9;26646:4;26642:20;26638:1;26627:9;26623:17;26616:47;26677:131;26803:4;26677:131;:::i;:::-;26669:139;;26573:245;;;:::o;26825:416::-;;27025:2;27014:9;27010:18;27002:26;;27075:9;27069:4;27065:20;27061:1;27050:9;27046:17;27039:47;27100:131;27226:4;27100:131;:::i;:::-;27092:139;;26996:245;;;:::o;27248:416::-;;27448:2;27437:9;27433:18;27425:26;;27498:9;27492:4;27488:20;27484:1;27473:9;27469:17;27462:47;27523:131;27649:4;27523:131;:::i;:::-;27515:139;;27419:245;;;:::o;27671:416::-;;27871:2;27860:9;27856:18;27848:26;;27921:9;27915:4;27911:20;27907:1;27896:9;27892:17;27885:47;27946:131;28072:4;27946:131;:::i;:::-;27938:139;;27842:245;;;:::o;28094:416::-;;28294:2;28283:9;28279:18;28271:26;;28344:9;28338:4;28334:20;28330:1;28319:9;28315:17;28308:47;28369:131;28495:4;28369:131;:::i;:::-;28361:139;;28265:245;;;:::o;28517:416::-;;28717:2;28706:9;28702:18;28694:26;;28767:9;28761:4;28757:20;28753:1;28742:9;28738:17;28731:47;28792:131;28918:4;28792:131;:::i;:::-;28784:139;;28688:245;;;:::o;28940:416::-;;29140:2;29129:9;29125:18;29117:26;;29190:9;29184:4;29180:20;29176:1;29165:9;29161:17;29154:47;29215:131;29341:4;29215:131;:::i;:::-;29207:139;;29111:245;;;:::o;29363:323::-;;29540:3;29529:9;29525:19;29517:27;;29555:121;29673:1;29662:9;29658:17;29649:6;29555:121;:::i;:::-;29511:175;;;;:::o;29693:222::-;;29820:2;29809:9;29805:18;29797:26;;29834:71;29902:1;29891:9;29887:17;29878:6;29834:71;:::i;:::-;29791:124;;;;:::o;29922:321::-;;30071:2;30060:9;30056:18;30048:26;;30085:71;30153:1;30142:9;30138:17;30129:6;30085:71;:::i;:::-;30167:66;30229:2;30218:9;30214:18;30205:6;30167:66;:::i;:::-;30042:201;;;;;:::o;30250:349::-;;30413:2;30402:9;30398:18;30390:26;;30427:71;30495:1;30484:9;30480:17;30471:6;30427:71;:::i;:::-;30509:80;30585:2;30574:9;30570:18;30561:6;30509:80;:::i;:::-;30384:215;;;;;:::o;30606:333::-;;30761:2;30750:9;30746:18;30738:26;;30775:71;30843:1;30832:9;30828:17;30819:6;30775:71;:::i;:::-;30857:72;30925:2;30914:9;30910:18;30901:6;30857:72;:::i;:::-;30732:207;;;;;:::o;30946:444::-;;31129:2;31118:9;31114:18;31106:26;;31143:71;31211:1;31200:9;31196:17;31187:6;31143:71;:::i;:::-;31225:72;31293:2;31282:9;31278:18;31269:6;31225:72;:::i;:::-;31308;31376:2;31365:9;31361:18;31352:6;31308:72;:::i;:::-;31100:290;;;;;;:::o;31397:656::-;;31630:3;31619:9;31615:19;31607:27;;31645:71;31713:1;31702:9;31698:17;31689:6;31645:71;:::i;:::-;31727:72;31795:2;31784:9;31780:18;31771:6;31727:72;:::i;:::-;31810;31878:2;31867:9;31863:18;31854:6;31810:72;:::i;:::-;31893;31961:2;31950:9;31946:18;31937:6;31893:72;:::i;:::-;31976:67;32038:3;32027:9;32023:19;32014:6;31976:67;:::i;:::-;31601:452;;;;;;;;:::o;32060:121::-;;32153:5;32147:12;32137:22;;32118:63;;;:::o;32188:122::-;;32282:5;32276:12;32266:22;;32247:63;;;:::o;32318:144::-;;32453:3;32438:18;;32431:31;;;;:::o;32471:163::-;;32586:6;32581:3;32574:19;32623:4;32618:3;32614:14;32599:29;;32567:67;;;;:::o;32642:91::-;;32704:24;32722:5;32704:24;:::i;:::-;32693:35;;32687:46;;;:::o;32740:85::-;;32813:5;32806:13;32799:21;32788:32;;32782:43;;;:::o;32832:106::-;;32909:24;32927:5;32909:24;:::i;:::-;32898:35;;32892:46;;;:::o;32945:121::-;;33018:42;33011:5;33007:54;32996:65;;32990:76;;;:::o;33073:72::-;;33135:5;33124:16;;33118:27;;;:::o;33152:129::-;;33239:37;33270:5;33239:37;:::i;:::-;33226:50;;33220:61;;;:::o;33288:151::-;;33382:52;33428:5;33382:52;:::i;:::-;33369:65;;33363:76;;;:::o;33446:123::-;;33540:24;33558:5;33540:24;:::i;:::-;33527:37;;33521:48;;;:::o;33576:161::-;;33675:57;33726:5;33675:57;:::i;:::-;33662:70;;33656:81;;;:::o;33744:128::-;;33843:24;33861:5;33843:24;:::i;:::-;33830:37;;33824:48;;;:::o;33879:116::-;;33966:24;33984:5;33966:24;:::i;:::-;33953:37;;33947:48;;;:::o;34002:121::-;;34081:37;34112:5;34081:37;:::i;:::-;34068:50;;34062:61;;;:::o;34130:108::-;;34209:24;34227:5;34209:24;:::i;:::-;34196:37;;34190:48;;;:::o;34246:268::-;34311:1;34318:101;34332:6;34329:1;34326:13;34318:101;;;34408:1;34403:3;34399:11;34393:18;34389:1;34384:3;34380:11;34373:39;34354:2;34351:1;34347:10;34342:15;;34318:101;;;34434:6;34431:1;34428:13;34425:2;;;34499:1;34490:6;34485:3;34481:16;34474:27;34425:2;34295:219;;;;:::o;34522:97::-;;34610:2;34606:7;34601:2;34594:5;34590:14;34586:28;34576:38;;34570:49;;;:::o;34627:117::-;34696:24;34714:5;34696:24;:::i;:::-;34689:5;34686:35;34676:2;;34735:1;34732;34725:12;34676:2;34670:74;:::o;34751:111::-;34817:21;34832:5;34817:21;:::i;:::-;34810:5;34807:32;34797:2;;34853:1;34850;34843:12;34797:2;34791:71;:::o;34869:147::-;34953:39;34986:5;34953:39;:::i;:::-;34946:5;34943:50;34933:2;;35007:1;35004;34997:12;34933:2;34927:89;:::o;35023:117::-;35092:24;35110:5;35092:24;:::i;:::-;35085:5;35082:35;35072:2;;35131:1;35128;35121:12;35072:2;35066:74;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "4154400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_CAKE_PRECISION()": "375",
								"BOOST_PRECISION()": "440",
								"CAKE()": "infinite",
								"CAKE_RATE_TOTAL_PRECISION()": "439",
								"MASTERCHEF_CAKE_PER_BLOCK()": "375",
								"MASTER_CHEF()": "infinite",
								"MASTER_PID()": "infinite",
								"MAX_BOOST_PRECISION()": "462",
								"add(uint256,address,bool,bool)": "infinite",
								"boostContract()": "1258",
								"burnAdmin()": "1348",
								"burnCake(bool)": "infinite",
								"cakePerBlock(bool)": "infinite",
								"cakePerBlockToBurn()": "infinite",
								"cakeRateToBurn()": "1195",
								"cakeRateToRegularFarm()": "1284",
								"cakeRateToSpecialFarm()": "1219",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getBoostMultiplier(address,uint256)": "infinite",
								"harvestFromMasterChef()": "infinite",
								"init(address)": "infinite",
								"lastBurnedBlock()": "1219",
								"lpToken(uint256)": "2511",
								"massUpdatePools()": "infinite",
								"owner()": "1267",
								"pendingCake(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "1236",
								"renounceOwnership()": "24446",
								"set(uint256,uint256,bool)": "infinite",
								"totalRegularAllocPoint()": "1196",
								"totalSpecialAllocPoint()": "1218",
								"transferOwnership(address)": "24794",
								"updateBoostContract(address)": "24438",
								"updateBoostMultiplier(address,uint256,uint256)": "infinite",
								"updateBurnAdmin(address)": "25643",
								"updateCakeRate(uint256,uint256,uint256,bool)": "infinite",
								"updatePool(uint256)": "infinite",
								"updateWhiteList(address,bool)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"whiteList(address)": "1679",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"_safeTransfer(address,uint256)": "infinite",
								"settlePendingCake(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4683,
									"end": 4695,
									"name": "PUSH",
									"source": 2,
									"value": "95E27D7580"
								},
								{
									"begin": 4651,
									"end": 4695,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 4651,
									"end": 4695,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4796,
									"end": 4807,
									"name": "PUSH",
									"source": 2,
									"value": "EA1FC81CE"
								},
								{
									"begin": 4757,
									"end": 4807,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 4757,
									"end": 4807,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4904,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "44502B18B2"
								},
								{
									"begin": 4865,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 4865,
									"end": 4916,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 860,
									"end": 877,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 880,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 880,
									"end": 890,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 880,
									"end": 890,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 880,
									"end": 892,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 880,
									"end": 892,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 880,
									"end": 892,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 880,
									"end": 892,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 880,
									"end": 892,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 860,
									"end": 892,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 860,
									"end": 892,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 908,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 908,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 902,
									"end": 920,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 902,
									"end": 920,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 902,
									"end": 920,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 902,
									"end": 920,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 968,
									"end": 977,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 935,
									"end": 978,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 964,
									"end": 965,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 935,
									"end": 978,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 935,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 935,
									"end": 978,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 935,
									"end": 978,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 935,
									"end": 978,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 826,
									"end": 985,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1628,
									"end": 1629,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1743,
									"end": 1750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1765,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1765,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1765,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1765,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6314,
									"end": 6326,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6300,
									"end": 6326,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6343,
									"end": 6348,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6348,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6371,
									"end": 6382,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6382,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 6358,
									"end": 6382,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6382,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6382,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6382,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6382,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6404,
									"end": 6414,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6401,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6392,
									"end": 6401,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6152,
									"end": 6421,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 590,
									"end": 694,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 643,
									"end": 658,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 687,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 670,
									"end": 687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 590,
									"end": 694,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5,
									"end": 139,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 95,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 74,
									"end": 96,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 74,
									"end": 96,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 128,
									"end": 133,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "17"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 310,
									"name": "tag",
									"source": -1,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 310,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 146,
									"end": 310,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 251,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 239,
									"end": 252,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 230,
									"end": 252,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 230,
									"end": 252,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 257,
									"end": 305,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "21"
								},
								{
									"begin": 299,
									"end": 304,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 257,
									"end": 305,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 257,
									"end": 305,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 257,
									"end": 305,
									"name": "tag",
									"source": -1,
									"value": "21"
								},
								{
									"begin": 257,
									"end": 305,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 224,
									"end": 310,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 224,
									"end": 310,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 224,
									"end": 310,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 224,
									"end": 310,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 224,
									"end": 310,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 317,
									"end": 491,
									"name": "tag",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 317,
									"end": 491,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 317,
									"end": 491,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 421,
									"end": 427,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 415,
									"end": 428,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 406,
									"end": 428,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 406,
									"end": 428,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 433,
									"end": 486,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "25"
								},
								{
									"begin": 480,
									"end": 485,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 433,
									"end": 486,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 433,
									"end": 486,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 433,
									"end": 486,
									"name": "tag",
									"source": -1,
									"value": "25"
								},
								{
									"begin": 433,
									"end": 486,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 400,
									"end": 491,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 400,
									"end": 491,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 400,
									"end": 491,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 400,
									"end": 491,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 400,
									"end": 491,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 498,
									"end": 632,
									"name": "tag",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 498,
									"end": 632,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 498,
									"end": 632,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 582,
									"end": 588,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 576,
									"end": 589,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 567,
									"end": 589,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 567,
									"end": 589,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "30"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "tag",
									"source": -1,
									"value": "29"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 561,
									"end": 632,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 561,
									"end": 632,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 561,
									"end": 632,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 561,
									"end": 632,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 561,
									"end": 632,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 639,
									"end": 1381,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 639,
									"end": 1381,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 639,
									"end": 1381,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 1381,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 639,
									"end": 1381,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 1381,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 840,
									"end": 843,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": 828,
									"end": 837,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 819,
									"end": 826,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 815,
									"end": 838,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 811,
									"end": 844,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 808,
									"end": 810,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 808,
									"end": 810,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 808,
									"end": 810,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 847,
									"end": 859,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 808,
									"end": 810,
									"name": "tag",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 808,
									"end": 810,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 892,
									"end": 893,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 993,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "33"
								},
								{
									"begin": 985,
									"end": 992,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 976,
									"end": 982,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 965,
									"end": 974,
									"name": "DUP9",
									"source": -1
								},
								{
									"begin": 961,
									"end": 983,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 909,
									"end": 993,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 909,
									"end": 993,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 909,
									"end": 993,
									"name": "tag",
									"source": -1,
									"value": "33"
								},
								{
									"begin": 909,
									"end": 993,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 899,
									"end": 993,
									"name": "SWAP5",
									"source": -1
								},
								{
									"begin": 899,
									"end": 993,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 871,
									"end": 999,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1030,
									"end": 1032,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 1048,
									"end": 1127,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 1119,
									"end": 1126,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 1110,
									"end": 1116,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1099,
									"end": 1108,
									"name": "DUP9",
									"source": -1
								},
								{
									"begin": 1095,
									"end": 1117,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1048,
									"end": 1127,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "19"
								},
								{
									"begin": 1048,
									"end": 1127,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1048,
									"end": 1127,
									"name": "tag",
									"source": -1,
									"value": "34"
								},
								{
									"begin": 1048,
									"end": 1127,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1038,
									"end": 1127,
									"name": "SWAP4",
									"source": -1
								},
								{
									"begin": 1038,
									"end": 1127,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1009,
									"end": 1133,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1164,
									"end": 1166,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1182,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP9",
									"source": -1
								},
								{
									"begin": 1214,
									"end": 1236,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1182,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 1182,
									"end": 1246,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1182,
									"end": 1246,
									"name": "tag",
									"source": -1,
									"value": "35"
								},
								{
									"begin": 1182,
									"end": 1246,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1246,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1246,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1143,
									"end": 1252,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1283,
									"end": 1285,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "36"
								},
								{
									"begin": 1357,
									"end": 1364,
									"name": "DUP8",
									"source": -1
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1346,
									"name": "DUP9",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1355,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "tag",
									"source": -1,
									"value": "36"
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1291,
									"end": 1365,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1291,
									"end": 1365,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1262,
									"end": 1371,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "SWAP6",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "SWAP5",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 802,
									"end": 1381,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1388,
									"end": 1479,
									"name": "tag",
									"source": -1,
									"value": "37"
								},
								{
									"begin": 1388,
									"end": 1479,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 1479,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "39"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "tag",
									"source": -1,
									"value": "39"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1439,
									"end": 1474,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1439,
									"end": 1474,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1479,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1479,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1479,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1479,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1486,
									"end": 1592,
									"name": "tag",
									"source": -1,
									"value": "41"
								},
								{
									"begin": 1486,
									"end": 1592,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1486,
									"end": 1592,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1563,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "43"
								},
								{
									"begin": 1581,
									"end": 1586,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1563,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "37"
								},
								{
									"begin": 1563,
									"end": 1587,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1563,
									"end": 1587,
									"name": "tag",
									"source": -1,
									"value": "43"
								},
								{
									"begin": 1563,
									"end": 1587,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1552,
									"end": 1587,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1552,
									"end": 1587,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1546,
									"end": 1592,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1546,
									"end": 1592,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1546,
									"end": 1592,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1546,
									"end": 1592,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1599,
									"end": 1710,
									"name": "tag",
									"source": -1,
									"value": "44"
								},
								{
									"begin": 1599,
									"end": 1710,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1599,
									"end": 1710,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1681,
									"end": 1705,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "46"
								},
								{
									"begin": 1699,
									"end": 1704,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1681,
									"end": 1705,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "37"
								},
								{
									"begin": 1681,
									"end": 1705,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1681,
									"end": 1705,
									"name": "tag",
									"source": -1,
									"value": "46"
								},
								{
									"begin": 1681,
									"end": 1705,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1705,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1705,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1664,
									"end": 1710,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1664,
									"end": 1710,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1664,
									"end": 1710,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1664,
									"end": 1710,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1717,
									"end": 1838,
									"name": "tag",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 1717,
									"end": 1838,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1717,
									"end": 1838,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1790,
									"end": 1832,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1783,
									"end": 1788,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 1779,
									"end": 1833,
									"name": "AND",
									"source": -1
								},
								{
									"begin": 1768,
									"end": 1833,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1768,
									"end": 1833,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1762,
									"end": 1838,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1762,
									"end": 1838,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1762,
									"end": 1838,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1762,
									"end": 1838,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1845,
									"end": 1917,
									"name": "tag",
									"source": -1,
									"value": "48"
								},
								{
									"begin": 1845,
									"end": 1917,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1845,
									"end": 1917,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1912,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1912,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1912,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1917,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1917,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1917,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1890,
									"end": 1917,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 1924,
									"end": 2041,
									"name": "tag",
									"source": -1,
									"value": "18"
								},
								{
									"begin": 1924,
									"end": 2041,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1993,
									"end": 2017,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "51"
								},
								{
									"begin": 2011,
									"end": 2016,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1993,
									"end": 2017,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "37"
								},
								{
									"begin": 1993,
									"end": 2017,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 1993,
									"end": 2017,
									"name": "tag",
									"source": -1,
									"value": "51"
								},
								{
									"begin": 1993,
									"end": 2017,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1986,
									"end": 1991,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 1983,
									"end": 2018,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "52"
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 2032,
									"end": 2033,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2029,
									"end": 2030,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2022,
									"end": 2034,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "tag",
									"source": -1,
									"value": "52"
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1967,
									"end": 2041,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1967,
									"end": 2041,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 2048,
									"end": 2195,
									"name": "tag",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 2048,
									"end": 2195,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "54"
								},
								{
									"begin": 2165,
									"end": 2170,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "41"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "tag",
									"source": -1,
									"value": "54"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2125,
									"end": 2130,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 2122,
									"end": 2172,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 2112,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "55"
								},
								{
									"begin": 2112,
									"end": 2114,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 2186,
									"end": 2187,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2183,
									"end": 2184,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2176,
									"end": 2188,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2112,
									"end": 2114,
									"name": "tag",
									"source": -1,
									"value": "55"
								},
								{
									"begin": 2112,
									"end": 2114,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2106,
									"end": 2195,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2106,
									"end": 2195,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 2202,
									"end": 2359,
									"name": "tag",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 2202,
									"end": 2359,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2291,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "57"
								},
								{
									"begin": 2329,
									"end": 2334,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 2291,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "44"
								},
								{
									"begin": 2291,
									"end": 2335,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2291,
									"end": 2335,
									"name": "tag",
									"source": -1,
									"value": "57"
								},
								{
									"begin": 2291,
									"end": 2335,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2284,
									"end": 2289,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 2281,
									"end": 2336,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 2271,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "58"
								},
								{
									"begin": 2271,
									"end": 2273,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 2350,
									"end": 2351,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2347,
									"end": 2348,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2340,
									"end": 2352,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2271,
									"end": 2273,
									"name": "tag",
									"source": -1,
									"value": "58"
								},
								{
									"begin": 2271,
									"end": 2273,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2265,
									"end": 2359,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2265,
									"end": 2359,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 2366,
									"end": 2483,
									"name": "tag",
									"source": -1,
									"value": "30"
								},
								{
									"begin": 2366,
									"end": 2483,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2435,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 2453,
									"end": 2458,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 2435,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "48"
								},
								{
									"begin": 2435,
									"end": 2459,
									"name": "JUMP",
									"source": -1,
									"value": "[in]"
								},
								{
									"begin": 2435,
									"end": 2459,
									"name": "tag",
									"source": -1,
									"value": "60"
								},
								{
									"begin": 2435,
									"end": 2459,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2428,
									"end": 2433,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 2460,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 2415,
									"end": 2417,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "61"
								},
								{
									"begin": 2415,
									"end": 2417,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 2474,
									"end": 2475,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2471,
									"end": 2472,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2464,
									"end": 2476,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2415,
									"end": 2417,
									"name": "tag",
									"source": -1,
									"value": "61"
								},
								{
									"begin": 2415,
									"end": 2417,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2409,
									"end": 2483,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2409,
									"end": 2483,
									"name": "JUMP",
									"source": -1,
									"value": "[out]"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "290"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "261"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "258"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 23573,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220743ace61d3a62ce2cfff9fa955388da5348138b71bdd0451ad7ab1c3f903ac0d64736f6c634300060c0033",
									".code": [
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "7398B7EA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "AC1D0609"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "DFCEDEEE"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "DFCEDEEE"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "E0F91F6C"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "E2BBB158"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "E39E1323"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "EDD8B170"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "AC1D0609"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "C40D337B"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "C507AEAA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "CC6DB2DA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "DC6363DF"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "93F1A40B"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "99D7E84A"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "9DCC1B5F"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "9DD2FCC3"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "AA47BC8E"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "7398B7EA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "777A97F8"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "78DB4C34"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "78ED5D1F"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "81BDF98C"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "39AAE5BA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "5312EA8E"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "5312EA8E"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "61621AAA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "630B5BA1"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "64482F79"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "69B02128"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "39AAE5BA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "441A3E70"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "4CA6EF28"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "4F70B15A"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "51EB05A6"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "1526FE27"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "1526FE27"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "19AB453C"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "1CE06D57"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "1E9B828B"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "372C12B1"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "33186E8"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "41A84C9"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "81E3EDA"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "BB844BC"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "1175A1DD"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 23573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22036,
											"end": 22043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22084,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22085,
											"end": 22089,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22076,
											"end": 22090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22091,
											"end": 22096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22076,
											"end": 22097,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22113,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 22076,
											"end": 22113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22076,
											"end": 22113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22055,
											"end": 22113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22055,
											"end": 22113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 22130,
											"end": 22140,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22130,
											"end": 22158,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22161,
											"end": 22171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 22130,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22123,
											"end": 22189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22123,
											"end": 22189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22123,
											"end": 22189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21958,
											"end": 22196,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6563,
											"end": 6573,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6538,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20737,
											"end": 20738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20720,
											"end": 20739,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20720,
											"end": 20739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20720,
											"end": 20725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20720,
											"end": 20739,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20720,
											"end": 20739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20720,
											"end": 20739,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20720,
											"end": 20739,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 20712,
											"end": 20788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20814,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20815,
											"end": 20819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 20806,
											"end": 20830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 20798,
											"end": 20883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 20914,
											"end": 20928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20947,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20947,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4401,
											"name": "PUSH",
											"source": 2,
											"value": "1D1A94A2000"
										},
										{
											"begin": 20951,
											"end": 20965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 20988,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 20951,
											"end": 20988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 20914,
											"end": 20988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 20893,
											"end": 21056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21067,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 21067,
											"end": 21087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 21067,
											"end": 21087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21067,
											"end": 21087,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 21067,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21090,
											"end": 21106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 21101,
											"end": 21105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21090,
											"end": 21100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 21090,
											"end": 21106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21090,
											"end": 21106,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 21090,
											"end": 21106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21067,
											"end": 21106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21067,
											"end": 21106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21116,
											"end": 21137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21148,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21149,
											"end": 21153,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21154,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21155,
											"end": 21160,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21116,
											"end": 21161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21116,
											"end": 21161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21172,
											"end": 21194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21197,
											"end": 21228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 21216,
											"end": 21221,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21223,
											"end": 21227,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21197,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 21197,
											"end": 21228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21197,
											"end": 21228,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 21197,
											"end": 21228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21172,
											"end": 21228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21172,
											"end": 21228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21238,
											"end": 21284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 21256,
											"end": 21261,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21263,
											"end": 21267,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21269,
											"end": 21283,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21238,
											"end": 21255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 21238,
											"end": 21284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21238,
											"end": 21284,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 21238,
											"end": 21284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 21370,
											"end": 21374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21370,
											"end": 21390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21370,
											"end": 21390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21370,
											"end": 21390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 21329,
											"end": 21343,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21317,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21313,
											"end": 21324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21324,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 21313,
											"end": 21328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 21313,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 21313,
											"end": 21348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 21313,
											"end": 21365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 21313,
											"end": 21369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 21313,
											"end": 21391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 21313,
											"end": 21395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 21313,
											"end": 21437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21310,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21295,
											"end": 21310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21437,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21295,
											"end": 21437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 21586,
											"end": 21600,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21574,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21581,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21570,
											"end": 21581,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21581,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 21570,
											"end": 21585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 21570,
											"end": 21601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 21570,
											"end": 21605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 21570,
											"end": 21622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 21515,
											"end": 21529,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21503,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21499,
											"end": 21510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21510,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 21499,
											"end": 21514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 21499,
											"end": 21530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 21499,
											"end": 21534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 21499,
											"end": 21551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21494,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 21472,
											"end": 21494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 21472,
											"end": 21498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 21472,
											"end": 21552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 21472,
											"end": 21556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 21472,
											"end": 21632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21451,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21469,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 21447,
											"end": 21469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21447,
											"end": 21632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21659,
											"end": 21663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21650,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21651,
											"end": 21655,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21642,
											"end": 21663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21713,
											"end": 21727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21681,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21682,
											"end": 21686,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21688,
											"end": 21693,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21673,
											"end": 21694,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21710,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 21673,
											"end": 21710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21727,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21673,
											"end": 21727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21765,
											"end": 21770,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "PUSH",
											"source": 2,
											"value": "1ABD62439B64F6C5DAB6F94D56099495BD0C094F9C21F98F4D3562A21EDB4BA"
										},
										{
											"begin": 21772,
											"end": 21776,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21778,
											"end": 21792,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 21794,
											"end": 21808,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21743,
											"end": 21809,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20548,
											"end": 21816,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7683,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7675,
											"end": 7690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7690,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7697,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19082,
											"end": 19083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19061,
											"end": 19084,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19061,
											"end": 19084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19061,
											"end": 19070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19061,
											"end": 19084,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19061,
											"end": 19084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19061,
											"end": 19084,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19061,
											"end": 19084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 19053,
											"end": 19135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19153,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19153,
											"end": 19175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19153,
											"end": 19162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19153,
											"end": 19175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19153,
											"end": 19175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19153,
											"end": 19175,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19153,
											"end": 19175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 19145,
											"end": 19245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19255,
											"end": 19272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19255,
											"end": 19284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19255,
											"end": 19284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19306,
											"end": 19315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19303,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 19294,
											"end": 19303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19357,
											"end": 19366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19346,
											"end": 19355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "D146FE330FDDDF682413850A35B28EDFCCD4C4B53CFEE802FD24950DE5BE1DBE"
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19330,
											"end": 19367,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18980,
											"end": 19374,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10569,
											"end": 10576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10619,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10611,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10635,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10666,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10678,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10715,
											"end": 10719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10715,
											"end": 10735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 10735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 10735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 10761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10764,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10764,
											"end": 10786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10764,
											"end": 10786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 10786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 10786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10836,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10813,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10836,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10801,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10907,
											"end": 10911,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10907,
											"end": 10927,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10907,
											"end": 10927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10907,
											"end": 10927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10902,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10890,
											"end": 10906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10869,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10869,
											"end": 10928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 11052,
											"end": 11056,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11066,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11052,
											"end": 11066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11066,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11094,
											"end": 11116,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 11094,
											"end": 11116,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11091,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11069,
											"end": 11091,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 11052,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 11013,
											"end": 11017,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11013,
											"end": 11028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11013,
											"end": 11028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11013,
											"end": 11028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10979,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10992,
											"end": 10996,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 10992,
											"end": 11006,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10992,
											"end": 11006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10992,
											"end": 11006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10979,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10979,
											"end": 11007,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10979,
											"end": 11007,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10979,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 10974,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10964,
											"end": 10978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10964,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10964,
											"end": 11012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10964,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10964,
											"end": 11033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10964,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 11131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10943,
											"end": 11131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 11222,
											"end": 11230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11183,
											"end": 11193,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 11183,
											"end": 11197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 11183,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 11183,
											"end": 11221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 11183,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11178,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 11163,
											"end": 11182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 11163,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11232,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10797,
											"end": 11243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11253,
											"end": 11274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 11293,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 11312,
											"end": 11317,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11323,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 11293,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 11293,
											"end": 11324,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11293,
											"end": 11324,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 11293,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 11277,
											"end": 11292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 11277,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 11277,
											"end": 11329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 11277,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11253,
											"end": 11346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 11426,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11426,
											"end": 11441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11426,
											"end": 11441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11381,
											"end": 11396,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11376,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 11363,
											"end": 11380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 11363,
											"end": 11401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 11363,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 11363,
											"end": 11425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 11363,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11356,
											"end": 11442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10496,
											"end": 11449,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3223,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7099,
											"end": 7114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7137,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 7138,
											"end": 7148,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 7117,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7099,
											"end": 7149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7099,
											"end": 7149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7178,
											"end": 7179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7174,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7179,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7179,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 7159,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7257,
											"end": 7267,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7277,
											"end": 7281,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7291,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7239,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7229,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7320,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 7329,
											"end": 7340,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7343,
											"end": 7350,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7372,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "E2BBB158"
										},
										{
											"begin": 7381,
											"end": 7391,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7503,
											"end": 7515,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7500,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 7485,
											"end": 7515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7515,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "PUSH",
											"source": 2,
											"value": "57A86F7D14CCDE89E22870AFE839E3011216827DAA9B24E18629F0A1E9D6CC14"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7536,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7037,
											"end": 7543,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4916,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12033,
											"end": 12047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12063,
											"end": 12073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 12128,
											"end": 12149,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 12128,
											"end": 12149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 12098,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12098,
											"end": 12127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 12098,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12098,
											"end": 12154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 12098,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12089,
											"end": 12181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12089,
											"end": 12181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 12251,
											"end": 12272,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 12251,
											"end": 12272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 12221,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12221,
											"end": 12250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 12221,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12221,
											"end": 12277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 12221,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12212,
											"end": 12304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 12059,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11973,
											"end": 12321,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3550,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4066,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15308,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 15308,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 15308,
											"end": 15328,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15308,
											"end": 15328,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 15308,
											"end": 15328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15331,
											"end": 15347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15342,
											"end": 15346,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15331,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 15331,
											"end": 15347,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15331,
											"end": 15347,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 15331,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15308,
											"end": 15347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15308,
											"end": 15347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15357,
											"end": 15378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15381,
											"end": 15389,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15390,
											"end": 15394,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15381,
											"end": 15395,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15396,
											"end": 15406,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15381,
											"end": 15407,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15357,
											"end": 15407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15357,
											"end": 15407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15441,
											"end": 15448,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15426,
											"end": 15430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15426,
											"end": 15437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15426,
											"end": 15437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15426,
											"end": 15437,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15426,
											"end": 15448,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15426,
											"end": 15448,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 15418,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15486,
											"end": 15504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15507,
											"end": 15543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 15526,
											"end": 15536,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15538,
											"end": 15542,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 15507,
											"end": 15543,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15507,
											"end": 15543,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 15507,
											"end": 15543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15486,
											"end": 15543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15486,
											"end": 15543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15554,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 15572,
											"end": 15582,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15584,
											"end": 15588,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15590,
											"end": 15600,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15554,
											"end": 15571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 15554,
											"end": 15601,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15554,
											"end": 15601,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 15554,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15626,
											"end": 15627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15616,
											"end": 15627,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15612,
											"end": 15753,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15612,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 15612,
											"end": 15753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 15673,
											"end": 15680,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15657,
											"end": 15668,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15668,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 15657,
											"end": 15672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 15657,
											"end": 15681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15643,
											"end": 15647,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15643,
											"end": 15654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 15654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15643,
											"end": 15681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15643,
											"end": 15681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15643,
											"end": 15681,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15643,
											"end": 15681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 15722,
											"end": 15732,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15734,
											"end": 15741,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15702,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15703,
											"end": 15707,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15695,
											"end": 15708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 15695,
											"end": 15721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 15695,
											"end": 15742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15612,
											"end": 15753,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 15612,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 15834,
											"end": 15838,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15834,
											"end": 15854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15834,
											"end": 15854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15834,
											"end": 15854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 15797,
											"end": 15807,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15785,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15792,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 15781,
											"end": 15796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 15781,
											"end": 15808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15781,
											"end": 15812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 15781,
											"end": 15829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 15781,
											"end": 15833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 15781,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15781,
											"end": 15859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 15781,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15763,
											"end": 15767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15763,
											"end": 15778,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15763,
											"end": 15778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15763,
											"end": 15901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15763,
											"end": 15901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15763,
											"end": 15901,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15763,
											"end": 15901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 16008,
											"end": 16018,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16003,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 15996,
											"end": 16007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 15996,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15996,
											"end": 16023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 15996,
											"end": 16040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15954,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15955,
											"end": 15959,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15978,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15946,
											"end": 15978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15978,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 15946,
											"end": 15982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 15946,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15920,
											"end": 15924,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 15943,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15911,
											"end": 15943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 16050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 16050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 16050,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15911,
											"end": 16050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16087,
											"end": 16091,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16075,
											"end": 16085,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "PUSH",
											"source": 2,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 16093,
											"end": 16100,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16066,
											"end": 16101,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15227,
											"end": 16108,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16260,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 16249,
											"end": 16268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16249,
											"end": 16268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16268,
											"name": "PUSH",
											"source": 2,
											"value": "E2BBB158"
										},
										{
											"begin": 16269,
											"end": 16279,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 16281,
											"end": 16282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16199,
											"end": 16290,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12803,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 12803,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 12803,
											"end": 12823,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12803,
											"end": 12823,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 12803,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12851,
											"end": 12855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12835,
											"end": 12856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12885,
											"end": 12905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12870,
											"end": 12882,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 12870,
											"end": 12905,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12940,
											"end": 12944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12940,
											"end": 12962,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12940,
											"end": 12962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12940,
											"end": 12962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 12999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13017,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13003,
											"end": 13017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13017,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13067,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 13045,
											"end": 13067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13020,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 13020,
											"end": 13042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 13003,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 13068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 13068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13087,
											"end": 13095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13087,
											"end": 13099,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13121,
											"end": 13122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13103,
											"end": 13122,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 13087,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13142,
											"end": 13160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 13180,
											"end": 13184,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13180,
											"end": 13200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13163,
											"end": 13175,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 13163,
											"end": 13179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 13163,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13142,
											"end": 13201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13142,
											"end": 13201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13219,
											"end": 13237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 13331,
											"end": 13346,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 13289,
											"end": 13293,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13289,
											"end": 13304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13289,
											"end": 13304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13289,
											"end": 13304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 13255,
											"end": 13283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13282,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13268,
											"end": 13282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13255,
											"end": 13267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 13255,
											"end": 13283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13255,
											"end": 13283,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 13255,
											"end": 13283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 13240,
											"end": 13254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 13240,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 13240,
											"end": 13288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 13240,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 13240,
											"end": 13309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 13240,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13219,
											"end": 13364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13219,
											"end": 13364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 13470,
											"end": 13478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 13431,
											"end": 13441,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 13431,
											"end": 13445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 13431,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 13431,
											"end": 13469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 13431,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13409,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13405,
											"end": 13425,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 13405,
											"end": 13429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 13405,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13402,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13382,
											"end": 13481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 13083,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13532,
											"end": 13544,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13513,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13509,
											"end": 13529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13509,
											"end": 13544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13575,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13567,
											"end": 13571,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13558,
											"end": 13579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "PUSH",
											"source": 2,
											"value": "3BE3541FC42237D611B30329040BFA4569541D156560ACDBBAE57640D20B8F46"
										},
										{
											"begin": 13615,
											"end": 13619,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13637,
											"end": 13645,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13651,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13647,
											"end": 13667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13647,
											"end": 13667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13598,
											"end": 13668,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 12866,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12753,
											"end": 13685,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16500,
											"end": 16521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16524,
											"end": 16532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16533,
											"end": 16537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16524,
											"end": 16538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16500,
											"end": 16538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16500,
											"end": 16538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16572,
											"end": 16580,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16581,
											"end": 16585,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16572,
											"end": 16586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16587,
											"end": 16597,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16572,
											"end": 16598,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16548,
											"end": 16598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16626,
											"end": 16630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16626,
											"end": 16637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16626,
											"end": 16637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16626,
											"end": 16637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16661,
											"end": 16662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16651,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16647,
											"end": 16658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16647,
											"end": 16662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16647,
											"end": 16662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16647,
											"end": 16662,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16647,
											"end": 16662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16690,
											"end": 16691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16672,
											"end": 16676,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16672,
											"end": 16687,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16672,
											"end": 16687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16672,
											"end": 16691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16672,
											"end": 16691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16672,
											"end": 16691,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16672,
											"end": 16691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16701,
											"end": 16722,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 16736,
											"end": 16772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 16755,
											"end": 16765,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 16767,
											"end": 16771,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16736,
											"end": 16754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 16736,
											"end": 16772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16736,
											"end": 16772,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 16736,
											"end": 16772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16731,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 16725,
											"end": 16735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 16725,
											"end": 16773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 16725,
											"end": 16777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 16725,
											"end": 16794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16701,
											"end": 16794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16701,
											"end": 16794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16854,
											"end": 16867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16851,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 16829,
											"end": 16851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16851,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16867,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16914,
											"end": 16915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 16897,
											"end": 16910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16874,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16892,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 16870,
											"end": 16892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16892,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 16870,
											"end": 16896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 16829,
											"end": 16915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16804,
											"end": 16808,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16804,
											"end": 16826,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 16804,
											"end": 16826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16804,
											"end": 16915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16804,
											"end": 16915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16804,
											"end": 16915,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16804,
											"end": 16915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 17032,
											"end": 17038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17000,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 17001,
											"end": 17005,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16993,
											"end": 17006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16993,
											"end": 17019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 16993,
											"end": 17019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 16993,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17084,
											"end": 17088,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17082,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "PUSH",
											"source": 2,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 17090,
											"end": 17096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17054,
											"end": 17097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16427,
											"end": 17104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3622,
											"end": 3657,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11605,
											"end": 11620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11605,
											"end": 11620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11605,
											"end": 11620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11605,
											"end": 11620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11635,
											"end": 11646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11658,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 11687,
											"end": 11707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11719,
											"end": 11722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11687,
											"end": 11723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11760,
											"end": 11761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 11756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11741,
											"end": 11756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 11756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 11761,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 11737,
											"end": 11811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11781,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 11792,
											"end": 11795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11781,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 11781,
											"end": 11796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11781,
											"end": 11796,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 11781,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11781,
											"end": 11796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11811,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 11737,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11630,
											"end": 11821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11827,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9859,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 9870,
											"end": 9874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 9859,
											"end": 9875,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9859,
											"end": 9875,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 9859,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9890,
											"end": 9901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9886,
											"end": 9945,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9886,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9886,
											"end": 9945,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 9917,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 9917,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9886,
											"end": 9945,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9886,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9968,
											"end": 9972,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9959,
											"end": 9983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 10082,
											"end": 10093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 10051,
											"end": 10059,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10060,
											"end": 10064,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10046,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 10024,
											"end": 10046,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 10024,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10024,
											"end": 10081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "tag",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 10024,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10021,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 9999,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "tag",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 10208,
											"end": 10219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 10177,
											"end": 10185,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10202,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10177,
											"end": 10202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10177,
											"end": 10202,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10172,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 10150,
											"end": 10172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10150,
											"end": 10176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "tag",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 10150,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10150,
											"end": 10207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 10150,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10125,
											"end": 10147,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 10125,
											"end": 10220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10125,
											"end": 10220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10125,
											"end": 10220,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10125,
											"end": 10220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 9955,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10268,
											"end": 10279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10248,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10240,
											"end": 10265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10279,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "PUSH",
											"source": 2,
											"value": "C0CFD54D2DE2B55F1E6E108D3EC53FF0A1ABE6055401D32C61E9433B747EF9F8"
										},
										{
											"begin": 10308,
											"end": 10319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10294,
											"end": 10320,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9616,
											"end": 10327,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4401,
											"name": "PUSH",
											"source": 2,
											"value": "1D1A94A2000"
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4401,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "435"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1793,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1822,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1829,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4121,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17305,
											"end": 17316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17301,
											"end": 17360,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17301,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 17301,
											"end": 17360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17332,
											"end": 17349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 17332,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 17332,
											"end": 17349,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17332,
											"end": 17349,
											"name": "tag",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 17332,
											"end": 17349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17301,
											"end": 17360,
											"name": "tag",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 17301,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17370,
											"end": 17388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 17408,
											"end": 17423,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 17408,
											"end": 17423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17391,
											"end": 17403,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 17391,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 17391,
											"end": 17407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "tag",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 17391,
											"end": 17424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17370,
											"end": 17424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17370,
											"end": 17424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17434,
											"end": 17459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 17477,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 17477,
											"end": 17497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17477,
											"end": 17497,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 17477,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17462,
											"end": 17472,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17462,
											"end": 17476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 17462,
											"end": 17476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 17462,
											"end": 17498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17434,
											"end": 17498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17434,
											"end": 17498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17563,
											"end": 17580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17538,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 17538,
											"end": 17581,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17538,
											"end": 17581,
											"name": "tag",
											"source": 2,
											"value": "448"
										},
										{
											"begin": 17538,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17609,
											"end": 17621,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 17591,
											"end": 17606,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 17591,
											"end": 17621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17591,
											"end": 17621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17591,
											"end": 17621,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17591,
											"end": 17621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17238,
											"end": 17628,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4953,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3312,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3061,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1138,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3423,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3955,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12457,
											"end": 12471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 12522,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 12522,
											"end": 12536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "22B1C8C1227A00000"
										},
										{
											"begin": 12492,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12492,
											"end": 12521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12492,
											"end": 12541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "tag",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 12492,
											"end": 12568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12483,
											"end": 12568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12483,
											"end": 12568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12575,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20098,
											"end": 20099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20069,
											"end": 20100,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20069,
											"end": 20100,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20100,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20069,
											"end": 20100,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20100,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20100,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20125,
											"end": 20138,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20104,
											"end": 20138,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20104,
											"end": 20138,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20104,
											"end": 20121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20104,
											"end": 20138,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20104,
											"end": 20138,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20104,
											"end": 20138,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20104,
											"end": 20138,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "tag",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 20069,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "tag",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "tag",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 20048,
											"end": 20218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20245,
											"end": 20262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20242,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 20229,
											"end": 20242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20229,
											"end": 20262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20297,
											"end": 20314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "PUSH",
											"source": 2,
											"value": "4C0C07D0B548B824A1B998EB4D11FCCF1CFBC1E47EDCDB309970BA88315EB303"
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20277,
											"end": 20315,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19963,
											"end": 20322,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4807,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19656,
											"end": 19657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19639,
											"end": 19658,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19639,
											"end": 19658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19639,
											"end": 19644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19639,
											"end": 19658,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19639,
											"end": 19658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19639,
											"end": 19658,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19639,
											"end": 19658,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "470"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "472"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "tag",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "tag",
											"source": 2,
											"value": "470"
										},
										{
											"begin": 19631,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19743,
											"end": 19751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19733,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19734,
											"end": 19739,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19782,
											"end": 19787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "PUSH",
											"source": 2,
											"value": "C551BBB22D0406DBFB8B6B7740CC521BCF44E1106029CF899C19B6A8E4C99D51"
										},
										{
											"begin": 19789,
											"end": 19797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "tag",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19798,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19547,
											"end": 19805,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3806,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 8426,
											"end": 8430,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "tag",
											"source": 2,
											"value": "479"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "tag",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "tag",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "tag",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 8399,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8437,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8399,
											"end": 8437,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "484"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "486"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "tag",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "tag",
											"source": 2,
											"value": "484"
										},
										{
											"begin": 8391,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8641,
											"end": 8645,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8629,
											"end": 8637,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "489"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "tag",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "tag",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 8621,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8700,
											"end": 8759,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8700,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 8700,
											"end": 8759,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 8731,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8731,
											"end": 8748,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8731,
											"end": 8748,
											"name": "tag",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 8731,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8700,
											"end": 8759,
											"name": "tag",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 8700,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8773,
											"end": 8783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 8851,
											"end": 8862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8824,
											"end": 8846,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 8824,
											"end": 8850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "tag",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 8824,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8821,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8799,
											"end": 8863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8863,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "494"
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "tag",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 8946,
											"end": 8957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 8919,
											"end": 8941,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 8919,
											"end": 8945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "tag",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 8919,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8894,
											"end": 8916,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 8894,
											"end": 8958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8894,
											"end": 8958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8894,
											"end": 8958,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8894,
											"end": 8958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "tag",
											"source": 2,
											"value": "494"
										},
										{
											"begin": 8769,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 8985,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8991,
											"end": 8999,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8978,
											"end": 9000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9019,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9146,
											"end": 9147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9107,
											"end": 9119,
											"name": "NUMBER",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9080,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9207,
											"end": 9208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9178,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9038,
											"end": 9219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9011,
											"end": 9229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9288,
											"end": 9296,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 9271,
											"end": 9272,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9252,
											"end": 9259,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "tag",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 9252,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "18CAA0724A26384928EFE604AE6DDC99C242548876259770FC88FCB7E719D8FA"
										},
										{
											"begin": 9275,
											"end": 9286,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9298,
											"end": 9308,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "499"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "tag",
											"source": 2,
											"value": "499"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9244,
											"end": 9309,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8238,
											"end": 9316,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4249,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18219,
											"end": 18220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18207,
											"end": 18216,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18220,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18243,
											"end": 18244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18240,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18224,
											"end": 18244,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "tag",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 18207,
											"end": 18244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18267,
											"end": 18268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18248,
											"end": 18264,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18248,
											"end": 18268,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "tag",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 18207,
											"end": 18268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "510"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "tag",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "tag",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 18186,
											"end": 18340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "511"
										},
										{
											"begin": 18407,
											"end": 18423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 18385,
											"end": 18401,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18380,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 18371,
											"end": 18384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "tag",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 18371,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 18371,
											"end": 18406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "511"
										},
										{
											"begin": 18371,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18371,
											"end": 18453,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "513"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "514"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "515"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "tag",
											"source": 2,
											"value": "514"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "tag",
											"source": 2,
											"value": "513"
										},
										{
											"begin": 18350,
											"end": 18516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18530,
											"end": 18541,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18526,
											"end": 18585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18526,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "516"
										},
										{
											"begin": 18526,
											"end": 18585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18557,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "517"
										},
										{
											"begin": 18557,
											"end": 18572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 18557,
											"end": 18574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18557,
											"end": 18574,
											"name": "tag",
											"source": 2,
											"value": "517"
										},
										{
											"begin": 18557,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18526,
											"end": 18585,
											"name": "tag",
											"source": 2,
											"value": "516"
										},
										{
											"begin": 18526,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18642,
											"end": 18657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 18651,
											"end": 18656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18642,
											"end": 18650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 18642,
											"end": 18657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18642,
											"end": 18657,
											"name": "tag",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 18642,
											"end": 18657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18685,
											"end": 18694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18668,
											"end": 18682,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18728,
											"end": 18744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18704,
											"end": 18725,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 18704,
											"end": 18744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18704,
											"end": 18744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18704,
											"end": 18744,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18704,
											"end": 18744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18778,
											"end": 18794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18775,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 18754,
											"end": 18794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18794,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "PUSH",
											"source": 2,
											"value": "AE2D2E7D1AE84564FC72227253CE0F36A007209F7FD5EC414DEA80E5AF2FB5B0"
										},
										{
											"begin": 18825,
											"end": 18834,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18836,
											"end": 18852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18854,
											"end": 18870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "tag",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18810,
											"end": 18871,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18006,
											"end": 18878,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3150,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "521"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "522"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "522"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "tag",
											"source": 4,
											"value": "521"
										},
										{
											"begin": 2252,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13925,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "524"
										},
										{
											"begin": 13925,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 13925,
											"end": 13945,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13925,
											"end": 13945,
											"name": "tag",
											"source": 2,
											"value": "524"
										},
										{
											"begin": 13925,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13948,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "525"
										},
										{
											"begin": 13959,
											"end": 13963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13948,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 13948,
											"end": 13964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13948,
											"end": 13964,
											"name": "tag",
											"source": 2,
											"value": "525"
										},
										{
											"begin": 13948,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13925,
											"end": 13964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13925,
											"end": 13964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13974,
											"end": 13995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14006,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14007,
											"end": 14011,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14013,
											"end": 14023,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13974,
											"end": 14024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13974,
											"end": 14024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14070,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 14056,
											"end": 14070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "526"
										},
										{
											"begin": 14056,
											"end": 14095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14083,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14084,
											"end": 14094,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 14074,
											"end": 14095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14056,
											"end": 14095,
											"name": "tag",
											"source": 2,
											"value": "526"
										},
										{
											"begin": 14056,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "527"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "529"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "tag",
											"source": 2,
											"value": "528"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "tag",
											"source": 2,
											"value": "527"
										},
										{
											"begin": 14035,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "530"
										},
										{
											"begin": 14238,
											"end": 14248,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14254,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 14219,
											"end": 14255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14219,
											"end": 14255,
											"name": "tag",
											"source": 2,
											"value": "530"
										},
										{
											"begin": 14219,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14198,
											"end": 14255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14284,
											"end": 14285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14270,
											"end": 14274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14270,
											"end": 14281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14281,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14270,
											"end": 14285,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14266,
											"end": 14359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14266,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "531"
										},
										{
											"begin": 14266,
											"end": 14359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14301,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "532"
										},
										{
											"begin": 14319,
											"end": 14329,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14337,
											"end": 14347,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14301,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 14301,
											"end": 14348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14301,
											"end": 14348,
											"name": "tag",
											"source": 2,
											"value": "532"
										},
										{
											"begin": 14301,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14266,
											"end": 14359,
											"name": "tag",
											"source": 2,
											"value": "531"
										},
										{
											"begin": 14266,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14383,
											"end": 14384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14373,
											"end": 14380,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14373,
											"end": 14384,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14369,
											"end": 14827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14369,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 14369,
											"end": 14827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14400,
											"end": 14414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14424,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14425,
											"end": 14429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "tag",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14417,
											"end": 14430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14417,
											"end": 14440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14440,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 14449,
											"end": 14453,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "536"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "tag",
											"source": 2,
											"value": "536"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "537"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "tag",
											"source": 2,
											"value": "537"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "539"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "tag",
											"source": 2,
											"value": "539"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "540"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "tag",
											"source": 2,
											"value": "540"
										},
										{
											"begin": 14417,
											"end": 14455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14400,
											"end": 14455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14400,
											"end": 14455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "541"
										},
										{
											"begin": 14500,
											"end": 14510,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 14527,
											"end": 14534,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14476,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14477,
											"end": 14481,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "542"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "tag",
											"source": 2,
											"value": "542"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14469,
											"end": 14482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14469,
											"end": 14499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 14469,
											"end": 14499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "tag",
											"source": 2,
											"value": "541"
										},
										{
											"begin": 14469,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "544"
										},
										{
											"begin": 14602,
											"end": 14608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14566,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14567,
											"end": 14571,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "545"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "tag",
											"source": 2,
											"value": "545"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14559,
											"end": 14572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14582,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14559,
											"end": 14582,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14582,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 14591,
											"end": 14595,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "547"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "tag",
											"source": 2,
											"value": "547"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "tag",
											"source": 2,
											"value": "548"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "550"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "tag",
											"source": 2,
											"value": "550"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "551"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "tag",
											"source": 2,
											"value": "551"
										},
										{
											"begin": 14559,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 14559,
											"end": 14601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "tag",
											"source": 2,
											"value": "544"
										},
										{
											"begin": 14559,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14609,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "552"
										},
										{
											"begin": 14653,
											"end": 14660,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14641,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14637,
											"end": 14648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14648,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 14637,
											"end": 14652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "tag",
											"source": 2,
											"value": "552"
										},
										{
											"begin": 14637,
											"end": 14661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14623,
											"end": 14634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14661,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "553"
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "554"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "555"
										},
										{
											"begin": 14783,
											"end": 14793,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14778,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 14771,
											"end": 14782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "tag",
											"source": 2,
											"value": "555"
										},
										{
											"begin": 14771,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 14771,
											"end": 14798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "tag",
											"source": 2,
											"value": "554"
										},
										{
											"begin": 14771,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14748,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14766,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14744,
											"end": 14766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 14744,
											"end": 14770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "tag",
											"source": 2,
											"value": "553"
										},
										{
											"begin": 14744,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14741,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14719,
											"end": 14741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14719,
											"end": 14816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14369,
											"end": 14827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14369,
											"end": 14827,
											"name": "tag",
											"source": 2,
											"value": "533"
										},
										{
											"begin": 14369,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "556"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "557"
										},
										{
											"begin": 14908,
											"end": 14912,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "558"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "559"
										},
										{
											"begin": 14871,
											"end": 14881,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14859,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 14866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14866,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 14855,
											"end": 14870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "tag",
											"source": 2,
											"value": "559"
										},
										{
											"begin": 14855,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 14855,
											"end": 14886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "tag",
											"source": 2,
											"value": "558"
										},
										{
											"begin": 14855,
											"end": 14903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 14855,
											"end": 14907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "tag",
											"source": 2,
											"value": "557"
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 14855,
											"end": 14933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "tag",
											"source": 2,
											"value": "556"
										},
										{
											"begin": 14855,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14852,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14837,
											"end": 14852,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14975,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14837,
											"end": 14975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15002,
											"end": 15006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14993,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14994,
											"end": 14998,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "560"
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "tag",
											"source": 2,
											"value": "560"
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 14999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14985,
											"end": 15006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15042,
											"end": 15046,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15030,
											"end": 15040,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "PUSH",
											"source": 2,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 15048,
											"end": 15055,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "tag",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15022,
											"end": 15056,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13845,
											"end": 15063,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4472,
											"end": 4528,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2889,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "564"
										},
										{
											"begin": 1275,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "564"
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "565"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "566"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "566"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "tag",
											"source": 3,
											"value": "565"
										},
										{
											"begin": 1257,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2088,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "568"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "569"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "570"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "tag",
											"source": 3,
											"value": "569"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "tag",
											"source": 3,
											"value": "568"
										},
										{
											"begin": 2058,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2175,
											"end": 2183,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2184,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2218,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "572"
										},
										{
											"begin": 22582,
											"end": 22602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 22582,
											"end": 22602,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22582,
											"end": 22602,
											"name": "tag",
											"source": 2,
											"value": "572"
										},
										{
											"begin": 22582,
											"end": 22602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22613,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22614,
											"end": 22618,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22605,
											"end": 22619,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22620,
											"end": 22625,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22605,
											"end": 22626,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22582,
											"end": 22626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22637,
											"end": 22658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "573"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "E8D4A51000"
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "574"
										},
										{
											"begin": 22677,
											"end": 22693,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22665,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22661,
											"end": 22672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 22661,
											"end": 22676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "tag",
											"source": 2,
											"value": "574"
										},
										{
											"begin": 22661,
											"end": 22694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 22661,
											"end": 22698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "tag",
											"source": 2,
											"value": "573"
										},
										{
											"begin": 22661,
											"end": 22715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22637,
											"end": 22715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22637,
											"end": 22715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22725,
											"end": 22740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "576"
										},
										{
											"begin": 22761,
											"end": 22769,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 22770,
											"end": 22774,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "577"
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "tag",
											"source": 2,
											"value": "577"
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22761,
											"end": 22791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22761,
											"end": 22791,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22756,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 22743,
											"end": 22760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "tag",
											"source": 2,
											"value": "576"
										},
										{
											"begin": 22743,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 22743,
											"end": 22796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "tag",
											"source": 2,
											"value": "575"
										},
										{
											"begin": 22743,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22725,
											"end": 22816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22725,
											"end": 22816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22826,
											"end": 22841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "579"
										},
										{
											"begin": 22856,
											"end": 22860,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22856,
											"end": 22871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22856,
											"end": 22871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22856,
											"end": 22871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 22844,
											"end": 22851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22844,
											"end": 22855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 22844,
											"end": 22855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "tag",
											"source": 2,
											"value": "579"
										},
										{
											"begin": 22844,
											"end": 22872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22826,
											"end": 22872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22826,
											"end": 22872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22911,
											"end": 22940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "580"
										},
										{
											"begin": 22925,
											"end": 22930,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 22932,
											"end": 22939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22911,
											"end": 22924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 22911,
											"end": 22940,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 22911,
											"end": 22940,
											"name": "tag",
											"source": 2,
											"value": "580"
										},
										{
											"begin": 22911,
											"end": 22940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22451,
											"end": 22947,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "581"
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "582"
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "tag",
											"source": 6,
											"value": "583"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "584"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "586"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "tag",
											"source": 6,
											"value": "585"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "tag",
											"source": 6,
											"value": "584"
										},
										{
											"begin": 2557,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "tag",
											"source": 6,
											"value": "581"
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2639,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "588"
										},
										{
											"begin": 3185,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3231,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "591"
										},
										{
											"begin": 1405,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1455,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 963,
											"end": 964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 951,
											"end": 968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 951,
											"end": 968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "596"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "595"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "594"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 643,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 670,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "599"
										},
										{
											"begin": 1103,
											"end": 1108,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1172,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1145,
											"end": 1172,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1145,
											"end": 1172,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1178,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1182,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "600"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "601"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "tag",
											"source": 5,
											"value": "600"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 1070,
											"end": 1200,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1200,
											"name": "tag",
											"source": 5,
											"value": "599"
										},
										{
											"begin": 1070,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 932,
											"end": 1207,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 687,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 799,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "604"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 874,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 874,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 874,
											"end": 897,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 899,
											"end": 901,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 903,
											"end": 908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "605"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "tag",
											"source": 5,
											"value": "605"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 799,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "604"
										},
										{
											"begin": 799,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 687,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 926,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 23081,
											"end": 23571,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 23081,
											"end": 23571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23167,
											"end": 23168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23157,
											"end": 23164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23157,
											"end": 23168,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 23153,
											"end": 23565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23153,
											"end": 23565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "607"
										},
										{
											"begin": 23153,
											"end": 23565,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23298,
											"end": 23305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23270,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 23266,
											"end": 23280,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23266,
											"end": 23280,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23280,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 23289,
											"end": 23293,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "608"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "tag",
											"source": 2,
											"value": "608"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "609"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "tag",
											"source": 2,
											"value": "609"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "611"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "tag",
											"source": 2,
											"value": "611"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "612"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "tag",
											"source": 2,
											"value": "612"
										},
										{
											"begin": 23266,
											"end": 23295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23266,
											"end": 23305,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 23262,
											"end": 23363,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23262,
											"end": 23363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "613"
										},
										{
											"begin": 23262,
											"end": 23363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23325,
											"end": 23348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "614"
										},
										{
											"begin": 23325,
											"end": 23346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 23325,
											"end": 23348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23325,
											"end": 23348,
											"name": "tag",
											"source": 2,
											"value": "614"
										},
										{
											"begin": 23325,
											"end": 23348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23262,
											"end": 23363,
											"name": "tag",
											"source": 2,
											"value": "613"
										},
										{
											"begin": 23262,
											"end": 23363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23376,
											"end": 23391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23394,
											"end": 23398,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 23394,
											"end": 23408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23394,
											"end": 23408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23408,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 23417,
											"end": 23421,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "615"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "tag",
											"source": 2,
											"value": "615"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "616"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "tag",
											"source": 2,
											"value": "616"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "618"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "tag",
											"source": 2,
											"value": "618"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "619"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "tag",
											"source": 2,
											"value": "619"
										},
										{
											"begin": 23394,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23376,
											"end": 23423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23376,
											"end": 23423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23451,
											"end": 23458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23441,
											"end": 23448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23441,
											"end": 23458,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 23437,
											"end": 23510,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23437,
											"end": 23510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "620"
										},
										{
											"begin": 23437,
											"end": 23510,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23488,
											"end": 23495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23478,
											"end": 23495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23478,
											"end": 23495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23437,
											"end": 23510,
											"name": "tag",
											"source": 2,
											"value": "620"
										},
										{
											"begin": 23437,
											"end": 23510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "621"
										},
										{
											"begin": 23541,
											"end": 23544,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23546,
											"end": 23553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23527,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 23523,
											"end": 23540,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23523,
											"end": 23540,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 23523,
											"end": 23540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "tag",
											"source": 2,
											"value": "621"
										},
										{
											"begin": 23523,
											"end": 23554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23153,
											"end": 23565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23153,
											"end": 23565,
											"name": "tag",
											"source": 2,
											"value": "607"
										},
										{
											"begin": 23153,
											"end": 23565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23081,
											"end": 23571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23081,
											"end": 23571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23081,
											"end": 23571,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "tag",
											"source": 6,
											"value": "589"
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3827,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "623"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "624"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "625"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 6,
											"value": "624"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "tag",
											"source": 6,
											"value": "623"
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3869,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "626"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "tag",
											"source": 6,
											"value": "626"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3985,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "592"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1860,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "628"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "629"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "625"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 6,
											"value": "629"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 6,
											"value": "628"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1903,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3315,
											"end": 4132,
											"name": "tag",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 3315,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3757,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "631"
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3795,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3795,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "632"
										},
										{
											"begin": 3768,
											"end": 3795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "tag",
											"source": 5,
											"value": "631"
										},
										{
											"begin": 3768,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3872,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4126,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "633"
										},
										{
											"begin": 3847,
											"end": 4126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "634"
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "tag",
											"source": 5,
											"value": "634"
										},
										{
											"begin": 4009,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "635"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "636"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "637"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "636"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "635"
										},
										{
											"begin": 3984,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 4126,
											"name": "tag",
											"source": 5,
											"value": "633"
										},
										{
											"begin": 3847,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 4132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 4132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 4132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 4132,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3707,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 3707,
											"end": 3760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3760,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 3707,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3767,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5062,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 5093,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "646"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 5074,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5205,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5242,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5246,
											"end": 5252,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5246,
											"end": 5257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5266,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5281,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "tag",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "tag",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5204,
											"end": 5282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5296,
											"end": 5303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 5292,
											"end": 5872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5872,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 5292,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5433,
											"end": 5862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5433,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 5433,
											"end": 5862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 5705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5689,
											"end": 5706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5755,
											"end": 5770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5742,
											"end": 5752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5789,
											"name": "tag",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 5644,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 5878,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "232"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"source": -1,
											"value": "659"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 135,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 63,
											"end": 92,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 63,
											"end": 92,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "661"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "662"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "661"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 142,
											"end": 266,
											"name": "tag",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 142,
											"end": 266,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 142,
											"end": 266,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 225,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 197,
											"end": 226,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 197,
											"end": 226,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "665"
										},
										{
											"begin": 255,
											"end": 260,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 231,
											"end": 261,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "666"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "tag",
											"source": -1,
											"value": "665"
										},
										{
											"begin": 231,
											"end": 261,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 191,
											"end": 266,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 191,
											"end": 266,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 191,
											"end": 266,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 191,
											"end": 266,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 191,
											"end": 266,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 273,
											"end": 401,
											"name": "tag",
											"source": -1,
											"value": "667"
										},
										{
											"begin": 273,
											"end": 401,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 273,
											"end": 401,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 348,
											"end": 361,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 339,
											"end": 361,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 339,
											"end": 361,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "669"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 366,
											"end": 396,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "666"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "tag",
											"source": -1,
											"value": "669"
										},
										{
											"begin": 366,
											"end": 396,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 333,
											"end": 401,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 333,
											"end": 401,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 333,
											"end": 401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 333,
											"end": 401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 333,
											"end": 401,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 568,
											"name": "tag",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 408,
											"end": 568,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 408,
											"end": 568,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 509,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 490,
											"end": 510,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 481,
											"end": 510,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 481,
											"end": 510,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 515,
											"end": 563,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "672"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 515,
											"end": 563,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "673"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "tag",
											"source": -1,
											"value": "672"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 475,
											"end": 568,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 475,
											"end": 568,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 475,
											"end": 568,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 475,
											"end": 568,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 475,
											"end": 568,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 575,
											"end": 705,
											"name": "tag",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 575,
											"end": 705,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 575,
											"end": 705,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 642,
											"end": 662,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 633,
											"end": 662,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 633,
											"end": 662,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "676"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "677"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": -1,
											"value": "676"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 627,
											"end": 705,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 627,
											"end": 705,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 627,
											"end": 705,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 705,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 705,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 712,
											"end": 846,
											"name": "tag",
											"source": -1,
											"value": "678"
										},
										{
											"begin": 712,
											"end": 846,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 712,
											"end": 846,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 802,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 790,
											"end": 803,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 781,
											"end": 803,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 781,
											"end": 803,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 808,
											"end": 841,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "680"
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 808,
											"end": 841,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "677"
										},
										{
											"begin": 808,
											"end": 841,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 841,
											"name": "tag",
											"source": -1,
											"value": "680"
										},
										{
											"begin": 808,
											"end": 841,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 775,
											"end": 846,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 775,
											"end": 846,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 775,
											"end": 846,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 775,
											"end": 846,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 775,
											"end": 846,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 1094,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 853,
											"end": 1094,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 853,
											"end": 1094,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 954,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 932,
											"end": 955,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 928,
											"end": 960,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "682"
										},
										{
											"begin": 925,
											"end": 927,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 971,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 963,
											"end": 975,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 925,
											"end": 927,
											"name": "tag",
											"source": -1,
											"value": "682"
										},
										{
											"begin": 925,
											"end": 927,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "683"
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1046,
											"end": 1068,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "659"
										},
										{
											"begin": 1025,
											"end": 1078,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1078,
											"name": "tag",
											"source": -1,
											"value": "683"
										},
										{
											"begin": 1025,
											"end": 1078,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1078,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1015,
											"end": 1078,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1084,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1094,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1094,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1094,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1094,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1094,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "tag",
											"source": -1,
											"value": "172"
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1461,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1205,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1222,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "685"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "tag",
											"source": -1,
											"value": "685"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "686"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1329,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1321,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "659"
										},
										{
											"begin": 1287,
											"end": 1340,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1287,
											"end": 1340,
											"name": "tag",
											"source": -1,
											"value": "686"
										},
										{
											"begin": 1287,
											"end": 1340,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1340,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1340,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1346,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "687"
										},
										{
											"begin": 1437,
											"end": 1444,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1426,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 1395,
											"end": 1445,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1445,
											"name": "tag",
											"source": -1,
											"value": "687"
										},
										{
											"begin": 1395,
											"end": 1445,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1445,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1385,
											"end": 1445,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1356,
											"end": 1451,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1461,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1834,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1568,
											"end": 1575,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1564,
											"end": 1587,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1592,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "689"
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1603,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1607,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "tag",
											"source": -1,
											"value": "689"
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "690"
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1678,
											"end": 1700,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "659"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "tag",
											"source": -1,
											"value": "690"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1716,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1747,
											"end": 1749,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "691"
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1808,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "tag",
											"source": -1,
											"value": "691"
										},
										{
											"begin": 1765,
											"end": 1818,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1818,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1818,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1726,
											"end": 1824,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1834,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 2332,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1977,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1950,
											"end": 1982,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "693"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "tag",
											"source": -1,
											"value": "693"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "659"
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "tag",
											"source": -1,
											"value": "694"
										},
										{
											"begin": 2047,
											"end": 2100,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2100,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2100,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2009,
											"end": 2106,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "695"
										},
										{
											"begin": 2200,
											"end": 2207,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "tag",
											"source": -1,
											"value": "695"
										},
										{
											"begin": 2155,
											"end": 2208,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2145,
											"end": 2208,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2145,
											"end": 2208,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2214,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2263,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "696"
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2306,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 2263,
											"end": 2316,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2316,
											"name": "tag",
											"source": -1,
											"value": "696"
										},
										{
											"begin": 2263,
											"end": 2316,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2316,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2316,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2224,
											"end": 2322,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 2332,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2574,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 2339,
											"end": 2574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2574,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2419,
											"end": 2426,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "698"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "tag",
											"source": -1,
											"value": "698"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2492,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "699"
										},
										{
											"begin": 2550,
											"end": 2557,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2548,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "tag",
											"source": -1,
											"value": "699"
										},
										{
											"begin": 2508,
											"end": 2558,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2498,
											"end": 2558,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2498,
											"end": 2558,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2564,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2574,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2574,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2574,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2574,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2574,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2581,
											"end": 2838,
											"name": "tag",
											"source": -1,
											"value": "317"
										},
										{
											"begin": 2581,
											"end": 2838,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2838,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2695,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2679,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2668,
											"end": 2691,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "701"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2707,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "tag",
											"source": -1,
											"value": "701"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "702"
										},
										{
											"begin": 2814,
											"end": 2821,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2790,
											"end": 2812,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2761,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "667"
										},
										{
											"begin": 2761,
											"end": 2822,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2822,
											"name": "tag",
											"source": -1,
											"value": "702"
										},
										{
											"begin": 2761,
											"end": 2822,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2751,
											"end": 2822,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2751,
											"end": 2822,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2723,
											"end": 2828,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2838,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2838,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2838,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2838,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2838,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 2845,
											"end": 3116,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 2845,
											"end": 3116,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 3116,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2961,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2943,
											"end": 2950,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2935,
											"end": 2967,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "704"
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 2982,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "tag",
											"source": -1,
											"value": "704"
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "705"
										},
										{
											"begin": 3092,
											"end": 3099,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3081,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3090,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 3032,
											"end": 3100,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3032,
											"end": 3100,
											"name": "tag",
											"source": -1,
											"value": "705"
										},
										{
											"begin": 3032,
											"end": 3100,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3100,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3100,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2994,
											"end": 3106,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 3116,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 3116,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 3116,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 3116,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 3116,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3123,
											"end": 3364,
											"name": "tag",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 3123,
											"end": 3364,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3123,
											"end": 3364,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3229,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3213,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3225,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3198,
											"end": 3230,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "707"
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3241,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3233,
											"end": 3245,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "tag",
											"source": -1,
											"value": "707"
										},
										{
											"begin": 3195,
											"end": 3197,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "708"
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "tag",
											"source": -1,
											"value": "708"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3257,
											"end": 3354,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3364,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3364,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3364,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3364,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3364,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3371,
											"end": 3634,
											"name": "tag",
											"source": -1,
											"value": "305"
										},
										{
											"begin": 3371,
											"end": 3634,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3371,
											"end": 3634,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3483,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3484,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "710"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 3502,
											"end": 3503,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "tag",
											"source": -1,
											"value": "710"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3537,
											"end": 3538,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "711"
										},
										{
											"begin": 3610,
											"end": 3617,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 3607,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3599,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3608,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "678"
										},
										{
											"begin": 3554,
											"end": 3618,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3618,
											"name": "tag",
											"source": -1,
											"value": "711"
										},
										{
											"begin": 3554,
											"end": 3618,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3618,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3618,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 3624,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3634,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3634,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3634,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 3641,
											"end": 4007,
											"name": "tag",
											"source": -1,
											"value": "72"
										},
										{
											"begin": 3641,
											"end": 4007,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 4007,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 4007,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3733,
											"end": 3765,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "713"
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3780,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "tag",
											"source": -1,
											"value": "713"
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "714"
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 3873,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "tag",
											"source": -1,
											"value": "714"
										},
										{
											"begin": 3830,
											"end": 3883,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3883,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3883,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3889,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "715"
										},
										{
											"begin": 3983,
											"end": 3990,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 3959,
											"end": 3981,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "659"
										},
										{
											"begin": 3938,
											"end": 3991,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 3991,
											"name": "tag",
											"source": -1,
											"value": "715"
										},
										{
											"begin": 3938,
											"end": 3991,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3991,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3991,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3899,
											"end": 3997,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 4007,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 4007,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 4007,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 4007,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 4007,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3724,
											"end": 4007,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4014,
											"end": 4649,
											"name": "tag",
											"source": -1,
											"value": "179"
										},
										{
											"begin": 4014,
											"end": 4649,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4014,
											"end": 4649,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4649,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4014,
											"end": 4649,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4649,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 4166,
											"end": 4175,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4176,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4149,
											"end": 4182,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "717"
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 4195,
											"end": 4196,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "tag",
											"source": -1,
											"value": "717"
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "718"
										},
										{
											"begin": 4292,
											"end": 4299,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4283,
											"end": 4289,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4281,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 4268,
											"end": 4290,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4247,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 4247,
											"end": 4300,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4247,
											"end": 4300,
											"name": "tag",
											"source": -1,
											"value": "718"
										},
										{
											"begin": 4247,
											"end": 4300,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4300,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4300,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4209,
											"end": 4306,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4355,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "719"
										},
										{
											"begin": 4415,
											"end": 4422,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 4391,
											"end": 4413,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "670"
										},
										{
											"begin": 4355,
											"end": 4423,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4355,
											"end": 4423,
											"name": "tag",
											"source": -1,
											"value": "719"
										},
										{
											"begin": 4355,
											"end": 4423,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4423,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4423,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4316,
											"end": 4429,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "720"
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4511,
											"end": 4517,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4518,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 4478,
											"end": 4528,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4478,
											"end": 4528,
											"name": "tag",
											"source": -1,
											"value": "720"
										},
										{
											"begin": 4478,
											"end": 4528,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4468,
											"end": 4528,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4468,
											"end": 4528,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4439,
											"end": 4534,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4565,
											"end": 4567,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "721"
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 4616,
											"end": 4622,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4605,
											"end": 4614,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4583,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 4583,
											"end": 4633,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4583,
											"end": 4633,
											"name": "tag",
											"source": -1,
											"value": "721"
										},
										{
											"begin": 4583,
											"end": 4633,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4633,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4633,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4544,
											"end": 4639,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4649,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 4656,
											"end": 5022,
											"name": "tag",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 4656,
											"end": 5022,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4656,
											"end": 5022,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 5022,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4765,
											"end": 4774,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4756,
											"end": 4763,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4780,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "723"
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4791,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4783,
											"end": 4795,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "tag",
											"source": -1,
											"value": "723"
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "724"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 4887,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 4866,
											"end": 4888,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "tag",
											"source": -1,
											"value": "724"
										},
										{
											"begin": 4845,
											"end": 4898,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4835,
											"end": 4898,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 4904,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "725"
										},
										{
											"begin": 4998,
											"end": 5005,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "tag",
											"source": -1,
											"value": "725"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 5006,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 5006,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 5012,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 5022,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 5022,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 5022,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 5022,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 5022,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 5022,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5029,
											"end": 5514,
											"name": "tag",
											"source": -1,
											"value": "126"
										},
										{
											"begin": 5029,
											"end": 5514,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5029,
											"end": 5514,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5514,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5029,
											"end": 5514,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5166,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 5139,
											"end": 5162,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "727"
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5170,
											"end": 5182,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "tag",
											"source": -1,
											"value": "727"
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5216,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "728"
										},
										{
											"begin": 5277,
											"end": 5284,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5232,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 5232,
											"end": 5285,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5232,
											"end": 5285,
											"name": "tag",
											"source": -1,
											"value": "728"
										},
										{
											"begin": 5232,
											"end": 5285,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5222,
											"end": 5285,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5222,
											"end": 5285,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5291,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "729"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": -1,
											"value": "729"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5301,
											"end": 5399,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "730"
										},
										{
											"begin": 5490,
											"end": 5497,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 5481,
											"end": 5487,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 5448,
											"end": 5498,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5498,
											"name": "tag",
											"source": -1,
											"value": "730"
										},
										{
											"begin": 5448,
											"end": 5498,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5438,
											"end": 5498,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5438,
											"end": 5498,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5504,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5514,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5514,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5514,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5514,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 5521,
											"end": 6132,
											"name": "tag",
											"source": -1,
											"value": "186"
										},
										{
											"begin": 5521,
											"end": 6132,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5521,
											"end": 6132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 6132,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5521,
											"end": 6132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 6132,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 5661,
											"end": 5670,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5648,
											"end": 5671,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5644,
											"end": 5677,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "732"
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5688,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5680,
											"end": 5692,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "tag",
											"source": -1,
											"value": "732"
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "733"
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 5763,
											"end": 5785,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "tag",
											"source": -1,
											"value": "733"
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5704,
											"end": 5801,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "734"
										},
										{
											"begin": 5895,
											"end": 5902,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5875,
											"end": 5884,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 5893,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "tag",
											"source": -1,
											"value": "734"
										},
										{
											"begin": 5850,
											"end": 5903,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 5903,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 5903,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5811,
											"end": 5909,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5958,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "735"
										},
										{
											"begin": 6003,
											"end": 6010,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 5992,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 5979,
											"end": 6001,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5958,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "674"
										},
										{
											"begin": 5958,
											"end": 6011,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 5958,
											"end": 6011,
											"name": "tag",
											"source": -1,
											"value": "735"
										},
										{
											"begin": 5958,
											"end": 6011,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5948,
											"end": 6011,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5948,
											"end": 6011,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 6017,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6050,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 6066,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "736"
										},
										{
											"begin": 6108,
											"end": 6115,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 6099,
											"end": 6105,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6097,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6066,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "663"
										},
										{
											"begin": 6066,
											"end": 6116,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6066,
											"end": 6116,
											"name": "tag",
											"source": -1,
											"value": "736"
										},
										{
											"begin": 6066,
											"end": 6116,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6056,
											"end": 6116,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6056,
											"end": 6116,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6027,
											"end": 6122,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 6132,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6139,
											"end": 6281,
											"name": "tag",
											"source": -1,
											"value": "737"
										},
										{
											"begin": 6139,
											"end": 6281,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "739"
										},
										{
											"begin": 6269,
											"end": 6274,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "740"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "tag",
											"source": -1,
											"value": "739"
										},
										{
											"begin": 6230,
											"end": 6275,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6228,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6218,
											"end": 6276,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6212,
											"end": 6281,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6212,
											"end": 6281,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6212,
											"end": 6281,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6288,
											"end": 6401,
											"name": "tag",
											"source": -1,
											"value": "741"
										},
										{
											"begin": 6288,
											"end": 6401,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6371,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "743"
										},
										{
											"begin": 6389,
											"end": 6394,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6371,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "744"
										},
										{
											"begin": 6371,
											"end": 6395,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6371,
											"end": 6395,
											"name": "tag",
											"source": -1,
											"value": "743"
										},
										{
											"begin": 6371,
											"end": 6395,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6369,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 6396,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6353,
											"end": 6401,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6408,
											"end": 6502,
											"name": "tag",
											"source": -1,
											"value": "745"
										},
										{
											"begin": 6408,
											"end": 6502,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "747"
										},
										{
											"begin": 6490,
											"end": 6495,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "748"
										},
										{
											"begin": 6475,
											"end": 6496,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6475,
											"end": 6496,
											"name": "tag",
											"source": -1,
											"value": "747"
										},
										{
											"begin": 6475,
											"end": 6496,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6470,
											"end": 6473,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6463,
											"end": 6497,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6502,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6502,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6502,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6509,
											"end": 6613,
											"name": "tag",
											"source": -1,
											"value": "749"
										},
										{
											"begin": 6509,
											"end": 6613,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "751"
										},
										{
											"begin": 6601,
											"end": 6606,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "748"
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "tag",
											"source": -1,
											"value": "751"
										},
										{
											"begin": 6586,
											"end": 6607,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6581,
											"end": 6584,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6574,
											"end": 6608,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6568,
											"end": 6613,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6568,
											"end": 6613,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6568,
											"end": 6613,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6620,
											"end": 6976,
											"name": "tag",
											"source": -1,
											"value": "752"
										},
										{
											"begin": 6620,
											"end": 6976,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6620,
											"end": 6976,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "754"
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6748,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "755"
										},
										{
											"begin": 6748,
											"end": 6786,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6786,
											"name": "tag",
											"source": -1,
											"value": "754"
										},
										{
											"begin": 6748,
											"end": 6786,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "756"
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6874,
											"end": 6877,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "757"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "tag",
											"source": -1,
											"value": "756"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6791,
											"end": 6886,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 6791,
											"end": 6886,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6891,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "758"
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6917,
											"end": 6922,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6891,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "759"
										},
										{
											"begin": 6891,
											"end": 6943,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 6891,
											"end": 6943,
											"name": "tag",
											"source": -1,
											"value": "758"
										},
										{
											"begin": 6891,
											"end": 6943,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6959,
											"end": 6962,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6971,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6971,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6976,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6976,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6976,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6976,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6976,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6976,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 6983,
											"end": 7139,
											"name": "tag",
											"source": -1,
											"value": "760"
										},
										{
											"begin": 6983,
											"end": 7139,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "762"
										},
										{
											"begin": 7127,
											"end": 7132,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "763"
										},
										{
											"begin": 7081,
											"end": 7133,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7081,
											"end": 7133,
											"name": "tag",
											"source": -1,
											"value": "762"
										},
										{
											"begin": 7081,
											"end": 7133,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7076,
											"end": 7079,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7134,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7139,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7139,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7139,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7146,
											"end": 7312,
											"name": "tag",
											"source": -1,
											"value": "764"
										},
										{
											"begin": 7146,
											"end": 7312,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "766"
										},
										{
											"begin": 7300,
											"end": 7305,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "767"
										},
										{
											"begin": 7249,
											"end": 7306,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7249,
											"end": 7306,
											"name": "tag",
											"source": -1,
											"value": "766"
										},
										{
											"begin": 7249,
											"end": 7306,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7244,
											"end": 7247,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7307,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7231,
											"end": 7312,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7231,
											"end": 7312,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7231,
											"end": 7312,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7319,
											"end": 7461,
											"name": "tag",
											"source": -1,
											"value": "768"
										},
										{
											"begin": 7319,
											"end": 7461,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "770"
										},
										{
											"begin": 7449,
											"end": 7454,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7410,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "771"
										},
										{
											"begin": 7410,
											"end": 7455,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7410,
											"end": 7455,
											"name": "tag",
											"source": -1,
											"value": "770"
										},
										{
											"begin": 7410,
											"end": 7455,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7405,
											"end": 7408,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7398,
											"end": 7456,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7392,
											"end": 7461,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7392,
											"end": 7461,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7392,
											"end": 7461,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7468,
											"end": 7815,
											"name": "tag",
											"source": -1,
											"value": "772"
										},
										{
											"begin": 7468,
											"end": 7815,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7468,
											"end": 7815,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "774"
										},
										{
											"begin": 7613,
											"end": 7618,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 7580,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "775"
										},
										{
											"begin": 7580,
											"end": 7619,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7580,
											"end": 7619,
											"name": "tag",
											"source": -1,
											"value": "774"
										},
										{
											"begin": 7580,
											"end": 7619,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7631,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "776"
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7690,
											"end": 7693,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7631,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 7631,
											"end": 7702,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7631,
											"end": 7702,
											"name": "tag",
											"source": -1,
											"value": "776"
										},
										{
											"begin": 7631,
											"end": 7702,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7624,
											"end": 7702,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 7624,
											"end": 7702,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7707,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "778"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 7733,
											"end": 7738,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7745,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7707,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "759"
										},
										{
											"begin": 7707,
											"end": 7759,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7707,
											"end": 7759,
											"name": "tag",
											"source": -1,
											"value": "778"
										},
										{
											"begin": 7707,
											"end": 7759,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7780,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "779"
										},
										{
											"begin": 7802,
											"end": 7808,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7780,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "780"
										},
										{
											"begin": 7780,
											"end": 7809,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7780,
											"end": 7809,
											"name": "tag",
											"source": -1,
											"value": "779"
										},
										{
											"begin": 7780,
											"end": 7809,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7775,
											"end": 7778,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 7771,
											"end": 7810,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 7764,
											"end": 7810,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7764,
											"end": 7810,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7815,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7815,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7815,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7815,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7815,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7815,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7823,
											"end": 8195,
											"name": "tag",
											"source": -1,
											"value": "781"
										},
										{
											"begin": 7823,
											"end": 8195,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7823,
											"end": 8195,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "783"
										},
										{
											"begin": 8047,
											"end": 8049,
											"name": "PUSH",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8042,
											"end": 8045,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 7983,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 7983,
											"end": 8050,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8050,
											"name": "tag",
											"source": -1,
											"value": "783"
										},
										{
											"begin": 7983,
											"end": 8050,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7976,
											"end": 8050,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7976,
											"end": 8050,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8083,
											"end": 8117,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A2042616C616E6365206D757374206578636565"
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8077,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8081,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8063,
											"end": 8118,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8152,
											"end": 8157,
											"name": "PUSH",
											"source": -1,
											"value": "6420300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8147,
											"end": 8149,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8142,
											"end": 8145,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8138,
											"end": 8150,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8186,
											"end": 8188,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 8184,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8177,
											"end": 8189,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8170,
											"end": 8189,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8170,
											"end": 8189,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 8195,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 8195,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 8195,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7969,
											"end": 8195,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 8204,
											"end": 8583,
											"name": "tag",
											"source": -1,
											"value": "784"
										},
										{
											"begin": 8204,
											"end": 8583,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8204,
											"end": 8583,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "786"
										},
										{
											"begin": 8428,
											"end": 8430,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": 8423,
											"end": 8426,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8364,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 8364,
											"end": 8431,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 8364,
											"end": 8431,
											"name": "tag",
											"source": -1,
											"value": "786"
										},
										{
											"begin": 8364,
											"end": 8431,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8357,
											"end": 8431,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8357,
											"end": 8431,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8464,
											"end": 8498,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A20496E76616C6964206E657720626F6F737420"
										},
										{
											"begin": 8460,
											"end": 8461,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8455,
											"end": 8458,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8451,
											"end": 8462,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8444,
											"end": 8499,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8545,
											"name": "PUSH",
											"source": -1,
											"value": "6D756C7469706C69657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 8528,
											"end": 8530,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8519,
											"end": 8531,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8512,
											"end": 8546,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8574,
											"end": 8576,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 8569,
											"end": 8572,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8565,
											"end": 8577,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8577,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 8577,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8350,
											"end": 8583,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8350,
											"end": 8583,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8350,
											"end": 8583,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8350,
											"end": 8583,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 8592,
											"end": 8971,
											"name": "tag",
											"source": -1,
											"value": "787"
										},
										{
											"begin": 8592,
											"end": 8971,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8592,
											"end": 8971,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "789"
										},
										{
											"begin": 8816,
											"end": 8818,
											"name": "PUSH",
											"source": -1,
											"value": "2A"
										},
										{
											"begin": 8811,
											"end": 8814,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "tag",
											"source": -1,
											"value": "789"
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8745,
											"end": 8819,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8745,
											"end": 8819,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8852,
											"end": 8886,
											"name": "PUSH",
											"source": -1,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8846,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8839,
											"end": 8850,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8832,
											"end": 8887,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8921,
											"end": 8933,
											"name": "PUSH",
											"source": -1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8916,
											"end": 8918,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8911,
											"end": 8914,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 8907,
											"end": 8919,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8900,
											"end": 8934,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8962,
											"end": 8964,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 8957,
											"end": 8960,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 8953,
											"end": 8965,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 8965,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 8965,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8971,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8971,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8971,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8971,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 8980,
											"end": 9355,
											"name": "tag",
											"source": -1,
											"value": "790"
										},
										{
											"begin": 8980,
											"end": 9355,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8980,
											"end": 9355,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "792"
										},
										{
											"begin": 9204,
											"end": 9206,
											"name": "PUSH",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 9199,
											"end": 9202,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9140,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 9140,
											"end": 9207,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 9140,
											"end": 9207,
											"name": "tag",
											"source": -1,
											"value": "792"
										},
										{
											"begin": 9140,
											"end": 9207,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9133,
											"end": 9207,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9133,
											"end": 9207,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9236,
											"end": 9237,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9234,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9227,
											"end": 9238,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9220,
											"end": 9275,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9309,
											"end": 9317,
											"name": "PUSH",
											"source": -1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9304,
											"end": 9306,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9299,
											"end": 9302,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9295,
											"end": 9307,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9288,
											"end": 9318,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9348,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 9341,
											"end": 9344,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9337,
											"end": 9349,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9330,
											"end": 9349,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9330,
											"end": 9349,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9126,
											"end": 9355,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9126,
											"end": 9355,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9126,
											"end": 9355,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9126,
											"end": 9355,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9364,
											"end": 9691,
											"name": "tag",
											"source": -1,
											"value": "793"
										},
										{
											"begin": 9364,
											"end": 9691,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9364,
											"end": 9691,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "795"
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": 9583,
											"end": 9586,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "tag",
											"source": -1,
											"value": "795"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9517,
											"end": 9591,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9517,
											"end": 9591,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9624,
											"end": 9653,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 9620,
											"end": 9621,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9618,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9611,
											"end": 9622,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9604,
											"end": 9654,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9682,
											"end": 9684,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 9677,
											"end": 9680,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 9673,
											"end": 9685,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9510,
											"end": 9691,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9510,
											"end": 9691,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9510,
											"end": 9691,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9510,
											"end": 9691,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 9700,
											"end": 10081,
											"name": "tag",
											"source": -1,
											"value": "796"
										},
										{
											"begin": 9700,
											"end": 10081,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9700,
											"end": 10081,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "798"
										},
										{
											"begin": 9924,
											"end": 9926,
											"name": "PUSH",
											"source": -1,
											"value": "2C"
										},
										{
											"begin": 9919,
											"end": 9922,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9860,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 9860,
											"end": 9927,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 9860,
											"end": 9927,
											"name": "tag",
											"source": -1,
											"value": "798"
										},
										{
											"begin": 9860,
											"end": 9927,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9853,
											"end": 9927,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9853,
											"end": 9927,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9960,
											"end": 9994,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A2054686520757365722061646472657373206D"
										},
										{
											"begin": 9956,
											"end": 9957,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9954,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 9947,
											"end": 9958,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 9940,
											"end": 9995,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10029,
											"end": 10043,
											"name": "PUSH",
											"source": -1,
											"value": "7573742062652076616C69640000000000000000000000000000000000000000"
										},
										{
											"begin": 10024,
											"end": 10026,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10019,
											"end": 10022,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10015,
											"end": 10027,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10008,
											"end": 10044,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10072,
											"end": 10074,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10067,
											"end": 10070,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10063,
											"end": 10075,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10056,
											"end": 10075,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10056,
											"end": 10075,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 10081,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 10081,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 10081,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 10081,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10090,
											"end": 10473,
											"name": "tag",
											"source": -1,
											"value": "799"
										},
										{
											"begin": 10090,
											"end": 10473,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10090,
											"end": 10473,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "801"
										},
										{
											"begin": 10314,
											"end": 10316,
											"name": "PUSH",
											"source": -1,
											"value": "2E"
										},
										{
											"begin": 10309,
											"end": 10312,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "tag",
											"source": -1,
											"value": "801"
										},
										{
											"begin": 10250,
											"end": 10317,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10243,
											"end": 10317,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10243,
											"end": 10317,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10350,
											"end": 10384,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A204275726E2061646D696E2061646472657373"
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10341,
											"end": 10344,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10337,
											"end": 10348,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10330,
											"end": 10385,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10419,
											"end": 10435,
											"name": "PUSH",
											"source": -1,
											"value": "206D7573742062652076616C6964000000000000000000000000000000000000"
										},
										{
											"begin": 10414,
											"end": 10416,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10409,
											"end": 10412,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10405,
											"end": 10417,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10398,
											"end": 10436,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10464,
											"end": 10466,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10459,
											"end": 10462,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10448,
											"end": 10467,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10448,
											"end": 10467,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10236,
											"end": 10473,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10236,
											"end": 10473,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10236,
											"end": 10473,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10236,
											"end": 10473,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10482,
											"end": 10865,
											"name": "tag",
											"source": -1,
											"value": "802"
										},
										{
											"begin": 10482,
											"end": 10865,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10482,
											"end": 10865,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "804"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": -1,
											"value": "2E"
										},
										{
											"begin": 10701,
											"end": 10704,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "tag",
											"source": -1,
											"value": "804"
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10709,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10709,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10742,
											"end": 10776,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A2043616B652072617465206D75737420626520"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10733,
											"end": 10736,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10729,
											"end": 10740,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10722,
											"end": 10777,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10811,
											"end": 10827,
											"name": "PUSH",
											"source": -1,
											"value": "67726561746572207468616E2030000000000000000000000000000000000000"
										},
										{
											"begin": 10806,
											"end": 10808,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10801,
											"end": 10804,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 10797,
											"end": 10809,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10790,
											"end": 10828,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10856,
											"end": 10858,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10851,
											"end": 10854,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 10847,
											"end": 10859,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 10840,
											"end": 10859,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10840,
											"end": 10859,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10865,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10865,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10865,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10865,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 10874,
											"end": 11314,
											"name": "tag",
											"source": -1,
											"value": "805"
										},
										{
											"begin": 10874,
											"end": 11314,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 11314,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "807"
										},
										{
											"begin": 11098,
											"end": 11100,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 11093,
											"end": 11096,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11034,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 11034,
											"end": 11101,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 11034,
											"end": 11101,
											"name": "tag",
											"source": -1,
											"value": "807"
										},
										{
											"begin": 11034,
											"end": 11101,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11027,
											"end": 11101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11027,
											"end": 11101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11134,
											"end": 11168,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A205468652061646472657373206973206E6F74"
										},
										{
											"begin": 11130,
											"end": 11131,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11128,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11121,
											"end": 11132,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11114,
											"end": 11169,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11203,
											"end": 11237,
											"name": "PUSH",
											"source": -1,
											"value": "20617661696C61626C6520746F206465706F73697420696E207468697320706F"
										},
										{
											"begin": 11198,
											"end": 11200,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11193,
											"end": 11196,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11189,
											"end": 11201,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11182,
											"end": 11238,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11272,
											"end": 11276,
											"name": "PUSH",
											"source": -1,
											"value": "6F6C000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11267,
											"end": 11269,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11262,
											"end": 11265,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11258,
											"end": 11270,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11277,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11305,
											"end": 11307,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 11300,
											"end": 11303,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11296,
											"end": 11308,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11289,
											"end": 11308,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11289,
											"end": 11308,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11314,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11314,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11314,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11314,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 11323,
											"end": 11693,
											"name": "tag",
											"source": -1,
											"value": "808"
										},
										{
											"begin": 11323,
											"end": 11693,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11323,
											"end": 11693,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11483,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "810"
										},
										{
											"begin": 11547,
											"end": 11549,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 11542,
											"end": 11545,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11483,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 11483,
											"end": 11550,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 11483,
											"end": 11550,
											"name": "tag",
											"source": -1,
											"value": "810"
										},
										{
											"begin": 11483,
											"end": 11550,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11476,
											"end": 11550,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11476,
											"end": 11550,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11583,
											"end": 11617,
											"name": "PUSH",
											"source": -1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 11579,
											"end": 11580,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11577,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11570,
											"end": 11581,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11563,
											"end": 11618,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11652,
											"end": 11655,
											"name": "PUSH",
											"source": -1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11638,
											"end": 11650,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11631,
											"end": 11656,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11684,
											"end": 11686,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 11675,
											"end": 11687,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11668,
											"end": 11687,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11668,
											"end": 11687,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11469,
											"end": 11693,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11469,
											"end": 11693,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11469,
											"end": 11693,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11469,
											"end": 11693,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 11702,
											"end": 12024,
											"name": "tag",
											"source": -1,
											"value": "811"
										},
										{
											"begin": 11702,
											"end": 12024,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11702,
											"end": 12024,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "813"
										},
										{
											"begin": 11926,
											"end": 11928,
											"name": "PUSH",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 11921,
											"end": 11924,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "tag",
											"source": -1,
											"value": "813"
										},
										{
											"begin": 11862,
											"end": 11929,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 11929,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 11929,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11962,
											"end": 11986,
											"name": "PUSH",
											"source": -1,
											"value": "77697468647261773A20496E73756666696369656E7400000000000000000000"
										},
										{
											"begin": 11958,
											"end": 11959,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11953,
											"end": 11956,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 11949,
											"end": 11960,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11942,
											"end": 11987,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12015,
											"end": 12017,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12010,
											"end": 12013,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12006,
											"end": 12018,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11999,
											"end": 12018,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11999,
											"end": 12018,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11848,
											"end": 12024,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 11848,
											"end": 12024,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11848,
											"end": 12024,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11848,
											"end": 12024,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12033,
											"end": 12350,
											"name": "tag",
											"source": -1,
											"value": "814"
										},
										{
											"begin": 12033,
											"end": 12350,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12033,
											"end": 12350,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "816"
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 12252,
											"end": 12255,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "tag",
											"source": -1,
											"value": "816"
										},
										{
											"begin": 12193,
											"end": 12260,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12186,
											"end": 12260,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12186,
											"end": 12260,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12293,
											"end": 12312,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F6E6520424550323020746F6B656E73000000000000000000000000000000"
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12284,
											"end": 12287,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 12280,
											"end": 12291,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12273,
											"end": 12313,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12341,
											"end": 12343,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12336,
											"end": 12339,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12332,
											"end": 12344,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12325,
											"end": 12344,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12325,
											"end": 12344,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12350,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12350,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12350,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12350,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12359,
											"end": 12691,
											"name": "tag",
											"source": -1,
											"value": "817"
										},
										{
											"begin": 12359,
											"end": 12691,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12359,
											"end": 12691,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "819"
										},
										{
											"begin": 12583,
											"end": 12585,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12578,
											"end": 12581,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "tag",
											"source": -1,
											"value": "819"
										},
										{
											"begin": 12519,
											"end": 12586,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12512,
											"end": 12586,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12512,
											"end": 12586,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12619,
											"end": 12653,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12610,
											"end": 12613,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 12606,
											"end": 12617,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12599,
											"end": 12654,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12682,
											"end": 12684,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12666,
											"end": 12685,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12666,
											"end": 12685,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12691,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12691,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12691,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12691,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 12700,
											"end": 13078,
											"name": "tag",
											"source": -1,
											"value": "820"
										},
										{
											"begin": 12700,
											"end": 13078,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12700,
											"end": 13078,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "822"
										},
										{
											"begin": 12924,
											"end": 12926,
											"name": "PUSH",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 12919,
											"end": 12922,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 12860,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 12860,
											"end": 12927,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 12860,
											"end": 12927,
											"name": "tag",
											"source": -1,
											"value": "822"
										},
										{
											"begin": 12860,
											"end": 12927,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12927,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12927,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12960,
											"end": 12994,
											"name": "PUSH",
											"source": -1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F742074686520626F6F7374"
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12951,
											"end": 12954,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 12947,
											"end": 12958,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 12940,
											"end": 12995,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13029,
											"end": 13040,
											"name": "PUSH",
											"source": -1,
											"value": "20636F6E74726163740000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13024,
											"end": 13026,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13019,
											"end": 13022,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13015,
											"end": 13027,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13008,
											"end": 13041,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13069,
											"end": 13071,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 13064,
											"end": 13067,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13060,
											"end": 13072,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13072,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13072,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12846,
											"end": 13078,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 12846,
											"end": 13078,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12846,
											"end": 13078,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12846,
											"end": 13078,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13087,
											"end": 13463,
											"name": "tag",
											"source": -1,
											"value": "823"
										},
										{
											"begin": 13087,
											"end": 13463,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13087,
											"end": 13463,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13247,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "825"
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "PUSH",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13247,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 13247,
											"end": 13314,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 13247,
											"end": 13314,
											"name": "tag",
											"source": -1,
											"value": "825"
										},
										{
											"begin": 13247,
											"end": 13314,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13240,
											"end": 13314,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 13240,
											"end": 13314,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13347,
											"end": 13381,
											"name": "PUSH",
											"source": -1,
											"value": "43414B4520746F6B656E2063616E277420626520616464656420746F20666172"
										},
										{
											"begin": 13343,
											"end": 13344,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13334,
											"end": 13345,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13327,
											"end": 13382,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13416,
											"end": 13425,
											"name": "PUSH",
											"source": -1,
											"value": "6D20706F6F6C7300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13411,
											"end": 13413,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13406,
											"end": 13409,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13402,
											"end": 13414,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13395,
											"end": 13426,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13454,
											"end": 13456,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 13449,
											"end": 13452,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13445,
											"end": 13457,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13438,
											"end": 13457,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13438,
											"end": 13457,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13463,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13463,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13463,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13463,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13472,
											"end": 13857,
											"name": "tag",
											"source": -1,
											"value": "826"
										},
										{
											"begin": 13472,
											"end": 13857,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13472,
											"end": 13857,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "828"
										},
										{
											"begin": 13696,
											"end": 13698,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 13691,
											"end": 13694,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13632,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 13632,
											"end": 13699,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 13632,
											"end": 13699,
											"name": "tag",
											"source": -1,
											"value": "828"
										},
										{
											"begin": 13632,
											"end": 13699,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13625,
											"end": 13699,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 13625,
											"end": 13699,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13732,
											"end": 13766,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A204F6E6C7920726567756C6172206661726D20"
										},
										{
											"begin": 13728,
											"end": 13729,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13726,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13719,
											"end": 13730,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13712,
											"end": 13767,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13801,
											"end": 13819,
											"name": "PUSH",
											"source": -1,
											"value": "636F756C6420626520626F6F7374656400000000000000000000000000000000"
										},
										{
											"begin": 13796,
											"end": 13798,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 13787,
											"end": 13799,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13780,
											"end": 13820,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 13843,
											"end": 13846,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 13839,
											"end": 13851,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 13832,
											"end": 13851,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13832,
											"end": 13851,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13618,
											"end": 13857,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 13618,
											"end": 13857,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13618,
											"end": 13857,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13618,
											"end": 13857,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 13866,
											"end": 14253,
											"name": "tag",
											"source": -1,
											"value": "829"
										},
										{
											"begin": 13866,
											"end": 14253,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13866,
											"end": 14253,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14026,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "831"
										},
										{
											"begin": 14090,
											"end": 14092,
											"name": "PUSH",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 14085,
											"end": 14088,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14026,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 14026,
											"end": 14093,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14026,
											"end": 14093,
											"name": "tag",
											"source": -1,
											"value": "831"
										},
										{
											"begin": 14026,
											"end": 14093,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14019,
											"end": 14093,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14019,
											"end": 14093,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14126,
											"end": 14160,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A20546865207768697465206C69737420616464"
										},
										{
											"begin": 14122,
											"end": 14123,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14117,
											"end": 14120,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14113,
											"end": 14124,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14106,
											"end": 14161,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14195,
											"end": 14215,
											"name": "PUSH",
											"source": -1,
											"value": "72657373206D7573742062652076616C69640000000000000000000000000000"
										},
										{
											"begin": 14190,
											"end": 14192,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14185,
											"end": 14188,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14181,
											"end": 14193,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14174,
											"end": 14216,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14244,
											"end": 14246,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 14239,
											"end": 14242,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14235,
											"end": 14247,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14012,
											"end": 14253,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14012,
											"end": 14253,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14012,
											"end": 14253,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14012,
											"end": 14253,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14262,
											"end": 14591,
											"name": "tag",
											"source": -1,
											"value": "832"
										},
										{
											"begin": 14262,
											"end": 14591,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14262,
											"end": 14591,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14489,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "834"
										},
										{
											"begin": 14486,
											"end": 14488,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": 14481,
											"end": 14484,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14422,
											"end": 14489,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 14422,
											"end": 14489,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14422,
											"end": 14489,
											"name": "tag",
											"source": -1,
											"value": "834"
										},
										{
											"begin": 14422,
											"end": 14489,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14415,
											"end": 14489,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14415,
											"end": 14489,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14522,
											"end": 14553,
											"name": "PUSH",
											"source": -1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14518,
											"end": 14519,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14513,
											"end": 14516,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14509,
											"end": 14520,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14502,
											"end": 14554,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14582,
											"end": 14584,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14577,
											"end": 14580,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14573,
											"end": 14585,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14566,
											"end": 14585,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14566,
											"end": 14585,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14408,
											"end": 14591,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14408,
											"end": 14591,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14408,
											"end": 14591,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14408,
											"end": 14591,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14600,
											"end": 14974,
											"name": "tag",
											"source": -1,
											"value": "835"
										},
										{
											"begin": 14600,
											"end": 14974,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14600,
											"end": 14974,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "837"
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "PUSH",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 14819,
											"end": 14822,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "tag",
											"source": -1,
											"value": "837"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14753,
											"end": 14827,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14753,
											"end": 14827,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14860,
											"end": 14894,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A20546F74616C2072617465206D757374206265"
										},
										{
											"begin": 14856,
											"end": 14857,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14854,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14847,
											"end": 14858,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 14895,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14929,
											"end": 14936,
											"name": "PUSH",
											"source": -1,
											"value": "2031653132000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14924,
											"end": 14926,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 14919,
											"end": 14922,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 14915,
											"end": 14927,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14908,
											"end": 14937,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14965,
											"end": 14967,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 14960,
											"end": 14963,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14956,
											"end": 14968,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 14949,
											"end": 14968,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14949,
											"end": 14968,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14746,
											"end": 14974,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 14746,
											"end": 14974,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 14746,
											"end": 14974,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14746,
											"end": 14974,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14983,
											"end": 15314,
											"name": "tag",
											"source": -1,
											"value": "838"
										},
										{
											"begin": 14983,
											"end": 15314,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14983,
											"end": 15314,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15143,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "840"
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 15202,
											"end": 15205,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15143,
											"end": 15210,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 15143,
											"end": 15210,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 15143,
											"end": 15210,
											"name": "tag",
											"source": -1,
											"value": "840"
										},
										{
											"begin": 15143,
											"end": 15210,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15136,
											"end": 15210,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15136,
											"end": 15210,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15243,
											"end": 15276,
											"name": "PUSH",
											"source": -1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15239,
											"end": 15240,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15234,
											"end": 15237,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15230,
											"end": 15241,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15223,
											"end": 15277,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15305,
											"end": 15307,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15300,
											"end": 15303,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15296,
											"end": 15308,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15289,
											"end": 15308,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15289,
											"end": 15308,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15129,
											"end": 15314,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15129,
											"end": 15314,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15129,
											"end": 15314,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15129,
											"end": 15314,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 15323,
											"end": 15762,
											"name": "tag",
											"source": -1,
											"value": "841"
										},
										{
											"begin": 15323,
											"end": 15762,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15323,
											"end": 15762,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15483,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "843"
										},
										{
											"begin": 15547,
											"end": 15549,
											"name": "PUSH",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 15542,
											"end": 15545,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15483,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 15483,
											"end": 15550,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 15483,
											"end": 15550,
											"name": "tag",
											"source": -1,
											"value": "843"
										},
										{
											"begin": 15483,
											"end": 15550,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15476,
											"end": 15550,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15476,
											"end": 15550,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15583,
											"end": 15617,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A204275726E2061646D696E2061646472657373"
										},
										{
											"begin": 15579,
											"end": 15580,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15574,
											"end": 15577,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15570,
											"end": 15581,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15563,
											"end": 15618,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15652,
											"end": 15686,
											"name": "PUSH",
											"source": -1,
											"value": "206973207468652073616D6520776974682063757272656E7420616464726573"
										},
										{
											"begin": 15647,
											"end": 15649,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 15642,
											"end": 15645,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15650,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15631,
											"end": 15687,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15721,
											"end": 15724,
											"name": "PUSH",
											"source": -1,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 15711,
											"end": 15714,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15707,
											"end": 15719,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15700,
											"end": 15725,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15753,
											"end": 15755,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 15748,
											"end": 15751,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 15744,
											"end": 15756,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15469,
											"end": 15762,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15469,
											"end": 15762,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15469,
											"end": 15762,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15469,
											"end": 15762,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 15771,
											"end": 16162,
											"name": "tag",
											"source": -1,
											"value": "844"
										},
										{
											"begin": 15771,
											"end": 16162,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15771,
											"end": 16162,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15998,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "846"
										},
										{
											"begin": 15995,
											"end": 15997,
											"name": "PUSH",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 15990,
											"end": 15993,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 15931,
											"end": 15998,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 15931,
											"end": 15998,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 15931,
											"end": 15998,
											"name": "tag",
											"source": -1,
											"value": "846"
										},
										{
											"begin": 15931,
											"end": 15998,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15924,
											"end": 15998,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15924,
											"end": 15998,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16031,
											"end": 16065,
											"name": "PUSH",
											"source": -1,
											"value": "4D61737465724368656656323A204E657720626F6F737420636F6E7472616374"
										},
										{
											"begin": 16027,
											"end": 16028,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16022,
											"end": 16025,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16018,
											"end": 16029,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16011,
											"end": 16066,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16100,
											"end": 16124,
											"name": "PUSH",
											"source": -1,
											"value": "2061646472657373206D7573742062652076616C696400000000000000000000"
										},
										{
											"begin": 16095,
											"end": 16097,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16090,
											"end": 16093,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16098,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16079,
											"end": 16125,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16155,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 16148,
											"end": 16151,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16144,
											"end": 16156,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16137,
											"end": 16156,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16137,
											"end": 16156,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15917,
											"end": 16162,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 15917,
											"end": 16162,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15917,
											"end": 16162,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15917,
											"end": 16162,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 16237,
											"end": 17215,
											"name": "tag",
											"source": -1,
											"value": "847"
										},
										{
											"begin": 16237,
											"end": 17215,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16380,
											"end": 16384,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 16375,
											"end": 16378,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16371,
											"end": 16385,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16474,
											"end": 16478,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16467,
											"end": 16472,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16463,
											"end": 16479,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16457,
											"end": 16480,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "849"
										},
										{
											"begin": 16543,
											"end": 16547,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16520,
											"end": 16532,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "850"
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "tag",
											"source": -1,
											"value": "849"
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16400,
											"end": 16555,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16639,
											"end": 16643,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16632,
											"end": 16637,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16628,
											"end": 16644,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16622,
											"end": 16645,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16651,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "851"
										},
										{
											"begin": 16708,
											"end": 16712,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 16703,
											"end": 16706,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 16699,
											"end": 16713,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16685,
											"end": 16697,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16651,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "850"
										},
										{
											"begin": 16651,
											"end": 16714,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 16651,
											"end": 16714,
											"name": "tag",
											"source": -1,
											"value": "851"
										},
										{
											"begin": 16651,
											"end": 16714,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16565,
											"end": 16720,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16799,
											"end": 16803,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 16792,
											"end": 16797,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16788,
											"end": 16804,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16782,
											"end": 16805,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16811,
											"end": 16874,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "852"
										},
										{
											"begin": 16868,
											"end": 16872,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 16863,
											"end": 16866,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 16859,
											"end": 16873,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16845,
											"end": 16857,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16811,
											"end": 16874,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "850"
										},
										{
											"begin": 16811,
											"end": 16874,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 16811,
											"end": 16874,
											"name": "tag",
											"source": -1,
											"value": "852"
										},
										{
											"begin": 16811,
											"end": 16874,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16730,
											"end": 16880,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16966,
											"end": 16970,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 16959,
											"end": 16964,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16955,
											"end": 16971,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 16949,
											"end": 16972,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 16978,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "853"
										},
										{
											"begin": 17035,
											"end": 17039,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 17030,
											"end": 17033,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 17026,
											"end": 17040,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17012,
											"end": 17024,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 16978,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "850"
										},
										{
											"begin": 16978,
											"end": 17041,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 16978,
											"end": 17041,
											"name": "tag",
											"source": -1,
											"value": "853"
										},
										{
											"begin": 16978,
											"end": 17041,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16890,
											"end": 17047,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17125,
											"end": 17129,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 17118,
											"end": 17123,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17114,
											"end": 17130,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17108,
											"end": 17131,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 17137,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "854"
										},
										{
											"begin": 17188,
											"end": 17192,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 17183,
											"end": 17186,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 17179,
											"end": 17193,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17165,
											"end": 17177,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17137,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "745"
										},
										{
											"begin": 17137,
											"end": 17194,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 17137,
											"end": 17194,
											"name": "tag",
											"source": -1,
											"value": "854"
										},
										{
											"begin": 17137,
											"end": 17194,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17057,
											"end": 17200,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 17215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 17215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 17215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16353,
											"end": 17215,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17222,
											"end": 17325,
											"name": "tag",
											"source": -1,
											"value": "850"
										},
										{
											"begin": 17222,
											"end": 17325,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17295,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "856"
										},
										{
											"begin": 17313,
											"end": 17318,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17295,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "857"
										},
										{
											"begin": 17295,
											"end": 17319,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 17295,
											"end": 17319,
											"name": "tag",
											"source": -1,
											"value": "856"
										},
										{
											"begin": 17295,
											"end": 17319,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17290,
											"end": 17293,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17283,
											"end": 17320,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17277,
											"end": 17325,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17277,
											"end": 17325,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17277,
											"end": 17325,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17332,
											"end": 17445,
											"name": "tag",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 17332,
											"end": 17445,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17415,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "860"
										},
										{
											"begin": 17433,
											"end": 17438,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17415,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "857"
										},
										{
											"begin": 17415,
											"end": 17439,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 17415,
											"end": 17439,
											"name": "tag",
											"source": -1,
											"value": "860"
										},
										{
											"begin": 17415,
											"end": 17439,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17410,
											"end": 17413,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17403,
											"end": 17440,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 17397,
											"end": 17445,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17397,
											"end": 17445,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17397,
											"end": 17445,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17452,
											"end": 17723,
											"name": "tag",
											"source": -1,
											"value": "648"
										},
										{
											"begin": 17452,
											"end": 17723,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17452,
											"end": 17723,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17605,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "862"
										},
										{
											"begin": 17694,
											"end": 17697,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17685,
											"end": 17691,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 17605,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "752"
										},
										{
											"begin": 17605,
											"end": 17698,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 17605,
											"end": 17698,
											"name": "tag",
											"source": -1,
											"value": "862"
										},
										{
											"begin": 17605,
											"end": 17698,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17598,
											"end": 17698,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17598,
											"end": 17698,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17715,
											"end": 17718,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 17708,
											"end": 17718,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17708,
											"end": 17718,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17586,
											"end": 17723,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 17586,
											"end": 17723,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17586,
											"end": 17723,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17586,
											"end": 17723,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17586,
											"end": 17723,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17730,
											"end": 17952,
											"name": "tag",
											"source": -1,
											"value": "149"
										},
										{
											"begin": 17730,
											"end": 17952,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17730,
											"end": 17952,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17857,
											"end": 17859,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 17846,
											"end": 17855,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17834,
											"end": 17860,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 17834,
											"end": 17860,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17871,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "864"
										},
										{
											"begin": 17939,
											"end": 17940,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17928,
											"end": 17937,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 17924,
											"end": 17941,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 17915,
											"end": 17921,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 17871,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "741"
										},
										{
											"begin": 17871,
											"end": 17942,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 17871,
											"end": 17942,
											"name": "tag",
											"source": -1,
											"value": "864"
										},
										{
											"begin": 17871,
											"end": 17942,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17952,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17952,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17952,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17952,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17828,
											"end": 17952,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 17959,
											"end": 18197,
											"name": "tag",
											"source": -1,
											"value": "300"
										},
										{
											"begin": 17959,
											"end": 18197,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 17959,
											"end": 18197,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18094,
											"end": 18096,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18083,
											"end": 18092,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18079,
											"end": 18097,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18071,
											"end": 18097,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18071,
											"end": 18097,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18108,
											"end": 18187,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "866"
										},
										{
											"begin": 18184,
											"end": 18185,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18182,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18169,
											"end": 18186,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18160,
											"end": 18166,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18108,
											"end": 18187,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "737"
										},
										{
											"begin": 18108,
											"end": 18187,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 18108,
											"end": 18187,
											"name": "tag",
											"source": -1,
											"value": "866"
										},
										{
											"begin": 18108,
											"end": 18187,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18065,
											"end": 18197,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18065,
											"end": 18197,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 18065,
											"end": 18197,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18065,
											"end": 18197,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18065,
											"end": 18197,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18204,
											"end": 18648,
											"name": "tag",
											"source": -1,
											"value": "601"
										},
										{
											"begin": 18204,
											"end": 18648,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18204,
											"end": 18648,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18389,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 18376,
											"end": 18385,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18372,
											"end": 18390,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18364,
											"end": 18390,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18364,
											"end": 18390,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18401,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "868"
										},
										{
											"begin": 18469,
											"end": 18470,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18458,
											"end": 18467,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18454,
											"end": 18471,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18445,
											"end": 18451,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 18401,
											"end": 18472,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "741"
										},
										{
											"begin": 18401,
											"end": 18472,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 18401,
											"end": 18472,
											"name": "tag",
											"source": -1,
											"value": "868"
										},
										{
											"begin": 18401,
											"end": 18472,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18483,
											"end": 18555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "869"
										},
										{
											"begin": 18551,
											"end": 18553,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18540,
											"end": 18549,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18536,
											"end": 18554,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18527,
											"end": 18533,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 18483,
											"end": 18555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "741"
										},
										{
											"begin": 18483,
											"end": 18555,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 18483,
											"end": 18555,
											"name": "tag",
											"source": -1,
											"value": "869"
										},
										{
											"begin": 18483,
											"end": 18555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18566,
											"end": 18638,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "870"
										},
										{
											"begin": 18634,
											"end": 18636,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18623,
											"end": 18632,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18619,
											"end": 18637,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18610,
											"end": 18616,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18566,
											"end": 18638,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 18566,
											"end": 18638,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 18566,
											"end": 18638,
											"name": "tag",
											"source": -1,
											"value": "870"
										},
										{
											"begin": 18566,
											"end": 18638,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18358,
											"end": 18648,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18655,
											"end": 18988,
											"name": "tag",
											"source": -1,
											"value": "312"
										},
										{
											"begin": 18655,
											"end": 18988,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18655,
											"end": 18988,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18810,
											"end": 18812,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 18799,
											"end": 18808,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 18795,
											"end": 18813,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18787,
											"end": 18813,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 18787,
											"end": 18813,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18824,
											"end": 18895,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "872"
										},
										{
											"begin": 18892,
											"end": 18893,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18881,
											"end": 18890,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18877,
											"end": 18894,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18868,
											"end": 18874,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 18824,
											"end": 18895,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "741"
										},
										{
											"begin": 18824,
											"end": 18895,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 18824,
											"end": 18895,
											"name": "tag",
											"source": -1,
											"value": "872"
										},
										{
											"begin": 18824,
											"end": 18895,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18906,
											"end": 18978,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "873"
										},
										{
											"begin": 18974,
											"end": 18976,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18963,
											"end": 18972,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 18959,
											"end": 18977,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 18950,
											"end": 18956,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 18906,
											"end": 18978,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 18906,
											"end": 18978,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 18906,
											"end": 18978,
											"name": "tag",
											"source": -1,
											"value": "873"
										},
										{
											"begin": 18906,
											"end": 18978,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18988,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18988,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18988,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18988,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18988,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18781,
											"end": 18988,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 18995,
											"end": 19205,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 18995,
											"end": 19205,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 18995,
											"end": 19205,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19116,
											"end": 19118,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19105,
											"end": 19114,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19101,
											"end": 19119,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19093,
											"end": 19119,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19093,
											"end": 19119,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19130,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "875"
										},
										{
											"begin": 19192,
											"end": 19193,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19181,
											"end": 19190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 19177,
											"end": 19194,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19168,
											"end": 19174,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 19130,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "749"
										},
										{
											"begin": 19130,
											"end": 19195,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 19130,
											"end": 19195,
											"name": "tag",
											"source": -1,
											"value": "875"
										},
										{
											"begin": 19130,
											"end": 19195,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19087,
											"end": 19205,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 19087,
											"end": 19205,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 19087,
											"end": 19205,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19087,
											"end": 19205,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19087,
											"end": 19205,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19212,
											"end": 19464,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 19212,
											"end": 19464,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19212,
											"end": 19464,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19354,
											"end": 19356,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19352,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19339,
											"end": 19357,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19331,
											"end": 19357,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19331,
											"end": 19357,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19368,
											"end": 19454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "877"
										},
										{
											"begin": 19451,
											"end": 19452,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19440,
											"end": 19449,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 19436,
											"end": 19453,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19427,
											"end": 19433,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 19368,
											"end": 19454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "760"
										},
										{
											"begin": 19368,
											"end": 19454,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 19368,
											"end": 19454,
											"name": "tag",
											"source": -1,
											"value": "877"
										},
										{
											"begin": 19368,
											"end": 19454,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19464,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19464,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19464,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19464,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19325,
											"end": 19464,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19471,
											"end": 19733,
											"name": "tag",
											"source": -1,
											"value": "203"
										},
										{
											"begin": 19471,
											"end": 19733,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19471,
											"end": 19733,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19618,
											"end": 19620,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19607,
											"end": 19616,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19603,
											"end": 19621,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19595,
											"end": 19621,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19595,
											"end": 19621,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19632,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "879"
										},
										{
											"begin": 19720,
											"end": 19721,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19709,
											"end": 19718,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 19705,
											"end": 19722,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19696,
											"end": 19702,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 19632,
											"end": 19723,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "764"
										},
										{
											"begin": 19632,
											"end": 19723,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 19632,
											"end": 19723,
											"name": "tag",
											"source": -1,
											"value": "879"
										},
										{
											"begin": 19632,
											"end": 19723,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19589,
											"end": 19733,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 19589,
											"end": 19733,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 19589,
											"end": 19733,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19589,
											"end": 19733,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19589,
											"end": 19733,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 19740,
											"end": 20050,
											"name": "tag",
											"source": -1,
											"value": "625"
										},
										{
											"begin": 19740,
											"end": 20050,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19740,
											"end": 20050,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19887,
											"end": 19889,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 19876,
											"end": 19885,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 19872,
											"end": 19890,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19864,
											"end": 19890,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19864,
											"end": 19890,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19937,
											"end": 19946,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19931,
											"end": 19935,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 19927,
											"end": 19947,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19923,
											"end": 19924,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19912,
											"end": 19921,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 19908,
											"end": 19925,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 19901,
											"end": 19948,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19962,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "881"
										},
										{
											"begin": 20035,
											"end": 20039,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20026,
											"end": 20032,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 19962,
											"end": 20040,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "772"
										},
										{
											"begin": 19962,
											"end": 20040,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 19962,
											"end": 20040,
											"name": "tag",
											"source": -1,
											"value": "881"
										},
										{
											"begin": 19962,
											"end": 20040,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 19954,
											"end": 20040,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 19954,
											"end": 20040,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19858,
											"end": 20050,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 19858,
											"end": 20050,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 19858,
											"end": 20050,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19858,
											"end": 20050,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19858,
											"end": 20050,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20057,
											"end": 20473,
											"name": "tag",
											"source": -1,
											"value": "308"
										},
										{
											"begin": 20057,
											"end": 20473,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20057,
											"end": 20473,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20257,
											"end": 20259,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20246,
											"end": 20255,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20242,
											"end": 20260,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20234,
											"end": 20260,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20234,
											"end": 20260,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20307,
											"end": 20316,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20301,
											"end": 20305,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20297,
											"end": 20317,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20293,
											"end": 20294,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20282,
											"end": 20291,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 20278,
											"end": 20295,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20271,
											"end": 20318,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20332,
											"end": 20463,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "883"
										},
										{
											"begin": 20458,
											"end": 20462,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20332,
											"end": 20463,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "781"
										},
										{
											"begin": 20332,
											"end": 20463,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 20332,
											"end": 20463,
											"name": "tag",
											"source": -1,
											"value": "883"
										},
										{
											"begin": 20332,
											"end": 20463,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20324,
											"end": 20463,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20324,
											"end": 20463,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20228,
											"end": 20473,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 20228,
											"end": 20473,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20228,
											"end": 20473,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20228,
											"end": 20473,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20480,
											"end": 20896,
											"name": "tag",
											"source": -1,
											"value": "230"
										},
										{
											"begin": 20480,
											"end": 20896,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20480,
											"end": 20896,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20680,
											"end": 20682,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 20669,
											"end": 20678,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 20665,
											"end": 20683,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20657,
											"end": 20683,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20657,
											"end": 20683,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20730,
											"end": 20739,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20724,
											"end": 20728,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20720,
											"end": 20740,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20716,
											"end": 20717,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20714,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 20701,
											"end": 20718,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 20694,
											"end": 20741,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 20755,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "885"
										},
										{
											"begin": 20881,
											"end": 20885,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 20755,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "784"
										},
										{
											"begin": 20755,
											"end": 20886,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 20755,
											"end": 20886,
											"name": "tag",
											"source": -1,
											"value": "885"
										},
										{
											"begin": 20755,
											"end": 20886,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20747,
											"end": 20886,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20747,
											"end": 20886,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20651,
											"end": 20896,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 20651,
											"end": 20896,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 20651,
											"end": 20896,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20651,
											"end": 20896,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 20903,
											"end": 21319,
											"name": "tag",
											"source": -1,
											"value": "637"
										},
										{
											"begin": 20903,
											"end": 21319,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 20903,
											"end": 21319,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21105,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21092,
											"end": 21101,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21088,
											"end": 21106,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21080,
											"end": 21106,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21080,
											"end": 21106,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21153,
											"end": 21162,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21147,
											"end": 21151,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21143,
											"end": 21163,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21139,
											"end": 21140,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21128,
											"end": 21137,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21124,
											"end": 21141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21117,
											"end": 21164,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21309,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "887"
										},
										{
											"begin": 21304,
											"end": 21308,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21309,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "787"
										},
										{
											"begin": 21178,
											"end": 21309,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 21178,
											"end": 21309,
											"name": "tag",
											"source": -1,
											"value": "887"
										},
										{
											"begin": 21178,
											"end": 21309,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21170,
											"end": 21309,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21170,
											"end": 21309,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21074,
											"end": 21319,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 21074,
											"end": 21319,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21074,
											"end": 21319,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21074,
											"end": 21319,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21326,
											"end": 21742,
											"name": "tag",
											"source": -1,
											"value": "570"
										},
										{
											"begin": 21326,
											"end": 21742,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21326,
											"end": 21742,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21526,
											"end": 21528,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21524,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21511,
											"end": 21529,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21503,
											"end": 21529,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21503,
											"end": 21529,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21576,
											"end": 21585,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21570,
											"end": 21574,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21566,
											"end": 21586,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21562,
											"end": 21563,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21551,
											"end": 21560,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21547,
											"end": 21564,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21540,
											"end": 21587,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 21601,
											"end": 21732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "889"
										},
										{
											"begin": 21727,
											"end": 21731,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21601,
											"end": 21732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "790"
										},
										{
											"begin": 21601,
											"end": 21732,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 21601,
											"end": 21732,
											"name": "tag",
											"source": -1,
											"value": "889"
										},
										{
											"begin": 21601,
											"end": 21732,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21593,
											"end": 21732,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21593,
											"end": 21732,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21497,
											"end": 21742,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 21497,
											"end": 21742,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21497,
											"end": 21742,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21497,
											"end": 21742,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 21749,
											"end": 22165,
											"name": "tag",
											"source": -1,
											"value": "596"
										},
										{
											"begin": 21749,
											"end": 22165,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 21749,
											"end": 22165,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21949,
											"end": 21951,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 21938,
											"end": 21947,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 21934,
											"end": 21952,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21926,
											"end": 21952,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21926,
											"end": 21952,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21999,
											"end": 22008,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21993,
											"end": 21997,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 21989,
											"end": 22009,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21985,
											"end": 21986,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21974,
											"end": 21983,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 21970,
											"end": 21987,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 21963,
											"end": 22010,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22024,
											"end": 22155,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "891"
										},
										{
											"begin": 22150,
											"end": 22154,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22024,
											"end": 22155,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "793"
										},
										{
											"begin": 22024,
											"end": 22155,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 22024,
											"end": 22155,
											"name": "tag",
											"source": -1,
											"value": "891"
										},
										{
											"begin": 22024,
											"end": 22155,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22016,
											"end": 22155,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22016,
											"end": 22155,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21920,
											"end": 22165,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 21920,
											"end": 22165,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21920,
											"end": 22165,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21920,
											"end": 22165,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22172,
											"end": 22588,
											"name": "tag",
											"source": -1,
											"value": "221"
										},
										{
											"begin": 22172,
											"end": 22588,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22172,
											"end": 22588,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22372,
											"end": 22374,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22361,
											"end": 22370,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22357,
											"end": 22375,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 22349,
											"end": 22375,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22349,
											"end": 22375,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22422,
											"end": 22431,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22416,
											"end": 22420,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22412,
											"end": 22432,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22408,
											"end": 22409,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22397,
											"end": 22406,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22393,
											"end": 22410,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 22386,
											"end": 22433,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22447,
											"end": 22578,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "893"
										},
										{
											"begin": 22573,
											"end": 22577,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22447,
											"end": 22578,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "796"
										},
										{
											"begin": 22447,
											"end": 22578,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 22447,
											"end": 22578,
											"name": "tag",
											"source": -1,
											"value": "893"
										},
										{
											"begin": 22447,
											"end": 22578,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22439,
											"end": 22578,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22439,
											"end": 22578,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22343,
											"end": 22588,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22343,
											"end": 22588,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22343,
											"end": 22588,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22343,
											"end": 22588,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 22595,
											"end": 23011,
											"name": "tag",
											"source": -1,
											"value": "264"
										},
										{
											"begin": 22595,
											"end": 23011,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22595,
											"end": 23011,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22795,
											"end": 22797,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 22784,
											"end": 22793,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 22780,
											"end": 22798,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 22772,
											"end": 22798,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22772,
											"end": 22798,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22845,
											"end": 22854,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22839,
											"end": 22843,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22835,
											"end": 22855,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22831,
											"end": 22832,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22820,
											"end": 22829,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22816,
											"end": 22833,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 22809,
											"end": 22856,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22870,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "895"
										},
										{
											"begin": 22996,
											"end": 23000,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 22870,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "799"
										},
										{
											"begin": 22870,
											"end": 23001,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 22870,
											"end": 23001,
											"name": "tag",
											"source": -1,
											"value": "895"
										},
										{
											"begin": 22870,
											"end": 23001,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 22862,
											"end": 23001,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22862,
											"end": 23001,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22766,
											"end": 23011,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 22766,
											"end": 23011,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22766,
											"end": 23011,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22766,
											"end": 23011,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23018,
											"end": 23434,
											"name": "tag",
											"source": -1,
											"value": "510"
										},
										{
											"begin": 23018,
											"end": 23434,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23018,
											"end": 23434,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23218,
											"end": 23220,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23207,
											"end": 23216,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23203,
											"end": 23221,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23195,
											"end": 23221,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23195,
											"end": 23221,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23268,
											"end": 23277,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23262,
											"end": 23266,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23258,
											"end": 23278,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23254,
											"end": 23255,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23243,
											"end": 23252,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 23239,
											"end": 23256,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23232,
											"end": 23279,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23293,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "897"
										},
										{
											"begin": 23419,
											"end": 23423,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23293,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "802"
										},
										{
											"begin": 23293,
											"end": 23424,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 23293,
											"end": 23424,
											"name": "tag",
											"source": -1,
											"value": "897"
										},
										{
											"begin": 23293,
											"end": 23424,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23285,
											"end": 23424,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23285,
											"end": 23424,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23189,
											"end": 23434,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 23189,
											"end": 23434,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23189,
											"end": 23434,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23189,
											"end": 23434,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23441,
											"end": 23857,
											"name": "tag",
											"source": -1,
											"value": "529"
										},
										{
											"begin": 23441,
											"end": 23857,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23441,
											"end": 23857,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23641,
											"end": 23643,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 23630,
											"end": 23639,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 23626,
											"end": 23644,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23618,
											"end": 23644,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23618,
											"end": 23644,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23691,
											"end": 23700,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23685,
											"end": 23689,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23681,
											"end": 23701,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23677,
											"end": 23678,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 23666,
											"end": 23675,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 23662,
											"end": 23679,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 23655,
											"end": 23702,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23716,
											"end": 23847,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "899"
										},
										{
											"begin": 23842,
											"end": 23846,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 23716,
											"end": 23847,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "805"
										},
										{
											"begin": 23716,
											"end": 23847,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 23716,
											"end": 23847,
											"name": "tag",
											"source": -1,
											"value": "899"
										},
										{
											"begin": 23716,
											"end": 23847,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23708,
											"end": 23847,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23708,
											"end": 23847,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23612,
											"end": 23857,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 23612,
											"end": 23857,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23612,
											"end": 23857,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23612,
											"end": 23857,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 23864,
											"end": 24280,
											"name": "tag",
											"source": -1,
											"value": "586"
										},
										{
											"begin": 23864,
											"end": 24280,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 23864,
											"end": 24280,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24064,
											"end": 24066,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24053,
											"end": 24062,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24049,
											"end": 24067,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 24041,
											"end": 24067,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24041,
											"end": 24067,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24114,
											"end": 24123,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24108,
											"end": 24112,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24104,
											"end": 24124,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24100,
											"end": 24101,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24089,
											"end": 24098,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 24085,
											"end": 24102,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 24078,
											"end": 24125,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24139,
											"end": 24270,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "901"
										},
										{
											"begin": 24265,
											"end": 24269,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24139,
											"end": 24270,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "808"
										},
										{
											"begin": 24139,
											"end": 24270,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 24139,
											"end": 24270,
											"name": "tag",
											"source": -1,
											"value": "901"
										},
										{
											"begin": 24139,
											"end": 24270,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24131,
											"end": 24270,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24131,
											"end": 24270,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24035,
											"end": 24280,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 24035,
											"end": 24280,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24035,
											"end": 24280,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24035,
											"end": 24280,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24287,
											"end": 24703,
											"name": "tag",
											"source": -1,
											"value": "338"
										},
										{
											"begin": 24287,
											"end": 24703,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24287,
											"end": 24703,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24487,
											"end": 24489,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24476,
											"end": 24485,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24472,
											"end": 24490,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 24464,
											"end": 24490,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24464,
											"end": 24490,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24537,
											"end": 24546,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24531,
											"end": 24535,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24527,
											"end": 24547,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24523,
											"end": 24524,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24512,
											"end": 24521,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 24508,
											"end": 24525,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 24501,
											"end": 24548,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24562,
											"end": 24693,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "903"
										},
										{
											"begin": 24688,
											"end": 24692,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24562,
											"end": 24693,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "811"
										},
										{
											"begin": 24562,
											"end": 24693,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 24562,
											"end": 24693,
											"name": "tag",
											"source": -1,
											"value": "903"
										},
										{
											"begin": 24562,
											"end": 24693,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24554,
											"end": 24693,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24554,
											"end": 24693,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24458,
											"end": 24703,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 24458,
											"end": 24703,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24458,
											"end": 24703,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24458,
											"end": 24703,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 24710,
											"end": 25126,
											"name": "tag",
											"source": -1,
											"value": "486"
										},
										{
											"begin": 24710,
											"end": 25126,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24710,
											"end": 25126,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24910,
											"end": 24912,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 24899,
											"end": 24908,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 24895,
											"end": 24913,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 24887,
											"end": 24913,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24887,
											"end": 24913,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24960,
											"end": 24969,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24954,
											"end": 24958,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24950,
											"end": 24970,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24946,
											"end": 24947,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24935,
											"end": 24944,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 24931,
											"end": 24948,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 24924,
											"end": 24971,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24985,
											"end": 25116,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "905"
										},
										{
											"begin": 25111,
											"end": 25115,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 24985,
											"end": 25116,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "814"
										},
										{
											"begin": 24985,
											"end": 25116,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 24985,
											"end": 25116,
											"name": "tag",
											"source": -1,
											"value": "905"
										},
										{
											"begin": 24985,
											"end": 25116,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 24977,
											"end": 25116,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24977,
											"end": 25116,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24881,
											"end": 25126,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 24881,
											"end": 25126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 24881,
											"end": 25126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24881,
											"end": 25126,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25133,
											"end": 25549,
											"name": "tag",
											"source": -1,
											"value": "260"
										},
										{
											"begin": 25133,
											"end": 25549,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25133,
											"end": 25549,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 25333,
											"end": 25335,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25322,
											"end": 25331,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25318,
											"end": 25336,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 25310,
											"end": 25336,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25310,
											"end": 25336,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25383,
											"end": 25392,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25377,
											"end": 25381,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25373,
											"end": 25393,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25369,
											"end": 25370,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 25358,
											"end": 25367,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 25354,
											"end": 25371,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 25347,
											"end": 25394,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 25408,
											"end": 25539,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "907"
										},
										{
											"begin": 25534,
											"end": 25538,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25408,
											"end": 25539,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "817"
										},
										{
											"begin": 25408,
											"end": 25539,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 25408,
											"end": 25539,
											"name": "tag",
											"source": -1,
											"value": "907"
										},
										{
											"begin": 25408,
											"end": 25539,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25400,
											"end": 25539,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25400,
											"end": 25539,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25304,
											"end": 25549,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 25304,
											"end": 25549,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25304,
											"end": 25549,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25304,
											"end": 25549,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25556,
											"end": 25972,
											"name": "tag",
											"source": -1,
											"value": "213"
										},
										{
											"begin": 25556,
											"end": 25972,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25556,
											"end": 25972,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 25756,
											"end": 25758,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 25745,
											"end": 25754,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25741,
											"end": 25759,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 25733,
											"end": 25759,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25733,
											"end": 25759,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25806,
											"end": 25815,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25800,
											"end": 25804,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25796,
											"end": 25816,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25792,
											"end": 25793,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 25781,
											"end": 25790,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 25777,
											"end": 25794,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 25770,
											"end": 25817,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "909"
										},
										{
											"begin": 25957,
											"end": 25961,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "820"
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "tag",
											"source": -1,
											"value": "909"
										},
										{
											"begin": 25831,
											"end": 25962,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25823,
											"end": 25962,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25727,
											"end": 25972,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 25727,
											"end": 25972,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 25727,
											"end": 25972,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25727,
											"end": 25972,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 25979,
											"end": 26395,
											"name": "tag",
											"source": -1,
											"value": "489"
										},
										{
											"begin": 25979,
											"end": 26395,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 25979,
											"end": 26395,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26179,
											"end": 26181,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26168,
											"end": 26177,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26164,
											"end": 26182,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 26156,
											"end": 26182,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26156,
											"end": 26182,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26229,
											"end": 26238,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26223,
											"end": 26227,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26219,
											"end": 26239,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26215,
											"end": 26216,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26204,
											"end": 26213,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26200,
											"end": 26217,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 26193,
											"end": 26240,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 26254,
											"end": 26385,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "911"
										},
										{
											"begin": 26380,
											"end": 26384,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26254,
											"end": 26385,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "823"
										},
										{
											"begin": 26254,
											"end": 26385,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 26254,
											"end": 26385,
											"name": "tag",
											"source": -1,
											"value": "911"
										},
										{
											"begin": 26254,
											"end": 26385,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26246,
											"end": 26385,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26246,
											"end": 26385,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26150,
											"end": 26395,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 26150,
											"end": 26395,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26150,
											"end": 26395,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26150,
											"end": 26395,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26402,
											"end": 26818,
											"name": "tag",
											"source": -1,
											"value": "226"
										},
										{
											"begin": 26402,
											"end": 26818,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26402,
											"end": 26818,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26602,
											"end": 26604,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 26591,
											"end": 26600,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 26587,
											"end": 26605,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 26579,
											"end": 26605,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26579,
											"end": 26605,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26652,
											"end": 26661,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26646,
											"end": 26650,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26642,
											"end": 26662,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26638,
											"end": 26639,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26627,
											"end": 26636,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26623,
											"end": 26640,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 26616,
											"end": 26663,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 26677,
											"end": 26808,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "913"
										},
										{
											"begin": 26803,
											"end": 26807,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 26677,
											"end": 26808,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "826"
										},
										{
											"begin": 26677,
											"end": 26808,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 26677,
											"end": 26808,
											"name": "tag",
											"source": -1,
											"value": "913"
										},
										{
											"begin": 26677,
											"end": 26808,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26669,
											"end": 26808,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26669,
											"end": 26808,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26573,
											"end": 26818,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 26573,
											"end": 26818,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26573,
											"end": 26818,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26573,
											"end": 26818,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 26825,
											"end": 27241,
											"name": "tag",
											"source": -1,
											"value": "472"
										},
										{
											"begin": 26825,
											"end": 27241,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26825,
											"end": 27241,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27025,
											"end": 27027,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27014,
											"end": 27023,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27010,
											"end": 27028,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27002,
											"end": 27028,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27002,
											"end": 27028,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27075,
											"end": 27084,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27069,
											"end": 27073,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27065,
											"end": 27085,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27061,
											"end": 27062,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27050,
											"end": 27059,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 27046,
											"end": 27063,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27039,
											"end": 27086,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27100,
											"end": 27231,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "915"
										},
										{
											"begin": 27226,
											"end": 27230,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27100,
											"end": 27231,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "829"
										},
										{
											"begin": 27100,
											"end": 27231,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 27100,
											"end": 27231,
											"name": "tag",
											"source": -1,
											"value": "915"
										},
										{
											"begin": 27100,
											"end": 27231,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27092,
											"end": 27231,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27092,
											"end": 27231,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26996,
											"end": 27241,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 26996,
											"end": 27241,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 26996,
											"end": 27241,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26996,
											"end": 27241,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27248,
											"end": 27664,
											"name": "tag",
											"source": -1,
											"value": "646"
										},
										{
											"begin": 27248,
											"end": 27664,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27248,
											"end": 27664,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27448,
											"end": 27450,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27437,
											"end": 27446,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27433,
											"end": 27451,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27425,
											"end": 27451,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27425,
											"end": 27451,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27498,
											"end": 27507,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27492,
											"end": 27496,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27488,
											"end": 27508,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27484,
											"end": 27485,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27473,
											"end": 27482,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 27469,
											"end": 27486,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27462,
											"end": 27509,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27523,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "917"
										},
										{
											"begin": 27649,
											"end": 27653,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27523,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "832"
										},
										{
											"begin": 27523,
											"end": 27654,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 27523,
											"end": 27654,
											"name": "tag",
											"source": -1,
											"value": "917"
										},
										{
											"begin": 27523,
											"end": 27654,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27515,
											"end": 27654,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27515,
											"end": 27654,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27419,
											"end": 27664,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27419,
											"end": 27664,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27419,
											"end": 27664,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27419,
											"end": 27664,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 27671,
											"end": 28087,
											"name": "tag",
											"source": -1,
											"value": "515"
										},
										{
											"begin": 27671,
											"end": 28087,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27671,
											"end": 28087,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27871,
											"end": 27873,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 27860,
											"end": 27869,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 27856,
											"end": 27874,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27848,
											"end": 27874,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27848,
											"end": 27874,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27921,
											"end": 27930,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27915,
											"end": 27919,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27911,
											"end": 27931,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27907,
											"end": 27908,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 27896,
											"end": 27905,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 27892,
											"end": 27909,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 27885,
											"end": 27932,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27946,
											"end": 28077,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "919"
										},
										{
											"begin": 28072,
											"end": 28076,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27946,
											"end": 28077,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "835"
										},
										{
											"begin": 27946,
											"end": 28077,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 27946,
											"end": 28077,
											"name": "tag",
											"source": -1,
											"value": "919"
										},
										{
											"begin": 27946,
											"end": 28077,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 27938,
											"end": 28077,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27938,
											"end": 28077,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27842,
											"end": 28087,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27842,
											"end": 28087,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 27842,
											"end": 28087,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27842,
											"end": 28087,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28094,
											"end": 28510,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 28094,
											"end": 28510,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28094,
											"end": 28510,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28294,
											"end": 28296,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28283,
											"end": 28292,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28279,
											"end": 28297,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28271,
											"end": 28297,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28271,
											"end": 28297,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28344,
											"end": 28353,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28338,
											"end": 28342,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28334,
											"end": 28354,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28330,
											"end": 28331,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28319,
											"end": 28328,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 28315,
											"end": 28332,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28308,
											"end": 28355,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28369,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "921"
										},
										{
											"begin": 28495,
											"end": 28499,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28369,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "838"
										},
										{
											"begin": 28369,
											"end": 28500,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 28369,
											"end": 28500,
											"name": "tag",
											"source": -1,
											"value": "921"
										},
										{
											"begin": 28369,
											"end": 28500,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28361,
											"end": 28500,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28361,
											"end": 28500,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28265,
											"end": 28510,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 28265,
											"end": 28510,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28265,
											"end": 28510,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28265,
											"end": 28510,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28517,
											"end": 28933,
											"name": "tag",
											"source": -1,
											"value": "267"
										},
										{
											"begin": 28517,
											"end": 28933,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28517,
											"end": 28933,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28717,
											"end": 28719,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 28706,
											"end": 28715,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 28702,
											"end": 28720,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28720,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28694,
											"end": 28720,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28767,
											"end": 28776,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28761,
											"end": 28765,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28757,
											"end": 28777,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28753,
											"end": 28754,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28742,
											"end": 28751,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 28738,
											"end": 28755,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 28731,
											"end": 28778,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28792,
											"end": 28923,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "923"
										},
										{
											"begin": 28918,
											"end": 28922,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 28792,
											"end": 28923,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "841"
										},
										{
											"begin": 28792,
											"end": 28923,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 28792,
											"end": 28923,
											"name": "tag",
											"source": -1,
											"value": "923"
										},
										{
											"begin": 28792,
											"end": 28923,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28784,
											"end": 28923,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28784,
											"end": 28923,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28688,
											"end": 28933,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 28688,
											"end": 28933,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 28688,
											"end": 28933,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28688,
											"end": 28933,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 28940,
											"end": 29356,
											"name": "tag",
											"source": -1,
											"value": "464"
										},
										{
											"begin": 28940,
											"end": 29356,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 28940,
											"end": 29356,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29140,
											"end": 29142,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29129,
											"end": 29138,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29125,
											"end": 29143,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29117,
											"end": 29143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29117,
											"end": 29143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29190,
											"end": 29199,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29184,
											"end": 29188,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29180,
											"end": 29200,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29176,
											"end": 29177,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29165,
											"end": 29174,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29161,
											"end": 29178,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29154,
											"end": 29201,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29215,
											"end": 29346,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "925"
										},
										{
											"begin": 29341,
											"end": 29345,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 29215,
											"end": 29346,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "844"
										},
										{
											"begin": 29215,
											"end": 29346,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 29215,
											"end": 29346,
											"name": "tag",
											"source": -1,
											"value": "925"
										},
										{
											"begin": 29215,
											"end": 29346,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29207,
											"end": 29346,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29207,
											"end": 29346,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29111,
											"end": 29356,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29111,
											"end": 29356,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29111,
											"end": 29356,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29111,
											"end": 29356,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 29363,
											"end": 29686,
											"name": "tag",
											"source": -1,
											"value": "115"
										},
										{
											"begin": 29363,
											"end": 29686,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29363,
											"end": 29686,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29540,
											"end": 29543,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 29529,
											"end": 29538,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29525,
											"end": 29544,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29517,
											"end": 29544,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29517,
											"end": 29544,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29555,
											"end": 29676,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "927"
										},
										{
											"begin": 29673,
											"end": 29674,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29662,
											"end": 29671,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29649,
											"end": 29655,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29555,
											"end": 29676,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "847"
										},
										{
											"begin": 29555,
											"end": 29676,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 29555,
											"end": 29676,
											"name": "tag",
											"source": -1,
											"value": "927"
										},
										{
											"begin": 29555,
											"end": 29676,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29511,
											"end": 29686,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 29511,
											"end": 29686,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29511,
											"end": 29686,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29511,
											"end": 29686,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29511,
											"end": 29686,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 29693,
											"end": 29915,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 29693,
											"end": 29915,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29693,
											"end": 29915,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29820,
											"end": 29822,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29809,
											"end": 29818,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 29805,
											"end": 29823,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29797,
											"end": 29823,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 29797,
											"end": 29823,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29834,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "929"
										},
										{
											"begin": 29902,
											"end": 29903,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29891,
											"end": 29900,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 29887,
											"end": 29904,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 29878,
											"end": 29884,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 29834,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 29834,
											"end": 29905,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 29834,
											"end": 29905,
											"name": "tag",
											"source": -1,
											"value": "929"
										},
										{
											"begin": 29834,
											"end": 29905,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29791,
											"end": 29915,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 29791,
											"end": 29915,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 29791,
											"end": 29915,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29791,
											"end": 29915,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29791,
											"end": 29915,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 29922,
											"end": 30243,
											"name": "tag",
											"source": -1,
											"value": "500"
										},
										{
											"begin": 29922,
											"end": 30243,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 29922,
											"end": 30243,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30071,
											"end": 30073,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30060,
											"end": 30069,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30056,
											"end": 30074,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30048,
											"end": 30074,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30048,
											"end": 30074,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30085,
											"end": 30156,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "931"
										},
										{
											"begin": 30153,
											"end": 30154,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30142,
											"end": 30151,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30138,
											"end": 30155,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30129,
											"end": 30135,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 30085,
											"end": 30156,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 30085,
											"end": 30156,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 30085,
											"end": 30156,
											"name": "tag",
											"source": -1,
											"value": "931"
										},
										{
											"begin": 30085,
											"end": 30156,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30167,
											"end": 30233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "932"
										},
										{
											"begin": 30229,
											"end": 30231,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30218,
											"end": 30227,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30214,
											"end": 30232,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30205,
											"end": 30211,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30167,
											"end": 30233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "749"
										},
										{
											"begin": 30167,
											"end": 30233,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 30167,
											"end": 30233,
											"name": "tag",
											"source": -1,
											"value": "932"
										},
										{
											"begin": 30167,
											"end": 30233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30243,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30243,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30243,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30243,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30243,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30243,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30250,
											"end": 30599,
											"name": "tag",
											"source": -1,
											"value": "361"
										},
										{
											"begin": 30250,
											"end": 30599,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30250,
											"end": 30599,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30413,
											"end": 30415,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30402,
											"end": 30411,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30398,
											"end": 30416,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30390,
											"end": 30416,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30390,
											"end": 30416,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30427,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "934"
										},
										{
											"begin": 30495,
											"end": 30496,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30484,
											"end": 30493,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30480,
											"end": 30497,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30471,
											"end": 30477,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 30427,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 30427,
											"end": 30498,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 30427,
											"end": 30498,
											"name": "tag",
											"source": -1,
											"value": "934"
										},
										{
											"begin": 30427,
											"end": 30498,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30509,
											"end": 30589,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "935"
										},
										{
											"begin": 30585,
											"end": 30587,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30574,
											"end": 30583,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30570,
											"end": 30588,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30561,
											"end": 30567,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30509,
											"end": 30589,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "768"
										},
										{
											"begin": 30509,
											"end": 30589,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 30509,
											"end": 30589,
											"name": "tag",
											"source": -1,
											"value": "935"
										},
										{
											"begin": 30509,
											"end": 30589,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30384,
											"end": 30599,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 30384,
											"end": 30599,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30384,
											"end": 30599,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30384,
											"end": 30599,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30384,
											"end": 30599,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30384,
											"end": 30599,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30606,
											"end": 30939,
											"name": "tag",
											"source": -1,
											"value": "319"
										},
										{
											"begin": 30606,
											"end": 30939,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30606,
											"end": 30939,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30761,
											"end": 30763,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 30750,
											"end": 30759,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 30746,
											"end": 30764,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30738,
											"end": 30764,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 30738,
											"end": 30764,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30775,
											"end": 30846,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "937"
										},
										{
											"begin": 30843,
											"end": 30844,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 30832,
											"end": 30841,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30828,
											"end": 30845,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30819,
											"end": 30825,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 30775,
											"end": 30846,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 30775,
											"end": 30846,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 30775,
											"end": 30846,
											"name": "tag",
											"source": -1,
											"value": "937"
										},
										{
											"begin": 30775,
											"end": 30846,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30857,
											"end": 30929,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "938"
										},
										{
											"begin": 30925,
											"end": 30927,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 30914,
											"end": 30923,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30910,
											"end": 30928,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 30901,
											"end": 30907,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 30857,
											"end": 30929,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 30857,
											"end": 30929,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 30857,
											"end": 30929,
											"name": "tag",
											"source": -1,
											"value": "938"
										},
										{
											"begin": 30857,
											"end": 30929,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30732,
											"end": 30939,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 30732,
											"end": 30939,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 30732,
											"end": 30939,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30732,
											"end": 30939,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30732,
											"end": 30939,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30732,
											"end": 30939,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 30946,
											"end": 31390,
											"name": "tag",
											"source": -1,
											"value": "157"
										},
										{
											"begin": 30946,
											"end": 31390,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 30946,
											"end": 31390,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31129,
											"end": 31131,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 31118,
											"end": 31127,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 31114,
											"end": 31132,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31106,
											"end": 31132,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 31106,
											"end": 31132,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31143,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "940"
										},
										{
											"begin": 31211,
											"end": 31212,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31200,
											"end": 31209,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31196,
											"end": 31213,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31187,
											"end": 31193,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 31143,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31143,
											"end": 31214,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31143,
											"end": 31214,
											"name": "tag",
											"source": -1,
											"value": "940"
										},
										{
											"begin": 31143,
											"end": 31214,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31225,
											"end": 31297,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "941"
										},
										{
											"begin": 31293,
											"end": 31295,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 31282,
											"end": 31291,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31278,
											"end": 31296,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31269,
											"end": 31275,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 31225,
											"end": 31297,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31225,
											"end": 31297,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31225,
											"end": 31297,
											"name": "tag",
											"source": -1,
											"value": "941"
										},
										{
											"begin": 31225,
											"end": 31297,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31308,
											"end": 31380,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "942"
										},
										{
											"begin": 31376,
											"end": 31378,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 31365,
											"end": 31374,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31361,
											"end": 31379,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31352,
											"end": 31358,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 31308,
											"end": 31380,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31308,
											"end": 31380,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31308,
											"end": 31380,
											"name": "tag",
											"source": -1,
											"value": "942"
										},
										{
											"begin": 31308,
											"end": 31380,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31100,
											"end": 31390,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 31397,
											"end": 32053,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 31397,
											"end": 32053,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31397,
											"end": 32053,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31630,
											"end": 31633,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 31619,
											"end": 31628,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 31615,
											"end": 31634,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31607,
											"end": 31634,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 31607,
											"end": 31634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31645,
											"end": 31716,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "944"
										},
										{
											"begin": 31713,
											"end": 31714,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31702,
											"end": 31711,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31698,
											"end": 31715,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31689,
											"end": 31695,
											"name": "DUP9",
											"source": -1
										},
										{
											"begin": 31645,
											"end": 31716,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31645,
											"end": 31716,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31645,
											"end": 31716,
											"name": "tag",
											"source": -1,
											"value": "944"
										},
										{
											"begin": 31645,
											"end": 31716,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31727,
											"end": 31799,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "945"
										},
										{
											"begin": 31795,
											"end": 31797,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 31784,
											"end": 31793,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31780,
											"end": 31798,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31771,
											"end": 31777,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": 31727,
											"end": 31799,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31727,
											"end": 31799,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31727,
											"end": 31799,
											"name": "tag",
											"source": -1,
											"value": "945"
										},
										{
											"begin": 31727,
											"end": 31799,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31810,
											"end": 31882,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "946"
										},
										{
											"begin": 31878,
											"end": 31880,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 31867,
											"end": 31876,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31863,
											"end": 31881,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31854,
											"end": 31860,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 31810,
											"end": 31882,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31810,
											"end": 31882,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31810,
											"end": 31882,
											"name": "tag",
											"source": -1,
											"value": "946"
										},
										{
											"begin": 31810,
											"end": 31882,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31893,
											"end": 31965,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "947"
										},
										{
											"begin": 31961,
											"end": 31963,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 31950,
											"end": 31959,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 31946,
											"end": 31964,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 31937,
											"end": 31943,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 31893,
											"end": 31965,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "858"
										},
										{
											"begin": 31893,
											"end": 31965,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31893,
											"end": 31965,
											"name": "tag",
											"source": -1,
											"value": "947"
										},
										{
											"begin": 31893,
											"end": 31965,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31976,
											"end": 32043,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "948"
										},
										{
											"begin": 32038,
											"end": 32041,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 32027,
											"end": 32036,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 32023,
											"end": 32042,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32014,
											"end": 32020,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 31976,
											"end": 32043,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "749"
										},
										{
											"begin": 31976,
											"end": 32043,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 31976,
											"end": 32043,
											"name": "tag",
											"source": -1,
											"value": "948"
										},
										{
											"begin": 31976,
											"end": 32043,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "SWAP6",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31601,
											"end": 32053,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32060,
											"end": 32181,
											"name": "tag",
											"source": -1,
											"value": "755"
										},
										{
											"begin": 32060,
											"end": 32181,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32060,
											"end": 32181,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32153,
											"end": 32158,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32147,
											"end": 32159,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 32137,
											"end": 32159,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32137,
											"end": 32159,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32118,
											"end": 32181,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32118,
											"end": 32181,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32118,
											"end": 32181,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32118,
											"end": 32181,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32188,
											"end": 32310,
											"name": "tag",
											"source": -1,
											"value": "775"
										},
										{
											"begin": 32188,
											"end": 32310,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32188,
											"end": 32310,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32282,
											"end": 32287,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32276,
											"end": 32288,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 32266,
											"end": 32288,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32266,
											"end": 32288,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32247,
											"end": 32310,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32247,
											"end": 32310,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32247,
											"end": 32310,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32247,
											"end": 32310,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32318,
											"end": 32462,
											"name": "tag",
											"source": -1,
											"value": "757"
										},
										{
											"begin": 32318,
											"end": 32462,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32318,
											"end": 32462,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32453,
											"end": 32456,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32438,
											"end": 32456,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32438,
											"end": 32456,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32431,
											"end": 32462,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32431,
											"end": 32462,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32431,
											"end": 32462,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32431,
											"end": 32462,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32431,
											"end": 32462,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32471,
											"end": 32634,
											"name": "tag",
											"source": -1,
											"value": "777"
										},
										{
											"begin": 32471,
											"end": 32634,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32471,
											"end": 32634,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32586,
											"end": 32592,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32581,
											"end": 32584,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32574,
											"end": 32593,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 32623,
											"end": 32627,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 32618,
											"end": 32621,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32614,
											"end": 32628,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 32599,
											"end": 32628,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32599,
											"end": 32628,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32567,
											"end": 32634,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 32567,
											"end": 32634,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32567,
											"end": 32634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32567,
											"end": 32634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32567,
											"end": 32634,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32642,
											"end": 32733,
											"name": "tag",
											"source": -1,
											"value": "744"
										},
										{
											"begin": 32642,
											"end": 32733,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32642,
											"end": 32733,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "954"
										},
										{
											"begin": 32722,
											"end": 32727,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "955"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "tag",
											"source": -1,
											"value": "954"
										},
										{
											"begin": 32704,
											"end": 32728,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32693,
											"end": 32728,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32693,
											"end": 32728,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32687,
											"end": 32733,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32687,
											"end": 32733,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32687,
											"end": 32733,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32687,
											"end": 32733,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32740,
											"end": 32825,
											"name": "tag",
											"source": -1,
											"value": "748"
										},
										{
											"begin": 32740,
											"end": 32825,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32740,
											"end": 32825,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32813,
											"end": 32818,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 32806,
											"end": 32819,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32799,
											"end": 32820,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 32788,
											"end": 32820,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32788,
											"end": 32820,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32782,
											"end": 32825,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32782,
											"end": 32825,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32782,
											"end": 32825,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32782,
											"end": 32825,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32832,
											"end": 32938,
											"name": "tag",
											"source": -1,
											"value": "957"
										},
										{
											"begin": 32832,
											"end": 32938,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32832,
											"end": 32938,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32909,
											"end": 32933,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "959"
										},
										{
											"begin": 32927,
											"end": 32932,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 32909,
											"end": 32933,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "744"
										},
										{
											"begin": 32909,
											"end": 32933,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 32909,
											"end": 32933,
											"name": "tag",
											"source": -1,
											"value": "959"
										},
										{
											"begin": 32909,
											"end": 32933,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32898,
											"end": 32933,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32898,
											"end": 32933,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32892,
											"end": 32938,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32892,
											"end": 32938,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32892,
											"end": 32938,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32892,
											"end": 32938,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 32945,
											"end": 33066,
											"name": "tag",
											"source": -1,
											"value": "955"
										},
										{
											"begin": 32945,
											"end": 33066,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32945,
											"end": 33066,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33018,
											"end": 33060,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33011,
											"end": 33016,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33007,
											"end": 33061,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 32996,
											"end": 33061,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32996,
											"end": 33061,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32990,
											"end": 33066,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 32990,
											"end": 33066,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 32990,
											"end": 33066,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32990,
											"end": 33066,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33073,
											"end": 33145,
											"name": "tag",
											"source": -1,
											"value": "857"
										},
										{
											"begin": 33073,
											"end": 33145,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33073,
											"end": 33145,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33135,
											"end": 33140,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 33124,
											"end": 33140,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33124,
											"end": 33140,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33118,
											"end": 33145,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33118,
											"end": 33145,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33118,
											"end": 33145,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33118,
											"end": 33145,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33152,
											"end": 33281,
											"name": "tag",
											"source": -1,
											"value": "740"
										},
										{
											"begin": 33152,
											"end": 33281,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33152,
											"end": 33281,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33239,
											"end": 33276,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "963"
										},
										{
											"begin": 33270,
											"end": 33275,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33239,
											"end": 33276,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "964"
										},
										{
											"begin": 33239,
											"end": 33276,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 33239,
											"end": 33276,
											"name": "tag",
											"source": -1,
											"value": "963"
										},
										{
											"begin": 33239,
											"end": 33276,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33226,
											"end": 33276,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33226,
											"end": 33276,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33220,
											"end": 33281,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33220,
											"end": 33281,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33220,
											"end": 33281,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33220,
											"end": 33281,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33288,
											"end": 33439,
											"name": "tag",
											"source": -1,
											"value": "763"
										},
										{
											"begin": 33288,
											"end": 33439,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33288,
											"end": 33439,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33382,
											"end": 33434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "966"
										},
										{
											"begin": 33428,
											"end": 33433,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33382,
											"end": 33434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "967"
										},
										{
											"begin": 33382,
											"end": 33434,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 33382,
											"end": 33434,
											"name": "tag",
											"source": -1,
											"value": "966"
										},
										{
											"begin": 33382,
											"end": 33434,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33369,
											"end": 33434,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33369,
											"end": 33434,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33363,
											"end": 33439,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33363,
											"end": 33439,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33363,
											"end": 33439,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33363,
											"end": 33439,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33446,
											"end": 33569,
											"name": "tag",
											"source": -1,
											"value": "967"
										},
										{
											"begin": 33446,
											"end": 33569,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33446,
											"end": 33569,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33540,
											"end": 33564,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "969"
										},
										{
											"begin": 33558,
											"end": 33563,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33540,
											"end": 33564,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "955"
										},
										{
											"begin": 33540,
											"end": 33564,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 33540,
											"end": 33564,
											"name": "tag",
											"source": -1,
											"value": "969"
										},
										{
											"begin": 33540,
											"end": 33564,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33527,
											"end": 33564,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33527,
											"end": 33564,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33521,
											"end": 33569,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33521,
											"end": 33569,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33521,
											"end": 33569,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33521,
											"end": 33569,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33576,
											"end": 33737,
											"name": "tag",
											"source": -1,
											"value": "767"
										},
										{
											"begin": 33576,
											"end": 33737,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33576,
											"end": 33737,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33675,
											"end": 33732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "971"
										},
										{
											"begin": 33726,
											"end": 33731,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33675,
											"end": 33732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "972"
										},
										{
											"begin": 33675,
											"end": 33732,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 33675,
											"end": 33732,
											"name": "tag",
											"source": -1,
											"value": "971"
										},
										{
											"begin": 33675,
											"end": 33732,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33662,
											"end": 33732,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33662,
											"end": 33732,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33656,
											"end": 33737,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33656,
											"end": 33737,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33656,
											"end": 33737,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33656,
											"end": 33737,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33744,
											"end": 33872,
											"name": "tag",
											"source": -1,
											"value": "972"
										},
										{
											"begin": 33744,
											"end": 33872,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33744,
											"end": 33872,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33843,
											"end": 33867,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "974"
										},
										{
											"begin": 33861,
											"end": 33866,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33843,
											"end": 33867,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "955"
										},
										{
											"begin": 33843,
											"end": 33867,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 33843,
											"end": 33867,
											"name": "tag",
											"source": -1,
											"value": "974"
										},
										{
											"begin": 33843,
											"end": 33867,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33830,
											"end": 33867,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33830,
											"end": 33867,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33824,
											"end": 33872,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33824,
											"end": 33872,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33824,
											"end": 33872,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33824,
											"end": 33872,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 33879,
											"end": 33995,
											"name": "tag",
											"source": -1,
											"value": "771"
										},
										{
											"begin": 33879,
											"end": 33995,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33879,
											"end": 33995,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 33966,
											"end": 33990,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "976"
										},
										{
											"begin": 33984,
											"end": 33989,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 33966,
											"end": 33990,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "857"
										},
										{
											"begin": 33966,
											"end": 33990,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 33966,
											"end": 33990,
											"name": "tag",
											"source": -1,
											"value": "976"
										},
										{
											"begin": 33966,
											"end": 33990,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33953,
											"end": 33990,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33953,
											"end": 33990,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33947,
											"end": 33995,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 33947,
											"end": 33995,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 33947,
											"end": 33995,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33947,
											"end": 33995,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34002,
											"end": 34123,
											"name": "tag",
											"source": -1,
											"value": "964"
										},
										{
											"begin": 34002,
											"end": 34123,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34002,
											"end": 34123,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34081,
											"end": 34118,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "978"
										},
										{
											"begin": 34112,
											"end": 34117,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 34081,
											"end": 34118,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "979"
										},
										{
											"begin": 34081,
											"end": 34118,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 34081,
											"end": 34118,
											"name": "tag",
											"source": -1,
											"value": "978"
										},
										{
											"begin": 34081,
											"end": 34118,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34068,
											"end": 34118,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34068,
											"end": 34118,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34062,
											"end": 34123,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 34062,
											"end": 34123,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34062,
											"end": 34123,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34062,
											"end": 34123,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34130,
											"end": 34238,
											"name": "tag",
											"source": -1,
											"value": "979"
										},
										{
											"begin": 34130,
											"end": 34238,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34130,
											"end": 34238,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34209,
											"end": 34233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "981"
										},
										{
											"begin": 34227,
											"end": 34232,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 34209,
											"end": 34233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "955"
										},
										{
											"begin": 34209,
											"end": 34233,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 34209,
											"end": 34233,
											"name": "tag",
											"source": -1,
											"value": "981"
										},
										{
											"begin": 34209,
											"end": 34233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34196,
											"end": 34233,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34196,
											"end": 34233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34190,
											"end": 34238,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 34190,
											"end": 34238,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34190,
											"end": 34238,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34190,
											"end": 34238,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34246,
											"end": 34514,
											"name": "tag",
											"source": -1,
											"value": "759"
										},
										{
											"begin": 34246,
											"end": 34514,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34311,
											"end": 34312,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "tag",
											"source": -1,
											"value": "983"
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34332,
											"end": 34338,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34329,
											"end": 34330,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34326,
											"end": 34339,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "985"
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34408,
											"end": 34409,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34403,
											"end": 34406,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 34399,
											"end": 34410,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34393,
											"end": 34411,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 34389,
											"end": 34390,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34384,
											"end": 34387,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 34380,
											"end": 34391,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34373,
											"end": 34412,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34354,
											"end": 34356,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 34351,
											"end": 34352,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34347,
											"end": 34357,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34342,
											"end": 34357,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34342,
											"end": 34357,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "983"
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "tag",
											"source": -1,
											"value": "985"
										},
										{
											"begin": 34318,
											"end": 34419,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34434,
											"end": 34440,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34431,
											"end": 34432,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34428,
											"end": 34441,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 34425,
											"end": 34427,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 34425,
											"end": 34427,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "986"
										},
										{
											"begin": 34425,
											"end": 34427,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34499,
											"end": 34500,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34490,
											"end": 34496,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 34485,
											"end": 34488,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 34481,
											"end": 34497,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34474,
											"end": 34501,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34425,
											"end": 34427,
											"name": "tag",
											"source": -1,
											"value": "986"
										},
										{
											"begin": 34425,
											"end": 34427,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34295,
											"end": 34514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34295,
											"end": 34514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34295,
											"end": 34514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34295,
											"end": 34514,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34295,
											"end": 34514,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34522,
											"end": 34619,
											"name": "tag",
											"source": -1,
											"value": "780"
										},
										{
											"begin": 34522,
											"end": 34619,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34522,
											"end": 34619,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34610,
											"end": 34612,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 34606,
											"end": 34613,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34601,
											"end": 34603,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 34594,
											"end": 34599,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34590,
											"end": 34604,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 34586,
											"end": 34614,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 34576,
											"end": 34614,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34576,
											"end": 34614,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34570,
											"end": 34619,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 34570,
											"end": 34619,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 34570,
											"end": 34619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34570,
											"end": 34619,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34627,
											"end": 34744,
											"name": "tag",
											"source": -1,
											"value": "662"
										},
										{
											"begin": 34627,
											"end": 34744,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34696,
											"end": 34720,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "989"
										},
										{
											"begin": 34714,
											"end": 34719,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34696,
											"end": 34720,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "744"
										},
										{
											"begin": 34696,
											"end": 34720,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 34696,
											"end": 34720,
											"name": "tag",
											"source": -1,
											"value": "989"
										},
										{
											"begin": 34696,
											"end": 34720,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34689,
											"end": 34694,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34686,
											"end": 34721,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34676,
											"end": 34678,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "990"
										},
										{
											"begin": 34676,
											"end": 34678,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34735,
											"end": 34736,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34732,
											"end": 34733,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34725,
											"end": 34737,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 34676,
											"end": 34678,
											"name": "tag",
											"source": -1,
											"value": "990"
										},
										{
											"begin": 34676,
											"end": 34678,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34670,
											"end": 34744,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34670,
											"end": 34744,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34751,
											"end": 34862,
											"name": "tag",
											"source": -1,
											"value": "666"
										},
										{
											"begin": 34751,
											"end": 34862,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34817,
											"end": 34838,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "992"
										},
										{
											"begin": 34832,
											"end": 34837,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34817,
											"end": 34838,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "748"
										},
										{
											"begin": 34817,
											"end": 34838,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 34817,
											"end": 34838,
											"name": "tag",
											"source": -1,
											"value": "992"
										},
										{
											"begin": 34817,
											"end": 34838,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34810,
											"end": 34815,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34807,
											"end": 34839,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34797,
											"end": 34799,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "993"
										},
										{
											"begin": 34797,
											"end": 34799,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 34853,
											"end": 34854,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 34850,
											"end": 34851,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34843,
											"end": 34855,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 34797,
											"end": 34799,
											"name": "tag",
											"source": -1,
											"value": "993"
										},
										{
											"begin": 34797,
											"end": 34799,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34791,
											"end": 34862,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34791,
											"end": 34862,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 34869,
											"end": 35016,
											"name": "tag",
											"source": -1,
											"value": "673"
										},
										{
											"begin": 34869,
											"end": 35016,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34953,
											"end": 34992,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "995"
										},
										{
											"begin": 34986,
											"end": 34991,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34953,
											"end": 34992,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "957"
										},
										{
											"begin": 34953,
											"end": 34992,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 34953,
											"end": 34992,
											"name": "tag",
											"source": -1,
											"value": "995"
										},
										{
											"begin": 34953,
											"end": 34992,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34946,
											"end": 34951,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 34943,
											"end": 34993,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 34933,
											"end": 34935,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "996"
										},
										{
											"begin": 34933,
											"end": 34935,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 35007,
											"end": 35008,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 35004,
											"end": 35005,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 34997,
											"end": 35009,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 34933,
											"end": 34935,
											"name": "tag",
											"source": -1,
											"value": "996"
										},
										{
											"begin": 34933,
											"end": 34935,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 34927,
											"end": 35016,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34927,
											"end": 35016,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 35023,
											"end": 35140,
											"name": "tag",
											"source": -1,
											"value": "677"
										},
										{
											"begin": 35023,
											"end": 35140,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 35092,
											"end": 35116,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "998"
										},
										{
											"begin": 35110,
											"end": 35115,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 35092,
											"end": 35116,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "857"
										},
										{
											"begin": 35092,
											"end": 35116,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 35092,
											"end": 35116,
											"name": "tag",
											"source": -1,
											"value": "998"
										},
										{
											"begin": 35092,
											"end": 35116,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 35085,
											"end": 35090,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 35082,
											"end": 35117,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 35072,
											"end": 35074,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "999"
										},
										{
											"begin": 35072,
											"end": 35074,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 35131,
											"end": 35132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 35128,
											"end": 35129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 35121,
											"end": 35133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 35072,
											"end": 35074,
											"name": "tag",
											"source": -1,
											"value": "999"
										},
										{
											"begin": 35072,
											"end": 35074,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 35066,
											"end": 35140,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35066,
											"end": 35140,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ACC_CAKE_PRECISION()": "7398b7ea",
							"BOOST_PRECISION()": "cc6db2da",
							"CAKE()": "4ca6ef28",
							"CAKE_RATE_TOTAL_PRECISION()": "e39e1323",
							"MASTERCHEF_CAKE_PER_BLOCK()": "39aae5ba",
							"MASTER_CHEF()": "edd8b170",
							"MASTER_PID()": "61621aaa",
							"MAX_BOOST_PRECISION()": "69b02128",
							"add(uint256,address,bool,bool)": "c507aeaa",
							"boostContract()": "dfcedeee",
							"burnAdmin()": "81bdf98c",
							"burnCake(bool)": "777a97f8",
							"cakePerBlock(bool)": "1e9b828b",
							"cakePerBlockToBurn()": "9dcc1b5f",
							"cakeRateToBurn()": "e0f91f6c",
							"cakeRateToRegularFarm()": "aa47bc8e",
							"cakeRateToSpecialFarm()": "1ce06d57",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getBoostMultiplier(address,uint256)": "033186e8",
							"harvestFromMasterChef()": "4f70b15a",
							"init(address)": "19ab453c",
							"lastBurnedBlock()": "78db4c34",
							"lpToken(uint256)": "78ed5d1f",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"pendingCake(uint256,address)": "1175a1dd",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"totalRegularAllocPoint()": "c40d337b",
							"totalSpecialAllocPoint()": "99d7e84a",
							"transferOwnership(address)": "f2fde38b",
							"updateBoostContract(address)": "9dd2fcc3",
							"updateBoostMultiplier(address,uint256,uint256)": "041a84c9",
							"updateBurnAdmin(address)": "0bb844bc",
							"updateCakeRate(uint256,uint256,uint256,bool)": "dc6363df",
							"updatePool(uint256)": "51eb05a6",
							"updateWhiteList(address,bool)": "ac1d0609",
							"userInfo(uint256,address)": "93f1a40b",
							"whiteList(address)": "372c12b1",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"_MASTER_CHEF\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_CAKE\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_MASTER_PID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_burnAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Init\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"}],\"name\":\"SetPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"boostContract\",\"type\":\"address\"}],\"name\":\"UpdateBoostContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMultiplier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"UpdateBoostMultiplier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"UpdateBurnAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"regularFarmRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"specialFarmRate\",\"type\":\"uint256\"}],\"name\":\"UpdateCakeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"name\":\"UpdatePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"UpdateWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_CAKE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOOST_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CAKE\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CAKE_RATE_TOTAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTERCHEF_CAKE_PER_BLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTER_CHEF\",\"outputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTER_PID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BOOST_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isRegular\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boostContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"burnCake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isRegular\",\"type\":\"bool\"}],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlockToBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakeRateToBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakeRateToRegularFarm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakeRateToSpecialFarm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getBoostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestFromMasterChef\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"dummyToken\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBurnedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pools\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRegularAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSpecialAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBoostContract\",\"type\":\"address\"}],\"name\":\"updateBoostContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateBoostMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"updateBurnAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularFarmRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_specialFarmRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"updateCakeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostedShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegular\",\"type\":\"bool\"}],\"internalType\":\"struct MasterChefV2.PoolInfo\",\"name\":\"pool\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"updateWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boostMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint256,address,bool,bool)\":{\"params\":{\"_allocPoint\":\"Number of allocation points for the new pool.\",\"_isRegular\":\"Whether the pool is regular or special. LP farms are always \\\"regular\\\". \\\"Special\\\" pools are\",\"_lpToken\":\"Address of the LP BEP-20 token.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation. only for CAKE distributions within PancakeSwap products.\"}},\"burnCake(bool)\":{\"params\":{\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"cakePerBlock(bool)\":{\"params\":{\"_isRegular\":\"If the pool belongs to regular or special.\"}},\"constructor\":{\"params\":{\"_CAKE\":\"The CAKE token contract address.\",\"_MASTER_CHEF\":\"The PancakeSwap MCV1 contract address.\",\"_MASTER_PID\":\"The pool id of the dummy pool on the MCV1.\",\"_burnAdmin\":\"The address of burn admin.\"}},\"deposit(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of LP tokens to deposit.\",\"_pid\":\"The id of the pool. See `poolInfo`.\"}},\"emergencyWithdraw(uint256)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\"}},\"getBoostMultiplier(address,uint256)\":{\"params\":{\"_pid\":\"The pool id.\",\"_user\":\"The user address.\"}},\"init(address)\":{\"params\":{\"dummyToken\":\"The address of the BEP-20 token to be deposited into MCV1.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingCake(uint256,address)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\",\"_user\":\"Address of the user.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set(uint256,uint256,bool)\":{\"params\":{\"_allocPoint\":\"New number of allocation points for the pool.\",\"_pid\":\"The id of the pool. See `poolInfo`.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBoostContract(address)\":{\"params\":{\"_newBoostContract\":\"The new address for handling all the share boosts.\"}},\"updateBoostMultiplier(address,uint256,uint256)\":{\"params\":{\"_newMultiplier\":\"New boost multiplier.\",\"_pid\":\"The pool id for the boost factor updates.\",\"_user\":\"The user address for boost factor updates.\"}},\"updateBurnAdmin(address)\":{\"params\":{\"_newAdmin\":\"The new burn admin address.\"}},\"updateCakeRate(uint256,uint256,uint256,bool)\":{\"params\":{\"_burnRate\":\"The % of CAKE to burn each block.\",\"_regularFarmRate\":\"The % of CAKE to regular pools each block.\",\"_specialFarmRate\":\"The % of CAKE to special pools each block.\",\"_withUpdate\":\"Whether call \\\"massUpdatePools\\\" operation.\"}},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"The id of the pool. See `poolInfo`.\"},\"returns\":{\"pool\":\"Returns the pool that was updated.\"}},\"updateWhiteList(address,bool)\":{\"params\":{\"_isValid\":\"The flag for valid or invalid.\",\"_user\":\"The address to be updated.\"}},\"withdraw(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount of LP tokens to withdraw.\",\"_pid\":\"The id of the pool. See `poolInfo`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BOOST_PRECISION()\":{\"notice\":\"Basic boost factor, none boosted user's boost factor\"},\"CAKE()\":{\"notice\":\"Address of CAKE contract.\"},\"CAKE_RATE_TOTAL_PRECISION()\":{\"notice\":\"total cake rate = toBurn + toRegular + toSpecial\"},\"MASTERCHEF_CAKE_PER_BLOCK()\":{\"notice\":\"40 cakes per block in MCV1\"},\"MASTER_CHEF()\":{\"notice\":\"Address of MCV1 contract.\"},\"MASTER_PID()\":{\"notice\":\"The pool id of the MCV2 mock token pool in MCV1.\"},\"MAX_BOOST_PRECISION()\":{\"notice\":\"Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION\"},\"add(uint256,address,bool,bool)\":{\"notice\":\"Add a new pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do.\"},\"boostContract()\":{\"notice\":\"The contract handles the share boosts.\"},\"burnAdmin()\":{\"notice\":\"The only address can withdraw all the burn CAKE.\"},\"burnCake(bool)\":{\"notice\":\"Send CAKE pending for burn to `burnAdmin`.\"},\"cakePerBlock(bool)\":{\"notice\":\"Calculates and returns the `amount` of CAKE per block.\"},\"cakePerBlockToBurn()\":{\"notice\":\"Calculates and returns the `amount` of CAKE per block to burn.\"},\"cakeRateToBurn()\":{\"notice\":\"The last block number of CAKE burn action being executed.CAKE distribute % for burn\"},\"cakeRateToRegularFarm()\":{\"notice\":\"CAKE distribute % for regular farm pool\"},\"cakeRateToSpecialFarm()\":{\"notice\":\"CAKE distribute % for special pools\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposit LP tokens to pool.\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Withdraw without caring about the rewards. EMERGENCY ONLY.\"},\"getBoostMultiplier(address,uint256)\":{\"notice\":\"Get user boost multiplier for specific pool id.\"},\"harvestFromMasterChef()\":{\"notice\":\"Harvests CAKE from `MASTER_CHEF` MCV1 and pool `MASTER_PID` to MCV2.\"},\"init(address)\":{\"notice\":\"Deposits a dummy token to `MASTER_CHEF` MCV1. This is required because MCV1 holds the minting permission of CAKE. It will transfer all the `dummyToken` in the tx sender address. The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint.\"},\"lpToken(uint256)\":{\"notice\":\"Address of the LP token for each MCV2 pool.\"},\"massUpdatePools()\":{\"notice\":\"Update cake reward for all the active pools. Be careful of gas spending!\"},\"pendingCake(uint256,address)\":{\"notice\":\"View function for checking pending CAKE rewards.\"},\"poolInfo(uint256)\":{\"notice\":\"Info of each MCV2 pool.\"},\"poolLength()\":{\"notice\":\"Returns the number of MCV2 pools.\"},\"set(uint256,uint256,bool)\":{\"notice\":\"Update the given pool's CAKE allocation point. Can only be called by the owner.\"},\"totalRegularAllocPoint()\":{\"notice\":\"Total regular allocation points. Must be the sum of all regular pools' allocation points.\"},\"totalSpecialAllocPoint()\":{\"notice\":\"Total special allocation points. Must be the sum of all special pools' allocation points.\"},\"updateBoostContract(address)\":{\"notice\":\"Update boost contract address and max boost factor.\"},\"updateBoostMultiplier(address,uint256,uint256)\":{\"notice\":\"Update user boost factor.\"},\"updateBurnAdmin(address)\":{\"notice\":\"Update burn admin address.\"},\"updateCakeRate(uint256,uint256,uint256,bool)\":{\"notice\":\"Update the % of CAKE distributions for burn, regular pools and special pools.\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables for the given pool.\"},\"updateWhiteList(address,bool)\":{\"notice\":\"Update whitelisted addresses for special pools.\"},\"userInfo(uint256,address)\":{\"notice\":\"Info of each pool user.\"},\"whiteList(address)\":{\"notice\":\"The whitelist of addresses allowed to deposit in special pools.\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraw LP tokens from pool.\"}},\"notice\":\"The (older) MasterChef contract gives out a constant number of CAKE tokens per block. It is the only address with minting rights for CAKE. The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token that is deposited into the MasterChef V1 (MCV1) contract. The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":\"MasterChefV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/Address.sol\":{\"keccak256\":\"0x42b040c5389fef91ea8637793e754d7c059a718275c9c12d6e21204b2a9b46e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d192b621b224665760aa1ac8e9ac75c576f1f0480c889001eadd9c56b742928d\",\"dweb:/ipfs/QmfZbQkahUYPjhKXMLjKQmqcTN7hWR8GiHqNqXCy7t43Tv\"]},\"Users/leilei/Downloads/MasterChefV2/Context.sol\":{\"keccak256\":\"0xb6232cf1921a36b072814b88b8508f2cf9890919fd9e678f1bdade789a0620cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e8724a72d8e6c11ebd6ccb727e01ee7fa68895ece92207c08dba57be21a8088\",\"dweb:/ipfs/QmaVZaBFmxmid2FYb6ERk5kPoNUij8xqyErUxDwhTLSryW\"]},\"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol\":{\"keccak256\":\"0x1b61cd8b4099457c5fe5e7826e7677b36e6e93405fb365462bae46345671c62f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://661db73b4867ded537e128ad992fc7dcf78350a8e1169f243b6a4dee467021d4\",\"dweb:/ipfs/Qmb8evyXsnLerisANuHrEkxV9To5hvVFpDPXb3gcEoe5KF\"]},\"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":{\"keccak256\":\"0x4a76e0ca0f221c1ea4f5811592c6c872ef34fa070c6991f77cf19ddd9045ce28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2739153ad67e939c3b22636fd31be2fe5d7864650f293d7eceeb611ea2e2a4fa\",\"dweb:/ipfs/QmeiiQtcq5X4khkSb6BUsG1ySwBJMeci3mkehqKBgTTjtp\"]},\"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":{\"keccak256\":\"0xf2a1c1864b2f16d88b3340d19d306087233024084c4c28b39072459ddb27e84e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://779e59d97f433fd6bea7c3e0107fe1d83e96872360ed1f57df85d3eaf05ccba6\",\"dweb:/ipfs/QmPVJ4cPNyHtVci7swAsQELz5vERViR597D3Ata1D7gE3D\"]},\"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":{\"keccak256\":\"0x19f4c9cfd5591d9a128be492b1e39db85db819ebd41dac0335d8826af33e24fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec73b52baad0f496f58da064772cf12d861b7e8ebc57bbdfd8443ad4df7cf2eb\",\"dweb:/ipfs/QmVVL4DSndT6xfksxSaEqQ2dbfEFH8YkqaEScEqhbJP7R4\"]},\"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":{\"keccak256\":\"0x2e1df665169560627c2a0dce65572e63de974bb41c759cdeed973cd570b4d7cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0785d9859de8fd9d90e10e085500fd9aceebd71bbb018f7959b5bd4de5759878\",\"dweb:/ipfs/QmPC3ockcg49rizy1DJiBErQLsH4FR7W4KRfcoxEMFAgPS\"]},\"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol\":{\"keccak256\":\"0x21e17839b929da845c6196ac3cbdf2e7b878b916fbe05b35ad94d4c9b3f5b09e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c10cfe172c74c4a790cd67f5afb19f218a2d669ba1ee255932499abfccf08e9\",\"dweb:/ipfs/QmUKAgVM9isTbuqc4boAqgZss2u3UzE7UaV4AvgjSdKhog\"]},\"Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol\":{\"keccak256\":\"0x04dd26824c4dac1ab2d111d8c2a0b779a5e92891693cdbdc169832628f7d150d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22b07b9cbe7cf6175ce573d2c1110b126c57ed9d507971e325103206c3e91cc\",\"dweb:/ipfs/QmUMLUacnkhFB9mnZJNMWm487EzT9XgQdZRFutoLvXy6sZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1887,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1999,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 264,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "burnAdmin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 267,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "boostContract",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 271,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "poolInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(PoolInfo)255_storage)dyn_storage"
							},
							{
								"astId": 275,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "lpToken",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_contract(IBEP20)2538)dyn_storage"
							},
							{
								"astId": 282,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)244_storage))"
							},
							{
								"astId": 287,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 293,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "totalRegularAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 296,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "totalSpecialAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 325,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "cakeRateToBurn",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 329,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "cakeRateToRegularFarm",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 333,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "cakeRateToSpecialFarm",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 335,
								"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
								"label": "lastBurnedBlock",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IBEP20)2538)dyn_storage": {
								"base": "t_contract(IBEP20)2538",
								"encoding": "dynamic_array",
								"label": "contract IBEP20[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)255_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)255_storage",
								"encoding": "dynamic_array",
								"label": "struct MasterChefV2.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)2538": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MasterChefV2.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)244_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)244_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)244_storage)"
							},
							"t_struct(PoolInfo)255_storage": {
								"encoding": "inplace",
								"label": "struct MasterChefV2.PoolInfo",
								"members": [
									{
										"astId": 246,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "accCakePerShare",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 248,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 250,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "allocPoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 252,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "totalBoostedShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 254,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "isRegular",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)244_storage": {
								"encoding": "inplace",
								"label": "struct MasterChefV2.UserInfo",
								"members": [
									{
										"astId": 239,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol:MasterChefV2",
										"label": "boostMultiplier",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"BOOST_PRECISION()": {
								"notice": "Basic boost factor, none boosted user's boost factor"
							},
							"CAKE()": {
								"notice": "Address of CAKE contract."
							},
							"CAKE_RATE_TOTAL_PRECISION()": {
								"notice": "total cake rate = toBurn + toRegular + toSpecial"
							},
							"MASTERCHEF_CAKE_PER_BLOCK()": {
								"notice": "40 cakes per block in MCV1"
							},
							"MASTER_CHEF()": {
								"notice": "Address of MCV1 contract."
							},
							"MASTER_PID()": {
								"notice": "The pool id of the MCV2 mock token pool in MCV1."
							},
							"MAX_BOOST_PRECISION()": {
								"notice": "Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION"
							},
							"add(uint256,address,bool,bool)": {
								"notice": "Add a new pool. Can only be called by the owner. DO NOT add the same LP token more than once. Rewards will be messed up if you do."
							},
							"boostContract()": {
								"notice": "The contract handles the share boosts."
							},
							"burnAdmin()": {
								"notice": "The only address can withdraw all the burn CAKE."
							},
							"burnCake(bool)": {
								"notice": "Send CAKE pending for burn to `burnAdmin`."
							},
							"cakePerBlock(bool)": {
								"notice": "Calculates and returns the `amount` of CAKE per block."
							},
							"cakePerBlockToBurn()": {
								"notice": "Calculates and returns the `amount` of CAKE per block to burn."
							},
							"cakeRateToBurn()": {
								"notice": "The last block number of CAKE burn action being executed.CAKE distribute % for burn"
							},
							"cakeRateToRegularFarm()": {
								"notice": "CAKE distribute % for regular farm pool"
							},
							"cakeRateToSpecialFarm()": {
								"notice": "CAKE distribute % for special pools"
							},
							"deposit(uint256,uint256)": {
								"notice": "Deposit LP tokens to pool."
							},
							"emergencyWithdraw(uint256)": {
								"notice": "Withdraw without caring about the rewards. EMERGENCY ONLY."
							},
							"getBoostMultiplier(address,uint256)": {
								"notice": "Get user boost multiplier for specific pool id."
							},
							"harvestFromMasterChef()": {
								"notice": "Harvests CAKE from `MASTER_CHEF` MCV1 and pool `MASTER_PID` to MCV2."
							},
							"init(address)": {
								"notice": "Deposits a dummy token to `MASTER_CHEF` MCV1. This is required because MCV1 holds the minting permission of CAKE. It will transfer all the `dummyToken` in the tx sender address. The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint."
							},
							"lpToken(uint256)": {
								"notice": "Address of the LP token for each MCV2 pool."
							},
							"massUpdatePools()": {
								"notice": "Update cake reward for all the active pools. Be careful of gas spending!"
							},
							"pendingCake(uint256,address)": {
								"notice": "View function for checking pending CAKE rewards."
							},
							"poolInfo(uint256)": {
								"notice": "Info of each MCV2 pool."
							},
							"poolLength()": {
								"notice": "Returns the number of MCV2 pools."
							},
							"set(uint256,uint256,bool)": {
								"notice": "Update the given pool's CAKE allocation point. Can only be called by the owner."
							},
							"totalRegularAllocPoint()": {
								"notice": "Total regular allocation points. Must be the sum of all regular pools' allocation points."
							},
							"totalSpecialAllocPoint()": {
								"notice": "Total special allocation points. Must be the sum of all special pools' allocation points."
							},
							"updateBoostContract(address)": {
								"notice": "Update boost contract address and max boost factor."
							},
							"updateBoostMultiplier(address,uint256,uint256)": {
								"notice": "Update user boost factor."
							},
							"updateBurnAdmin(address)": {
								"notice": "Update burn admin address."
							},
							"updateCakeRate(uint256,uint256,uint256,bool)": {
								"notice": "Update the % of CAKE distributions for burn, regular pools and special pools."
							},
							"updatePool(uint256)": {
								"notice": "Update reward variables for the given pool."
							},
							"updateWhiteList(address,bool)": {
								"notice": "Update whitelisted addresses for special pools."
							},
							"userInfo(uint256,address)": {
								"notice": "Info of each pool user."
							},
							"whiteList(address)": {
								"notice": "The whitelist of addresses allowed to deposit in special pools."
							},
							"withdraw(uint256,uint256)": {
								"notice": "Withdraw LP tokens from pool."
							}
						},
						"notice": "The (older) MasterChef contract gives out a constant number of CAKE tokens per block. It is the only address with minting rights for CAKE. The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token that is deposited into the MasterChef V1 (MCV1) contract. The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives.",
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/Context.sol\":{\"keccak256\":\"0xb6232cf1921a36b072814b88b8508f2cf9890919fd9e678f1bdade789a0620cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e8724a72d8e6c11ebd6ccb727e01ee7fa68895ece92207c08dba57be21a8088\",\"dweb:/ipfs/QmaVZaBFmxmid2FYb6ERk5kPoNUij8xqyErUxDwhTLSryW\"]},\"Users/leilei/Downloads/MasterChefV2/Ownable.sol\":{\"keccak256\":\"0x4a76e0ca0f221c1ea4f5811592c6c872ef34fa070c6991f77cf19ddd9045ce28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2739153ad67e939c3b22636fd31be2fe5d7864650f293d7eceeb611ea2e2a4fa\",\"dweb:/ipfs/QmeiiQtcq5X4khkSb6BUsG1ySwBJMeci3mkehqKBgTTjtp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1887,
								"contract": "Users/leilei/Downloads/MasterChefV2/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol\":{\"keccak256\":\"0xf2a1c1864b2f16d88b3340d19d306087233024084c4c28b39072459ddb27e84e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://779e59d97f433fd6bea7c3e0107fe1d83e96872360ed1f57df85d3eaf05ccba6\",\"dweb:/ipfs/QmPVJ4cPNyHtVci7swAsQELz5vERViR597D3Ata1D7gE3D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1999,
								"contract": "Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":599:4134  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":599:4134  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c7356d54cdb29035207b3b6b331cf4499687c6bb4f27824423791b9c013f97bd64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c7356d54cdb29035207b3b6b331cf4499687c6bb4f27824423791b9c013f97bd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 CALLDATALOAD PUSH14 0x54CDB29035207B3B6B331CF44996 DUP8 0xC6 0xBB 0x4F 0x27 DUP3 DIFFICULTY 0x23 PUSH26 0x1B9C013F97BD64736F6C634300060C0033000000000000000000 ",
							"sourceMap": "599:3535:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c7356d54cdb29035207b3b6b331cf4499687c6bb4f27824423791b9c013f97bd64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 CALLDATALOAD PUSH14 0x54CDB29035207B3B6B331CF44996 DUP8 0xC6 0xBB 0x4F 0x27 DUP3 DIFFICULTY 0x23 PUSH26 0x1B9C013F97BD64736F6C634300060C0033000000000000000000 ",
							"sourceMap": "599:3535:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 599,
									"end": 4134,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7356d54cdb29035207b3b6b331cf4499687c6bb4f27824423791b9c013f97bd64736f6c634300060c0033",
									".code": [
										{
											"begin": 599,
											"end": 4134,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 599,
											"end": 4134,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/Address.sol\":{\"keccak256\":\"0x42b040c5389fef91ea8637793e754d7c059a718275c9c12d6e21204b2a9b46e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d192b621b224665760aa1ac8e9ac75c576f1f0480c889001eadd9c56b742928d\",\"dweb:/ipfs/QmfZbQkahUYPjhKXMLjKQmqcTN7hWR8GiHqNqXCy7t43Tv\"]},\"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol\":{\"keccak256\":\"0x19f4c9cfd5591d9a128be492b1e39db85db819ebd41dac0335d8826af33e24fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec73b52baad0f496f58da064772cf12d861b7e8ebc57bbdfd8443ad4df7cf2eb\",\"dweb:/ipfs/QmVVL4DSndT6xfksxSaEqQ2dbfEFH8YkqaEScEqhbJP7R4\"]},\"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":{\"keccak256\":\"0x2e1df665169560627c2a0dce65572e63de974bb41c759cdeed973cd570b4d7cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0785d9859de8fd9d90e10e085500fd9aceebd71bbb018f7959b5bd4de5759878\",\"dweb:/ipfs/QmPC3ockcg49rizy1DJiBErQLsH4FR7W4KRfcoxEMFAgPS\"]},\"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol\":{\"keccak256\":\"0x21e17839b929da845c6196ac3cbdf2e7b878b916fbe05b35ad94d4c9b3f5b09e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c10cfe172c74c4a790cd67f5afb19f218a2d669ba1ee255932499abfccf08e9\",\"dweb:/ipfs/QmUKAgVM9isTbuqc4boAqgZss2u3UzE7UaV4AvgjSdKhog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":622:5200  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":622:5200  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c9abf7e692ed218346854a2690bca849fe81c565bdd8ad6d1e543de417ead3664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c9abf7e692ed218346854a2690bca849fe81c565bdd8ad6d1e543de417ead3664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP11 0xBF PUSH31 0x692ED218346854A2690BCA849FE81C565BDD8AD6D1E543DE417EAD3664736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "622:4578:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c9abf7e692ed218346854a2690bca849fe81c565bdd8ad6d1e543de417ead3664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP11 0xBF PUSH31 0x692ED218346854A2690BCA849FE81C565BDD8AD6D1E543DE417EAD3664736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "622:4578:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c9abf7e692ed218346854a2690bca849fe81c565bdd8ad6d1e543de417ead3664736f6c634300060c0033",
									".code": [
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/SafeMath.sol\":{\"keccak256\":\"0x2e1df665169560627c2a0dce65572e63de974bb41c759cdeed973cd570b4d7cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0785d9859de8fd9d90e10e085500fd9aceebd71bbb018f7959b5bd4de5759878\",\"dweb:/ipfs/QmPC3ockcg49rizy1DJiBErQLsH4FR7W4KRfcoxEMFAgPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol\":{\"keccak256\":\"0x21e17839b929da845c6196ac3cbdf2e7b878b916fbe05b35ad94d4c9b3f5b09e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c10cfe172c74c4a790cd67f5afb19f218a2d669ba1ee255932499abfccf08e9\",\"dweb:/ipfs/QmUKAgVM9isTbuqc4boAqgZss2u3UzE7UaV4AvgjSdKhog\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol": {
				"IMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingCake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"leaveStaking(uint256)": "1058d281",
							"pendingCake(uint256,address)": "1175a1dd",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol\":\"IMasterChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol\":{\"keccak256\":\"0x04dd26824c4dac1ab2d111d8c2a0b779a5e92891693cdbdc169832628f7d150d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22b07b9cbe7cf6175ce573d2c1110b126c57ed9d507971e325103206c3e91cc\",\"dweb:/ipfs/QmUMLUacnkhFB9mnZJNMWm487EzT9XgQdZRFutoLvXy6sZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/Address.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/Address.sol",
					"exportedSymbols": {
						"Address": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "784:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 18,
														"src": "981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 12,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1059:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1116:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1109:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "738:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 194,
									"src": "718:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2119:320:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2145:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2137:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2162:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 52,
														"src": "2291:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2309:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2309:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2067:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "2094:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2066:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:0"
									},
									"scope": 194,
									"src": "2048:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3269:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3284:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3277:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 194,
									"src": "3180:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3690:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3730:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3738:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3744:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3747:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3707:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3700:60:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3611:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3630:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3594:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3676:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3675:14:0"
									},
									"scope": 194,
									"src": "3573:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4242:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4295:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															143
														],
														"referencedDeclaration": 143,
														"src": "4259:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4252:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3773:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4160:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4176:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4195:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4159:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "4228:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4227:14:0"
									},
									"scope": 194,
									"src": "4129:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4742:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4768:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$194",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4760:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4760:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4760:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4760:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4785:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4760:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4792:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4752:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "4873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 138,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "4887:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4894:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 135,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "4850:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 141,
												"nodeType": "Return",
												"src": "4843:64:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4632:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4648:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4648:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4667:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4682:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4682:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4631:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4728:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4728:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4727:14:0"
									},
									"scope": 194,
									"src": "4601:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "5064:814:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "5093:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5082:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5082:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5102:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5074:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5074:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "5205:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5205:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "5219:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5219:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "5277:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "5246:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5246:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 169,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "5266:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5246:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5246:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5204:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 174,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 164,
													"src": "5296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "5353:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 178,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "5437:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5437:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5457:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5437:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 188,
																"nodeType": "Block",
																"src": "5809:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 185,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "5834:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 184,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5827:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5827:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 187,
																		"nodeType": "ExpressionStatement",
																		"src": "5827:20:0"
																	}
																]
															},
															"id": 189,
															"nodeType": "IfStatement",
															"src": "5433:429:0",
															"trueBody": {
																"id": 183,
																"nodeType": "Block",
																"src": "5460:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5644:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5666:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5695:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5689:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5689:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5670:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5738:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5742:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5734:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5734:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5755:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5727:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5727:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5727:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 166,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5695:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 166,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5742:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 182,
																		"nodeType": "InlineAssembly",
																		"src": "5635:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "5292:580:0",
												"trueBody": {
													"id": 177,
													"nodeType": "Block",
													"src": "5305:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 175,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "5326:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 155,
															"id": 176,
															"nodeType": "Return",
															"src": "5319:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "4952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "4968:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4968:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "4987:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4951:81:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5050:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5049:14:0"
									},
									"scope": 194,
									"src": "4920:958:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 195,
							"src": "126:5754:0"
						}
					],
					"src": "33:5847:0"
				},
				"id": 0
			},
			"Users/leilei/Downloads/MasterChefV2/Context.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/Context.sol",
					"exportedSymbols": {
						"Context": [
							217
						]
					},
					"id": 218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "660:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 201,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "677:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "677:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 200,
												"id": 203,
												"nodeType": "Return",
												"src": "670:17:1"
											}
										]
									},
									"documentation": null,
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "643:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "642:17:1"
									},
									"scope": 217,
									"src": "590:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "765:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 210,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "775:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$217",
														"typeString": "contract Context"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "775:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 212,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "915:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "915:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 209,
												"id": 214,
												"nodeType": "Return",
												"src": "908:15:1"
											}
										]
									},
									"documentation": null,
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "751:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "751:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:14:1"
									},
									"scope": 217,
									"src": "700:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 218,
							"src": "558:374:1"
						}
					],
					"src": "33:899:1"
				},
				"id": 1
			},
			"Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/MasterChefV2.sol",
					"exportedSymbols": {
						"MasterChefV2": [
							1879
						]
					},
					"id": 1880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 219,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"id": 220,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:33:2"
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 221,
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 1989,
							"src": "92:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 222,
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2438,
							"src": "116:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol",
							"file": "./ReentrancyGuard.sol",
							"id": 223,
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2029,
							"src": "141:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol",
							"file": "./interfaces/IBEP20.sol",
							"id": 224,
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2539,
							"src": "173:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 225,
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2242,
							"src": "207:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol",
							"file": "./interfaces/IMasterChef.sol",
							"id": 226,
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2591,
							"src": "233:38:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 228,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1988,
										"src": "729:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1988",
											"typeString": "contract Ownable"
										}
									},
									"id": 229,
									"nodeType": "InheritanceSpecifier",
									"src": "729:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 230,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2028,
										"src": "738:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$2028",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 231,
									"nodeType": "InheritanceSpecifier",
									"src": "738:15:2"
								}
							],
							"contractDependencies": [
								217,
								1988,
								2028
							],
							"contractKind": "contract",
							"documentation": {
								"id": 227,
								"nodeType": "StructuredDocumentation",
								"src": "273:431:2",
								"text": "@notice The (older) MasterChef contract gives out a constant number of CAKE tokens per block.\n It is the only address with minting rights for CAKE.\n The idea for this MasterChef V2 (MCV2) contract is therefore to be the owner of a dummy token\n that is deposited into the MasterChef V1 (MCV1) contract.\n The allocation point for this pool on MCV1 is the total allocation point for all pools that receive incentives."
							},
							"fullyImplemented": true,
							"id": 1879,
							"linearizedBaseContracts": [
								1879,
								2028,
								1988,
								217
							],
							"name": "MasterChefV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 234,
									"libraryName": {
										"contractScope": null,
										"id": 232,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2437,
										"src": "766:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2437",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "760:27:2",
									"typeName": {
										"id": 233,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "779:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 237,
									"libraryName": {
										"contractScope": null,
										"id": 235,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2241,
										"src": "798:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$2241",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "792:27:2",
									"typeName": {
										"contractScope": null,
										"id": 236,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2538,
										"src": "812:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2538",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "MasterChefV2.UserInfo",
									"id": 244,
									"members": [
										{
											"constant": false,
											"id": 239,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 244,
											"src": "1667:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 244,
											"src": "1691:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1691:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "boostMultiplier",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 244,
											"src": "1719:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1719:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1879,
									"src": "1641:108:2",
									"visibility": "public"
								},
								{
									"canonicalName": "MasterChefV2.PoolInfo",
									"id": 255,
									"members": [
										{
											"constant": false,
											"id": 246,
											"mutability": "mutable",
											"name": "accCakePerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 255,
											"src": "2651:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 245,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2651:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 248,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 255,
											"src": "2684:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 247,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2684:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 255,
											"src": "2717:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 249,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2717:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "totalBoostedShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 255,
											"src": "2745:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 251,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2745:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "isRegular",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 255,
											"src": "2780:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 253,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2780:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 1879,
									"src": "2625:176:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2807:37:2",
										"text": "@notice Address of MCV1 contract."
									},
									"functionSelector": "edd8b170",
									"id": 258,
									"mutability": "immutable",
									"name": "MASTER_CHEF",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "2849:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMasterChef_$2590",
										"typeString": "contract IMasterChef"
									},
									"typeName": {
										"contractScope": null,
										"id": 257,
										"name": "IMasterChef",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2590,
										"src": "2849:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMasterChef_$2590",
											"typeString": "contract IMasterChef"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2895:37:2",
										"text": "@notice Address of CAKE contract."
									},
									"functionSelector": "4ca6ef28",
									"id": 261,
									"mutability": "immutable",
									"name": "CAKE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "2937:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$2538",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 260,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2538,
										"src": "2937:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$2538",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2972:60:2",
										"text": "@notice The only address can withdraw all the burn CAKE."
									},
									"functionSelector": "81bdf98c",
									"id": 264,
									"mutability": "mutable",
									"name": "burnAdmin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3037:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 263,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3037:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "3067:50:2",
										"text": "@notice The contract handles the share boosts."
									},
									"functionSelector": "dfcedeee",
									"id": 267,
									"mutability": "mutable",
									"name": "boostContract",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3122:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 266,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3122:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3157:35:2",
										"text": "@notice Info of each MCV2 pool."
									},
									"functionSelector": "1526fe27",
									"id": 271,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3197:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
										"typeString": "struct MasterChefV2.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 269,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 255,
											"src": "3197:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
												"typeString": "struct MasterChefV2.PoolInfo"
											}
										},
										"id": 270,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3197:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage_ptr",
											"typeString": "struct MasterChefV2.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3229:55:2",
										"text": "@notice Address of the LP token for each MCV2 pool."
									},
									"functionSelector": "78ed5d1f",
									"id": 275,
									"mutability": "mutable",
									"name": "lpToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3289:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
										"typeString": "contract IBEP20[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 273,
											"name": "IBEP20",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 2538,
											"src": "3289:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IBEP20_$2538",
												"typeString": "contract IBEP20"
											}
										},
										"id": 274,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3289:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage_ptr",
											"typeString": "contract IBEP20[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "3319:35:2",
										"text": "@notice Info of each pool user."
									},
									"functionSelector": "93f1a40b",
									"id": 282,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3359:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo))"
									},
									"typeName": {
										"id": 281,
										"keyType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3367:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3359:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo))"
										},
										"valueType": {
											"id": 280,
											"keyType": {
												"id": 278,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3386:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3378:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
												"typeString": "mapping(address => struct MasterChefV2.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 279,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 244,
												"src": "3397:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
													"typeString": "struct MasterChefV2.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3429:75:2",
										"text": "@notice The whitelist of addresses allowed to deposit in special pools."
									},
									"functionSelector": "372c12b1",
									"id": 287,
									"mutability": "mutable",
									"name": "whiteList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3509:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 286,
										"keyType": {
											"id": 284,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3517:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3509:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 285,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3528:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "3557:60:2",
										"text": "@notice The pool id of the MCV2 mock token pool in MCV1."
									},
									"functionSelector": "61621aaa",
									"id": 290,
									"mutability": "immutable",
									"name": "MASTER_PID",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3622:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 289,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "3663:101:2",
										"text": "@notice Total regular allocation points. Must be the sum of all regular pools' allocation points."
									},
									"functionSelector": "c40d337b",
									"id": 293,
									"mutability": "mutable",
									"name": "totalRegularAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3769:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 292,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3769:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "3812:101:2",
										"text": "@notice Total special allocation points. Must be the sum of all special pools' allocation points."
									},
									"functionSelector": "99d7e84a",
									"id": 296,
									"mutability": "mutable",
									"name": "totalSpecialAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "3918:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 295,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3918:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "3961:39:2",
										"text": "@notice 40 cakes per block in MCV1"
									},
									"functionSelector": "39aae5ba",
									"id": 302,
									"mutability": "constant",
									"name": "MASTERCHEF_CAKE_PER_BLOCK",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4005:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4005:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_40000000000000000000_by_1",
											"typeString": "int_const 40000000000000000000"
										},
										"id": 301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3430",
											"id": 299,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4057:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_40_by_1",
												"typeString": "int_const 40"
											},
											"value": "40"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653138",
											"id": 300,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4062:4:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "4057:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40000000000000000000_by_1",
											"typeString": "int_const 40000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7398b7ea",
									"id": 305,
									"mutability": "constant",
									"name": "ACC_CAKE_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4072:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 303,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4072:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653138",
										"id": 304,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4117:4:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "4128:64:2",
										"text": "@notice Basic boost factor, none boosted user's boost factor"
									},
									"functionSelector": "cc6db2da",
									"id": 311,
									"mutability": "constant",
									"name": "BOOST_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4197:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 307,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4197:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "313030",
											"id": 308,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4239:3:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653130",
											"id": 309,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4245:4:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "4239:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "4255:85:2",
										"text": "@notice Hard limit for maxmium boost factor, it must greater than BOOST_PRECISION"
									},
									"functionSelector": "69b02128",
									"id": 317,
									"mutability": "constant",
									"name": "MAX_BOOST_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4345:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 313,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4345:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000_by_1",
											"typeString": "int_const 2000000000000"
										},
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "323030",
											"id": 314,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4391:3:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31653130",
											"id": 315,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4397:4:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000_by_1",
												"typeString": "int_const 10000000000"
											},
											"value": "1e10"
										},
										"src": "4391:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000_by_1",
											"typeString": "int_const 2000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4407:60:2",
										"text": "@notice total cake rate = toBurn + toRegular + toSpecial"
									},
									"functionSelector": "e39e1323",
									"id": 321,
									"mutability": "constant",
									"name": "CAKE_RATE_TOTAL_PRECISION",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4472:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4472:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31653132",
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4524:4:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000_by_1",
											"typeString": "int_const 1000000000000"
										},
										"value": "1e12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4534:112:2",
										"text": "@notice The last block number of CAKE burn action being executed.\n @notice CAKE distribute % for burn"
									},
									"functionSelector": "e0f91f6c",
									"id": 325,
									"mutability": "mutable",
									"name": "cakeRateToBurn",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4651:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 323,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4651:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "363433373530303030303030",
										"id": 324,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4683:12:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_643750000000_by_1",
											"typeString": "int_const 643750000000"
										},
										"value": "643750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "4701:51:2",
										"text": "@notice CAKE distribute % for regular farm pool"
									},
									"functionSelector": "aa47bc8e",
									"id": 329,
									"mutability": "mutable",
									"name": "cakeRateToRegularFarm",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4757:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4757:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3632383437323232323232",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4796:11:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_62847222222_by_1",
											"typeString": "int_const 62847222222"
										},
										"value": "62847222222"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "4813:47:2",
										"text": "@notice CAKE distribute % for special pools"
									},
									"functionSelector": "1ce06d57",
									"id": 333,
									"mutability": "mutable",
									"name": "cakeRateToSpecialFarm",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4865:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4865:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323933343032373737373738",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4904:12:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_293402777778_by_1",
											"typeString": "int_const 293402777778"
										},
										"value": "293402777778"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78db4c34",
									"id": 335,
									"mutability": "mutable",
									"name": "lastBurnedBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1879,
									"src": "4923:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4923:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 337,
									"name": "Init",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4970:2:2"
									},
									"src": "4960:13:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 347,
									"name": "AddPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "4992:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5013:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5033:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 342,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "5033:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": false,
												"mutability": "mutable",
												"name": "isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "5057:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5057:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4991:81:2"
									},
									"src": "4978:95:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 353,
									"name": "SetPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "5092:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "5113:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5091:41:2"
									},
									"src": "5078:55:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 363,
									"name": "UpdatePool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "5155:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "5176:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "5201:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "accCakePerShare",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "5219:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5154:89:2"
									},
									"src": "5138:106:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 371,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "5263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "5285:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "5306:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5262:59:2"
									},
									"src": "5249:73:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 379,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "5342:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "5364:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "5385:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5341:59:2"
									},
									"src": "5327:74:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 387,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "5430:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5430:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "5452:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "5473:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5429:59:2"
									},
									"src": "5406:83:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 395,
									"name": "UpdateCakeRate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "5516:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"indexed": false,
												"mutability": "mutable",
												"name": "regularFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "5534:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5534:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "specialFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "5559:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5515:68:2"
									},
									"src": "5495:89:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 401,
									"name": "UpdateBurnAdmin",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "5611:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "5637:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5610:52:2"
									},
									"src": "5589:74:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 407,
									"name": "UpdateWhiteList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "5690:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": false,
												"mutability": "mutable",
												"name": "isValid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 407,
												"src": "5712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5689:36:2"
									},
									"src": "5668:58:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 411,
									"name": "UpdateBoostContract",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"mutability": "mutable",
												"name": "boostContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "5757:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5756:31:2"
									},
									"src": "5731:57:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 421,
									"name": "UpdateBoostMultiplier",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "5821:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "5843:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5843:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "5856:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "5879:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5879:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5820:81:2"
									},
									"src": "5793:109:2"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "6290:131:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 433,
														"name": "MASTER_CHEF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "6300:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterChef_$2590",
															"typeString": "contract IMasterChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_MASTER_CHEF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "6314:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMasterChef_$2590",
															"typeString": "contract IMasterChef"
														}
													},
													"src": "6300:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterChef_$2590",
														"typeString": "contract IMasterChef"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "6300:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 437,
														"name": "CAKE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "6336:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2538",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_CAKE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "6343:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$2538",
															"typeString": "contract IBEP20"
														}
													},
													"src": "6336:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "6336:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 441,
														"name": "MASTER_PID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "6358:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_MASTER_PID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "6371:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6358:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "6358:24:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 445,
														"name": "burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "6392:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "6404:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6392:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "6392:22:2"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "5908:239:2",
										"text": "@param _MASTER_CHEF The PancakeSwap MCV1 contract address.\n @param _CAKE The CAKE token contract address.\n @param _MASTER_PID The pool id of the dummy pool on the MCV1.\n @param _burnAdmin The address of burn admin."
									},
									"id": 450,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_MASTER_CHEF",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 450,
												"src": "6173:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMasterChef_$2590",
													"typeString": "contract IMasterChef"
												},
												"typeName": {
													"contractScope": null,
													"id": 423,
													"name": "IMasterChef",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2590,
													"src": "6173:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMasterChef_$2590",
														"typeString": "contract IMasterChef"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_CAKE",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 450,
												"src": "6207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 425,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "6207:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "_MASTER_PID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 450,
												"src": "6229:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_burnAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 450,
												"src": "6258:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6163:119:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6290:0:2"
									},
									"scope": 1879,
									"src": "6152:269:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "6528:109:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 454,
																"name": "boostContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6546:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 455,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "6563:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6563:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6546:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f742074686520626f6f737420636f6e7472616374",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6575:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a155494b2ae1988f4d4766e30c7e243e43a8e464b9dace7f312568724be3e210",
																"typeString": "literal_string \"Ownable: caller is not the boost contract\""
															},
															"value": "Ownable: caller is not the boost contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a155494b2ae1988f4d4766e30c7e243e43a8e464b9dace7f312568724be3e210",
																"typeString": "literal_string \"Ownable: caller is not the boost contract\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6538:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6538:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "6538:81:2"
											},
											{
												"id": 461,
												"nodeType": "PlaceholderStatement",
												"src": "6629:1:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "6427:67:2",
										"text": " @dev Throws if caller is not the boost contract."
									},
									"id": 463,
									"name": "onlyBoostContract",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6525:2:2"
									},
									"src": "6499:138:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7089:454:2",
										"statements": [
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 523,
														"src": "7099:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7099:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 475,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7138:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7138:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 473,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "7117:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2477,
														"src": "7117:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7117:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7099:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 480,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "7167:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7178:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7167:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a2042616c616e6365206d757374206578636565642030",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7181:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e871e6ed6c66f490f6ac471b1b62f1c2f31fc35f4cf61165473eb8eae289983",
																"typeString": "literal_string \"MasterChefV2: Balance must exceed 0\""
															},
															"value": "MasterChefV2: Balance must exceed 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e871e6ed6c66f490f6ac471b1b62f1c2f31fc35f4cf61165473eb8eae289983",
																"typeString": "literal_string \"MasterChefV2: Balance must exceed 0\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7159:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "7159:60:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7257:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7257:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 493,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7277:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																		"typeString": "contract MasterChefV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																		"typeString": "contract MasterChefV2"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7269:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7269:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 495,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7284:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 486,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "7229:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2087,
														"src": "7229:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2538_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7229:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "7229:63:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 503,
																	"name": "MASTER_CHEF",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "7329:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMasterChef_$2590",
																		"typeString": "contract IMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMasterChef_$2590",
																		"typeString": "contract IMasterChef"
																	}
																],
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7321:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 501,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7321:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7321:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 505,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7343:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 498,
															"name": "dummyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "7302:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2507,
														"src": "7302:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7302:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "7302:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 511,
															"name": "MASTER_PID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7381:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 512,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7393:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 508,
															"name": "MASTER_CHEF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "7361:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2590",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2547,
														"src": "7361:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7361:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7361:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 515,
														"name": "lastBurnedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "7485:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 516,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7503:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7503:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7485:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "7485:30:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "7530:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7530:6:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "EmitStatement",
												"src": "7525:11:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "6643:389:2",
										"text": "@notice Deposits a dummy token to `MASTER_CHEF` MCV1. This is required because MCV1 holds the minting permission of CAKE.\n It will transfer all the `dummyToken` in the tx sender address.\n The allocation point for the dummy pool on MCV1 should be equal to the total amount of allocPoint.\n @param dummyToken The address of the BEP-20 token to be deposited into MCV1."
									},
									"functionSelector": "19ab453c",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 469,
											"modifierName": {
												"argumentTypes": null,
												"id": 468,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "7079:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7079:9:2"
										}
									],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "dummyToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "7051:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 465,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "7051:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7050:19:2"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7089:0:2"
									},
									"scope": 1879,
									"src": "7037:506:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "7657:40:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 530,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "7667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 531,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7675:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7675:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7667:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "7667:23:2"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "7549:45:2",
										"text": "@notice Returns the number of MCV2 pools."
									},
									"functionSelector": "081e3eda",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7618:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "pools",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "7642:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7641:15:2"
									},
									"scope": 1879,
									"src": "7599:98:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "8381:935:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 555,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "8426:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			],
																			"id": 554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8418:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 553,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8418:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8418:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 551,
																		"name": "_lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "8399:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2538",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2477,
																	"src": "8399:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8399:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8436:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8399:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f6e6520424550323020746f6b656e73",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8439:19:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_976fcd99e378855f54fbdeea01e87b7504114be86395037187d407afbd9302ac",
																"typeString": "literal_string \"None BEP20 tokens\""
															},
															"value": "None BEP20 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_976fcd99e378855f54fbdeea01e87b7504114be86395037187d407afbd9302ac",
																"typeString": "literal_string \"None BEP20 tokens\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8391:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8391:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "8391:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 564,
																"name": "_lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "8629:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$2538",
																	"typeString": "contract IBEP20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 565,
																"name": "CAKE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "8641:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$2538",
																	"typeString": "contract IBEP20"
																}
															},
															"src": "8629:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43414b4520746f6b656e2063616e277420626520616464656420746f206661726d20706f6f6c73",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8647:41:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2ccf1a37c5cb20db0f93d145e044584d74fad2f66ea7ad6b5bcc464c5fbaeb8",
																"typeString": "literal_string \"CAKE token can't be added to farm pools\""
															},
															"value": "CAKE token can't be added to farm pools"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2ccf1a37c5cb20db0f93d145e044584d74fad2f66ea7ad6b5bcc464c5fbaeb8",
																"typeString": "literal_string \"CAKE token can't be added to farm pools\""
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8621:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8621:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "8621:68:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 570,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 545,
													"src": "8704:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 575,
												"nodeType": "IfStatement",
												"src": "8700:59:2",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "8717:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 571,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "8731:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8731:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 573,
															"nodeType": "ExpressionStatement",
															"src": "8731:17:2"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 576,
													"name": "_isRegular",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 543,
													"src": "8773:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "8880:89:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 585,
																	"name": "totalSpecialAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "8894:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 588,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "8946:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 586,
																			"name": "totalSpecialAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "8919:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "8919:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8919:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8894:64:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 591,
															"nodeType": "ExpressionStatement",
															"src": "8894:64:2"
														}
													]
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "8769:200:2",
												"trueBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "8785:89:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 577,
																	"name": "totalRegularAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "8799:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 580,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "8851:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 578,
																			"name": "totalRegularAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "8824:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "8824:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8824:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8799:64:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "8799:64:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 597,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "8991:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 594,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "8978:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																"typeString": "contract IBEP20[] storage ref"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8978:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_IBEP20_$2538_$returns$__$",
															"typeString": "function (contract IBEP20)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8978:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "8978:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 604,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "9069:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 605,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "9107:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9107:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9146:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 608,
																	"name": "_isRegular",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "9168:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9207:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "9038:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$255_storage_ptr_$",
																	"typeString": "type(struct MasterChefV2.PoolInfo storage pointer)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"allocPoint",
																"lastRewardBlock",
																"accCakePerShare",
																"isRegular",
																"totalBoostedShare"
															],
															"nodeType": "FunctionCall",
															"src": "9038:181:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																"typeString": "struct MasterChefV2.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																"typeString": "struct MasterChefV2.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 600,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "9011:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9011:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$255_storage_$returns$__$",
															"typeString": "function (struct MasterChefV2.PoolInfo storage ref)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9011:218:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "9011:218:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9271:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 614,
																		"name": "lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "9252:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																			"typeString": "contract IBEP20[] storage ref"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9252:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2287,
																"src": "9252:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9252:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 619,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "9275:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 620,
															"name": "_lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "9288:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"id": 621,
															"name": "_isRegular",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "9298:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 613,
														"name": "AddPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "9244:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IBEP20_$2538_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,contract IBEP20,bool)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9244:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "EmitStatement",
												"src": "9239:70:2"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "7703:530:2",
										"text": "@notice Add a new pool. Can only be called by the owner.\n DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n @param _allocPoint Number of allocation points for the new pool.\n @param _lpToken Address of the LP BEP-20 token.\n @param _isRegular Whether the pool is regular or special. LP farms are always \"regular\". \"Special\" pools are\n @param _withUpdate Whether call \"massUpdatePools\" operation.\n only for CAKE distributions within PancakeSwap products."
									},
									"functionSelector": "c507aeaa",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 548,
											"modifierName": {
												"argumentTypes": null,
												"id": 547,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "8371:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8371:9:2"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8260:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8260:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8289:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 540,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "8289:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "_isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8314:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 625,
												"src": "8339:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8339:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8250:111:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8381:0:2"
									},
									"scope": 1879,
									"src": "8238:1078:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "9731:596:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 638,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "9870:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "9859:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$255_memory_ptr_$",
															"typeString": "function (uint256) returns (struct MasterChefV2.PoolInfo memory)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9859:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
														"typeString": "struct MasterChefV2.PoolInfo memory"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "9859:16:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 641,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "9890:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 646,
												"nodeType": "IfStatement",
												"src": "9886:59:2",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "9903:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 642,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "9917:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9917:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "ExpressionStatement",
															"src": "9917:17:2"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 647,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "9959:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 649,
														"indexExpression": {
															"argumentTypes": null,
															"id": 648,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "9968:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9959:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isRegular",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 254,
													"src": "9959:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "10111:120:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 665,
																	"name": "totalSpecialAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "10125:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 674,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "10208:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 668,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "10177:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																								"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 670,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 669,
																							"name": "_pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 628,
																							"src": "10186:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10177:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																							"typeString": "struct MasterChefV2.PoolInfo storage ref"
																						}
																					},
																					"id": 671,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 250,
																					"src": "10177:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 666,
																					"name": "totalSpecialAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "10150:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2287,
																				"src": "10150:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10150:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "10150:57:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10150:70:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10125:95:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "10125:95:2"
														}
													]
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "9955:276:2",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "9985:120:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 651,
																	"name": "totalRegularAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "9999:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 660,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "10082:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 654,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "10051:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																								"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																							}
																						},
																						"id": 656,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 655,
																							"name": "_pid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 628,
																							"src": "10060:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10051:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																							"typeString": "struct MasterChefV2.PoolInfo storage ref"
																						}
																					},
																					"id": 657,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 250,
																					"src": "10051:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 652,
																					"name": "totalRegularAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 293,
																					"src": "10024:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2287,
																				"src": "10024:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10024:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "10024:57:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10024:70:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9999:95:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "9999:95:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 680,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "10240:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																	"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 682,
															"indexExpression": {
																"argumentTypes": null,
																"id": 681,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "10249:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10240:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "10240:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "10268:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10240:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "10240:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 688,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "10302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 689,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "10308:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "SetPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "10294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10294:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "EmitStatement",
												"src": "10289:31:2"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "9322:289:2",
										"text": "@notice Update the given pool's CAKE allocation point. Can only be called by the owner.\n @param _pid The id of the pool. See `poolInfo`.\n @param _allocPoint New number of allocation points for the pool.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "64482f79",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 635,
											"modifierName": {
												"argumentTypes": null,
												"id": 634,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "9721:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9721:9:2"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "9638:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "9660:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9660:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "9689:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9689:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9628:83:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9731:0:2"
									},
									"scope": 1879,
									"src": "9616:711:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "10578:871:2",
										"statements": [
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 808,
														"src": "10588:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 703,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 255,
															"src": "10588:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																"typeString": "struct MasterChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 705,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "10611:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 707,
													"indexExpression": {
														"argumentTypes": null,
														"id": 706,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "10620:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10611:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
														"typeString": "struct MasterChefV2.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10588:37:2"
											},
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 808,
														"src": "10635:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_memory_ptr",
															"typeString": "struct MasterChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 709,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 244,
															"src": "10635:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "10658:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
															}
														},
														"id": 713,
														"indexExpression": {
															"argumentTypes": null,
															"id": 712,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "10667:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10658:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
															"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
														}
													},
													"id": 715,
													"indexExpression": {
														"argumentTypes": null,
														"id": 714,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "10673:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10658:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$244_storage",
														"typeString": "struct MasterChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10635:44:2"
											},
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "accCakePerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 808,
														"src": "10689:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 719,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "10715:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo memory"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accCakePerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 246,
													"src": "10715:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10689:46:2"
											},
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "lpSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 808,
														"src": "10745:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10745:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 726,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 724,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "10764:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo memory"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalBoostedShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 252,
													"src": "10764:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10745:41:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 727,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "10801:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10801:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 729,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "10816:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																	"typeString": "struct MasterChefV2.PoolInfo memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 248,
															"src": "10816:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10801:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 732,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "10840:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10852:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10840:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10801:52:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 781,
												"nodeType": "IfStatement",
												"src": "10797:446:2",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "10855:388:2",
													"statements": [
														{
															"assignments": [
																737
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 737,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 780,
																	"src": "10869:18:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 736,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10869:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 744,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 741,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "10907:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 248,
																		"src": "10907:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 738,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "10890:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10890:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2287,
																	"src": "10890:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10890:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10869:59:2"
														},
														{
															"assignments": [
																746
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 746,
																	"mutability": "mutable",
																	"name": "cakeReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 780,
																	"src": "10943:18:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 745,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10943:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 766,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"condition": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 759,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 704,
																						"src": "11052:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																							"typeString": "struct MasterChefV2.PoolInfo memory"
																						}
																					},
																					"id": 760,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isRegular",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 254,
																					"src": "11052:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"argumentTypes": null,
																					"id": 762,
																					"name": "totalSpecialAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "11094:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "11052:64:2",
																				"trueExpression": {
																					"argumentTypes": null,
																					"id": 761,
																					"name": "totalRegularAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 293,
																					"src": "11069:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 764,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11051:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 755,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "11013:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																						"typeString": "struct MasterChefV2.PoolInfo memory"
																					}
																				},
																				"id": 756,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 250,
																				"src": "11013:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 750,
																									"name": "pool",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 704,
																									"src": "10992:4:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																										"typeString": "struct MasterChefV2.PoolInfo memory"
																									}
																								},
																								"id": 751,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "isRegular",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 254,
																								"src": "10992:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 749,
																							"name": "cakePerBlock",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 880,
																							"src": "10979:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
																								"typeString": "function (bool) view returns (uint256)"
																							}
																						},
																						"id": 752,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10979:28:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 747,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 737,
																						"src": "10964:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2350,
																					"src": "10964:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10964:44:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2350,
																			"src": "10964:48:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10964:65:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2367,
																	"src": "10964:69:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10964:167:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10943:188:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "accCakePerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "11145:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 775,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "11222:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 772,
																							"name": "ACC_CAKE_PRECISION",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 305,
																							"src": "11198:18:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 770,
																							"name": "cakeReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 746,
																							"src": "11183:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2350,
																						"src": "11183:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11183:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2367,
																				"src": "11183:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11183:48:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 768,
																			"name": "accCakePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "11163:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "11163:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11163:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11145:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "11145:87:2"
														}
													]
												}
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 808,
														"src": "11253:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11253:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 793,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "11330:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 788,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "11312:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 789,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 696,
																			"src": "11319:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 787,
																		"name": "getBoostMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "11293:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11293:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 784,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "11277:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$244_memory_ptr",
																			"typeString": "struct MasterChefV2.UserInfo memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "11277:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2350,
																"src": "11277:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11277:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "11277:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11277:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11253:93:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 804,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "11426:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$244_memory_ptr",
																	"typeString": "struct MasterChefV2.UserInfo memory"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "11426:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 801,
																	"name": "ACC_CAKE_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "11402:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 798,
																			"name": "accCakePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "11381:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 796,
																			"name": "boostedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 783,
																			"src": "11363:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2350,
																		"src": "11363:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11363:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2367,
																"src": "11363:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11363:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2287,
														"src": "11363:62:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11363:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 702,
												"id": 807,
												"nodeType": "Return",
												"src": "11356:86:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "10333:158:2",
										"text": "@notice View function for checking pending CAKE rewards.\n @param _pid The id of the pool. See `poolInfo`.\n @param _user Address of the user."
									},
									"functionSelector": "1175a1dd",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "10517:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10517:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "10531:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10516:29:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "10569:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10569:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10568:9:2"
									},
									"scope": 1879,
									"src": "10496:953:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "11578:249:2",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 846,
														"src": "11588:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 815,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "11605:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "11605:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11588:32:2"
											},
											{
												"body": {
													"id": 844,
													"nodeType": "Block",
													"src": "11673:148:2",
													"statements": [
														{
															"assignments": [
																829
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 829,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 844,
																	"src": "11687:20:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																		"typeString": "struct MasterChefV2.PoolInfo"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 828,
																		"name": "PoolInfo",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 255,
																		"src": "11687:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																			"typeString": "struct MasterChefV2.PoolInfo"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 833,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 830,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "11710:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																		"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 832,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 831,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "11719:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11710:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																	"typeString": "struct MasterChefV2.PoolInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11687:36:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 834,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "11741:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																			"typeString": "struct MasterChefV2.PoolInfo memory"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "11741:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11760:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11741:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 843,
															"nodeType": "IfStatement",
															"src": "11737:74:2",
															"trueBody": {
																"id": 842,
																"nodeType": "Block",
																"src": "11763:48:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 839,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 819,
																					"src": "11792:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 838,
																				"name": "updatePool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1007,
																				"src": "11781:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$255_memory_ptr_$",
																					"typeString": "function (uint256) returns (struct MasterChefV2.PoolInfo memory)"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11781:15:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 841,
																		"nodeType": "ExpressionStatement",
																		"src": "11781:15:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 822,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "11652:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 823,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "11658:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11652:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"initializationExpression": {
													"assignments": [
														819
													],
													"declarations": [
														{
															"constant": false,
															"id": 819,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 845,
															"src": "11635:11:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 818,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11635:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 821,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11649:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11635:15:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "11666:5:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 825,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11668:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 827,
													"nodeType": "ExpressionStatement",
													"src": "11666:5:2"
												},
												"nodeType": "ForStatement",
												"src": "11630:191:2"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "11455:84:2",
										"text": "@notice Update cake reward for all the active pools. Be careful of gas spending!"
									},
									"functionSelector": "630b5ba1",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11568:2:2"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11578:0:2"
									},
									"scope": 1879,
									"src": "11544:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "12049:272:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 855,
													"name": "_isRegular",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 850,
													"src": "12063:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "12198:117:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 867,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "12212:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 873,
																			"name": "CAKE_RATE_TOTAL_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "12278:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 870,
																					"name": "cakeRateToSpecialFarm",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 333,
																					"src": "12251:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 868,
																					"name": "MASTERCHEF_CAKE_PER_BLOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "12221:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2350,
																				"src": "12221:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12221:52:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2367,
																		"src": "12221:56:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12221:83:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12212:92:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "12212:92:2"
														}
													]
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "12059:256:2",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "12075:117:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 856,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "12089:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 862,
																			"name": "CAKE_RATE_TOTAL_PRECISION",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "12155:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 859,
																					"name": "cakeRateToRegularFarm",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 329,
																					"src": "12128:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 857,
																					"name": "MASTERCHEF_CAKE_PER_BLOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 302,
																					"src": "12098:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2350,
																				"src": "12098:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12098:52:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2367,
																		"src": "12098:56:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12098:83:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12089:92:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 865,
															"nodeType": "ExpressionStatement",
															"src": "12089:92:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "11833:135:2",
										"text": "@notice Calculates and returns the `amount` of CAKE per block.\n @param _isRegular If the pool belongs to regular or special."
									},
									"functionSelector": "1e9b828b",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cakePerBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "_isRegular",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "11995:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11995:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11994:17:2"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "12033:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12032:16:2"
									},
									"scope": 1879,
									"src": "11973:348:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "12473:102:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 886,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12483:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 892,
																"name": "CAKE_RATE_TOTAL_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "12542:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 889,
																		"name": "cakeRateToBurn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "12522:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 887,
																		"name": "MASTERCHEF_CAKE_PER_BLOCK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "12492:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2350,
																	"src": "12492:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12492:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "12492:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12492:76:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12483:85:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "12483:85:2"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "12327:74:2",
										"text": "@notice Calculates and returns the `amount` of CAKE per block to burn."
									},
									"functionSelector": "9dcc1b5f",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cakePerBlockToBurn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12433:2:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "12457:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12456:16:2"
									},
									"scope": 1879,
									"src": "12406:169:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "12825:860:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 905,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "12835:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 906,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "12842:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 908,
														"indexExpression": {
															"argumentTypes": null,
															"id": 907,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "12851:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12842:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref"
														}
													},
													"src": "12835:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
														"typeString": "struct MasterChefV2.PoolInfo memory"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "12835:21:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 911,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "12870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "12870:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 913,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "12885:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																"typeString": "struct MasterChefV2.PoolInfo memory"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 248,
														"src": "12885:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12870:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "12866:813:2",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "12907:772:2",
													"statements": [
														{
															"assignments": [
																917
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 917,
																	"mutability": "mutable",
																	"name": "lpSupply",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1004,
																	"src": "12921:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 916,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12921:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 920,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 918,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "12940:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																		"typeString": "struct MasterChefV2.PoolInfo memory"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "12940:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12921:41:2"
														},
														{
															"assignments": [
																922
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 922,
																	"mutability": "mutable",
																	"name": "totalAllocPoint",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1004,
																	"src": "12976:23:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12976:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 929,
															"initialValue": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"condition": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 923,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "13003:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																					"typeString": "struct MasterChefV2.PoolInfo memory"
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "isRegular",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 254,
																			"src": "13003:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"argumentTypes": null,
																			"id": 926,
																			"name": "totalSpecialAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "13045:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13003:64:2",
																		"trueExpression": {
																			"argumentTypes": null,
																			"id": 925,
																			"name": "totalRegularAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "13020:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 928,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13002:66:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12976:92:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 930,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "13087:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13098:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13087:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 933,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "13103:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13121:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13103:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "13087:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 981,
															"nodeType": "IfStatement",
															"src": "13083:413:2",
															"trueBody": {
																"id": 980,
																"nodeType": "Block",
																"src": "13124:372:2",
																"statements": [
																	{
																		"assignments": [
																			938
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 938,
																				"mutability": "mutable",
																				"name": "multiplier",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 980,
																				"src": "13142:18:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 937,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13142:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 945,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 942,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 903,
																						"src": "13180:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																							"typeString": "struct MasterChefV2.PoolInfo memory"
																						}
																					},
																					"id": 943,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lastRewardBlock",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 248,
																					"src": "13180:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 939,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -4,
																						"src": "13163:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "13163:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2287,
																				"src": "13163:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13163:38:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13142:59:2"
																	},
																	{
																		"assignments": [
																			947
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 947,
																				"mutability": "mutable",
																				"name": "cakeReward",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 980,
																				"src": "13219:18:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 946,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13219:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 962,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 960,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 922,
																					"src": "13331:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 956,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 903,
																								"src": "13289:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																									"typeString": "struct MasterChefV2.PoolInfo memory"
																								}
																							},
																							"id": 957,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "allocPoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 250,
																							"src": "13289:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"expression": {
																												"argumentTypes": null,
																												"id": 951,
																												"name": "pool",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 903,
																												"src": "13268:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																													"typeString": "struct MasterChefV2.PoolInfo memory"
																												}
																											},
																											"id": 952,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "isRegular",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 254,
																											"src": "13268:14:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										],
																										"id": 950,
																										"name": "cakePerBlock",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 880,
																										"src": "13255:12:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
																											"typeString": "function (bool) view returns (uint256)"
																										}
																									},
																									"id": 953,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13255:28:2",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 948,
																									"name": "multiplier",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 938,
																									"src": "13240:10:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 949,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2350,
																								"src": "13240:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 954,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13240:44:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 955,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2350,
																						"src": "13240:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 958,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13240:65:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2367,
																				"src": "13240:69:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13240:124:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13219:145:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 963,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 903,
																					"src": "13382:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																						"typeString": "struct MasterChefV2.PoolInfo memory"
																					}
																				},
																				"id": 965,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "accCakePerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 246,
																				"src": "13382:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 974,
																										"name": "lpSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 917,
																										"src": "13470:8:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 971,
																												"name": "ACC_CAKE_PRECISION",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 305,
																												"src": "13446:18:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 969,
																												"name": "cakeReward",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 947,
																												"src": "13431:10:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 970,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "mul",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2350,
																											"src": "13431:14:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 972,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "13431:34:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 973,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "div",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2367,
																									"src": "13431:38:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 975,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13431:48:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 976,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13430:50:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 966,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 903,
																							"src": "13405:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																								"typeString": "struct MasterChefV2.PoolInfo memory"
																							}
																						},
																						"id": 967,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accCakePerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 246,
																						"src": "13405:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2270,
																					"src": "13405:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13405:76:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13382:99:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 979,
																		"nodeType": "ExpressionStatement",
																		"src": "13382:99:2"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 982,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "13509:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																			"typeString": "struct MasterChefV2.PoolInfo memory"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 248,
																	"src": "13509:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 985,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "13532:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13532:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13509:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ExpressionStatement",
															"src": "13509:35:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 989,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "13558:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																			"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 991,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 990,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "13567:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13558:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																		"typeString": "struct MasterChefV2.PoolInfo storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 992,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "13575:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																		"typeString": "struct MasterChefV2.PoolInfo memory"
																	}
																},
																"src": "13558:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																	"typeString": "struct MasterChefV2.PoolInfo storage ref"
																}
															},
															"id": 994,
															"nodeType": "ExpressionStatement",
															"src": "13558:21:2"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 996,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "13609:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 997,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "13615:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 998,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 248,
																		"src": "13615:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 999,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "13637:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1000,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "13647:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accCakePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 246,
																		"src": "13647:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 995,
																	"name": "UpdatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "13598:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13598:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1003,
															"nodeType": "EmitStatement",
															"src": "13593:75:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "12581:167:2",
										"text": "@notice Update reward variables for the given pool.\n @param _pid The id of the pool. See `poolInfo`.\n @return pool Returns the pool that was updated."
									},
									"functionSelector": "51eb05a6",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "12773:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12772:14:2"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "12803:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
													"typeString": "struct MasterChefV2.PoolInfo"
												},
												"typeName": {
													"contractScope": null,
													"id": 902,
													"name": "PoolInfo",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 255,
													"src": "12803:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
														"typeString": "struct MasterChefV2.PoolInfo"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12802:22:2"
									},
									"scope": 1879,
									"src": "12753:932:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "13915:1148:2",
										"statements": [
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1168,
														"src": "13925:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1017,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 255,
															"src": "13925:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																"typeString": "struct MasterChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1020,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "13959:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13948:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$255_memory_ptr_$",
															"typeString": "function (uint256) returns (struct MasterChefV2.PoolInfo memory)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13948:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
														"typeString": "struct MasterChefV2.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13925:39:2"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1168,
														"src": "13974:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
															"typeString": "struct MasterChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1023,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 244,
															"src": "13974:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1025,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "13998:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
															}
														},
														"id": 1027,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1026,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "14007:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13998:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
															"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
														}
													},
													"id": 1030,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1028,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "14013:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14013:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13998:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$244_storage",
														"typeString": "struct MasterChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13974:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1033,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "14056:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																		"typeString": "struct MasterChefV2.PoolInfo memory"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isRegular",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 254,
																"src": "14056:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1035,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "14074:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1038,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1036,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "14084:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14084:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14074:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14056:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a205468652061646472657373206973206e6f7420617661696c61626c6520746f206465706f73697420696e207468697320706f6f6c",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14109:68:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf2ab8708b99844dcd3a654e3377afbf20234d8ce8314dceaa75ea9414461dd",
																"typeString": "literal_string \"MasterChefV2: The address is not available to deposit in this pool\""
															},
															"value": "MasterChefV2: The address is not available to deposit in this pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf2ab8708b99844dcd3a654e3377afbf20234d8ce8314dceaa75ea9414461dd",
																"typeString": "literal_string \"MasterChefV2: The address is not available to deposit in this pool\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14035:152:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "14035:152:2"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1168,
														"src": "14198:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14198:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "14238:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14238:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1048,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "14250:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "14219:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14219:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14198:57:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1051,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "14270:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo storage pointer"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "14270:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14284:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14270:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "14266:93:2",
												"trueBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "14287:72:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1056,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "14319:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "14319:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1058,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "14331:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1059,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "14337:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1055,
																	"name": "settlePendingCake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1824,
																	"src": "14301:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14301:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1061,
															"nodeType": "ExpressionStatement",
															"src": "14301:47:2"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1064,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "14373:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14383:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14373:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "14369:458:2",
												"trueBody": {
													"id": 1133,
													"nodeType": "Block",
													"src": "14386:441:2",
													"statements": [
														{
															"assignments": [
																1068
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1068,
																	"mutability": "mutable",
																	"name": "before",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1133,
																	"src": "14400:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1067,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14400:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1078,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1075,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "14449:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			],
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14441:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1073,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14441:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14441:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1069,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "14417:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1071,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1070,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "14425:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14417:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2538",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2477,
																	"src": "14417:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14417:38:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14400:55:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1083,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "14500:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "14500:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1087,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "14520:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			],
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14512:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1085,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14512:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14512:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1089,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "14527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1079,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "14469:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1081,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1080,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "14477:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14469:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2538",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2087,
																	"src": "14469:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2538_$",
																		"typeString": "function (contract IBEP20,address,address,uint256)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14469:66:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1091,
															"nodeType": "ExpressionStatement",
															"src": "14469:66:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1092,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "14549:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1103,
																			"name": "before",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1068,
																			"src": "14602:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1099,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "14591:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																								"typeString": "contract MasterChefV2"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																								"typeString": "contract MasterChefV2"
																							}
																						],
																						"id": 1098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14583:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1097,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "14583:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14583:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1093,
																						"name": "lpToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 275,
																						"src": "14559:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																							"typeString": "contract IBEP20[] storage ref"
																						}
																					},
																					"id": 1095,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1094,
																						"name": "_pid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1010,
																						"src": "14567:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14559:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2538",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2477,
																				"src": "14559:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14559:38:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2287,
																		"src": "14559:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14559:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14549:60:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "14549:60:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1107,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "14623:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																			"typeString": "struct MasterChefV2.UserInfo storage pointer"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "14623:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1113,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "14653:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1110,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1024,
																				"src": "14637:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																					"typeString": "struct MasterChefV2.UserInfo storage pointer"
																				}
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 239,
																			"src": "14637:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "14637:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14637:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14623:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1116,
															"nodeType": "ExpressionStatement",
															"src": "14623:38:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1117,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "14719:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																			"typeString": "struct MasterChefV2.PoolInfo memory"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 252,
																	"src": "14719:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1128,
																					"name": "BOOST_PRECISION",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "14799:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1125,
																							"name": "multiplier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1044,
																							"src": "14783:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1123,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1012,
																							"src": "14771:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1124,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2350,
																						"src": "14771:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14771:23:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2367,
																				"src": "14771:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14771:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1120,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1018,
																				"src": "14744:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																					"typeString": "struct MasterChefV2.PoolInfo memory"
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "totalBoostedShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 252,
																			"src": "14744:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2270,
																		"src": "14744:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14744:72:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14719:97:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1132,
															"nodeType": "ExpressionStatement",
															"src": "14719:97:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1135,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "14837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo storage pointer"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "14837:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1151,
																"name": "ACC_CAKE_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "14947:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1147,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1018,
																			"src": "14908:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accCakePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 246,
																		"src": "14908:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1144,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "14887:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1141,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1044,
																						"src": "14871:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1138,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1024,
																							"src": "14855:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																								"typeString": "struct MasterChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "14855:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2350,
																					"src": "14855:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14855:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2367,
																			"src": "14855:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14855:48:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2350,
																	"src": "14855:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14855:74:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "14855:78:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14855:120:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14837:138:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "14837:138:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1155,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "14985:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1157,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1156,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "14994:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14985:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1158,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "15002:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo memory"
														}
													},
													"src": "14985:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
														"typeString": "struct MasterChefV2.PoolInfo storage ref"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "14985:21:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15030:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15030:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1164,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "15042:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1165,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "15048:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "15022:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15022:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "EmitStatement",
												"src": "15017:39:2"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "13691:149:2",
										"text": "@notice Deposit LP tokens to pool.\n @param _pid The id of the pool. See `poolInfo`.\n @param _amount Amount of LP tokens to deposit."
									},
									"functionSelector": "e2bbb158",
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1015,
											"modifierName": {
												"argumentTypes": null,
												"id": 1014,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2027,
												"src": "13902:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13902:12:2"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1169,
												"src": "13862:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13862:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1169,
												"src": "13876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13861:31:2"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13915:0:2"
									},
									"scope": 1879,
									"src": "13845:1218:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "15298:810:2",
										"statements": [
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1287,
														"src": "15308:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1179,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 255,
															"src": "15308:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																"typeString": "struct MasterChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1182,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "15342:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1181,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "15331:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$255_memory_ptr_$",
															"typeString": "function (uint256) returns (struct MasterChefV2.PoolInfo memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15331:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
														"typeString": "struct MasterChefV2.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15308:39:2"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1287,
														"src": "15357:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
															"typeString": "struct MasterChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1185,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 244,
															"src": "15357:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1187,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "15381:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
															}
														},
														"id": 1189,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1188,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "15390:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15381:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
															"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
														}
													},
													"id": 1192,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1190,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "15396:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15396:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15381:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$244_storage",
														"typeString": "struct MasterChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15357:50:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "15426:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																		"typeString": "struct MasterChefV2.UserInfo storage pointer"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 239,
																"src": "15426:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1197,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "15441:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15426:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a20496e73756666696369656e74",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15450:24:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91153f1e08c08b3649039f676200b5fdbb93ae05537216b5b196d3348e98ee68",
																"typeString": "literal_string \"withdraw: Insufficient\""
															},
															"value": "withdraw: Insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91153f1e08c08b3649039f676200b5fdbb93ae05537216b5b196d3348e98ee68",
																"typeString": "literal_string \"withdraw: Insufficient\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15418:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15418:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "15418:57:2"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1287,
														"src": "15486:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15486:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1205,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15526:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15526:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1207,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "15538:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1204,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "15507:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15507:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15486:57:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "15572:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15572:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1213,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "15584:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1214,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "15590:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1210,
														"name": "settlePendingCake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "15554:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15554:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "15554:47:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1217,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "15616:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15626:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15616:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "15612:141:2",
												"trueBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "15629:124:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1220,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "15643:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																			"typeString": "struct MasterChefV2.UserInfo storage pointer"
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "15643:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1226,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "15673:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1223,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1186,
																				"src": "15657:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																					"typeString": "struct MasterChefV2.UserInfo storage pointer"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 239,
																			"src": "15657:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2287,
																		"src": "15657:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15657:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15643:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "15643:38:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1234,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "15722:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "15722:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1236,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "15734:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1230,
																			"name": "lpToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "15695:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																				"typeString": "contract IBEP20[] storage ref"
																			}
																		},
																		"id": 1232,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1231,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "15703:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15695:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2538",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2062,
																	"src": "15695:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2538_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15695:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1238,
															"nodeType": "ExpressionStatement",
															"src": "15695:47:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1241,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "15763:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo storage pointer"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "15763:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1257,
																"name": "ACC_CAKE_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "15873:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1253,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "15834:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accCakePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 246,
																		"src": "15834:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1250,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "15813:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1247,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1203,
																						"src": "15797:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1244,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1186,
																							"src": "15781:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																								"typeString": "struct MasterChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1245,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "15781:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2350,
																					"src": "15781:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15781:27:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2367,
																			"src": "15781:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15781:48:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2350,
																	"src": "15781:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15781:74:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "15781:78:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15781:120:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15763:138:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "15763:138:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1261,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "15911:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																	"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1263,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1262,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "15920:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15911:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "15911:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1275,
																		"name": "BOOST_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "16024:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1272,
																				"name": "multiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1203,
																				"src": "16008:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1270,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1174,
																				"src": "15996:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2350,
																			"src": "15996:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15996:23:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2367,
																	"src": "15996:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15996:44:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1265,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "15946:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																			"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1267,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1266,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "15955:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15946:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																		"typeString": "struct MasterChefV2.PoolInfo storage ref"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "15946:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2287,
															"src": "15946:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15946:104:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15911:139:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "15911:139:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16075:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16075:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1283,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "16087:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1284,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "16093:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1280,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "16066:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16066:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "EmitStatement",
												"src": "16061:40:2"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "15069:153:2",
										"text": "@notice Withdraw LP tokens from pool.\n @param _pid The id of the pool. See `poolInfo`.\n @param _amount Amount of LP tokens to withdraw."
									},
									"functionSelector": "441a3e70",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1177,
											"modifierName": {
												"argumentTypes": null,
												"id": 1176,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2027,
												"src": "15285:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15285:12:2"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1288,
												"src": "15245:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15245:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1288,
												"src": "15259:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15259:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15244:31:2"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15298:0:2"
									},
									"scope": 1879,
									"src": "15227:881:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "16239:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1295,
															"name": "MASTER_PID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "16269:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16281:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1292,
															"name": "MASTER_CHEF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "16249:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMasterChef_$2590",
																"typeString": "contract IMasterChef"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2547,
														"src": "16249:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256) external"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16249:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "16249:34:2"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "16114:80:2",
										"text": "@notice Harvests CAKE from `MASTER_CHEF` MCV1 and pool `MASTER_PID` to MCV2."
									},
									"functionSelector": "4f70b15a",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestFromMasterChef",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16229:2:2"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16239:0:2"
									},
									"scope": 1879,
									"src": "16199:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "16490:614:2",
										"statements": [
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1386,
														"src": "16500:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
															"typeString": "struct MasterChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1308,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 255,
															"src": "16500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																"typeString": "struct MasterChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1310,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "16524:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1312,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1311,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "16533:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16524:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
														"typeString": "struct MasterChefV2.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16500:38:2"
											},
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1386,
														"src": "16548:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
															"typeString": "struct MasterChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1314,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 244,
															"src": "16548:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1316,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "16572:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
															}
														},
														"id": 1318,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1317,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "16581:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16572:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
															"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
														}
													},
													"id": 1321,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1319,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "16587:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16587:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16572:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$244_storage",
														"typeString": "struct MasterChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16548:50:2"
											},
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1386,
														"src": "16609:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16609:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1325,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "16626:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
															"typeString": "struct MasterChefV2.UserInfo storage pointer"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 239,
													"src": "16626:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16609:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1328,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "16647:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo storage pointer"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "16647:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16661:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16647:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "16647:15:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1334,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "16672:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo storage pointer"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "16672:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16690:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16672:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "16672:19:2"
											},
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1386,
														"src": "16701:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16701:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1351,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "16778:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1345,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "16755:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "16755:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1347,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "16767:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1344,
																		"name": "getBoostMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "16736:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16736:36:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1342,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "16725:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2350,
																"src": "16725:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16725:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "16725:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16725:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16701:93:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1354,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "16804:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																"typeString": "struct MasterChefV2.PoolInfo storage pointer"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "16804:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1357,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "16829:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																		"typeString": "struct MasterChefV2.PoolInfo storage pointer"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBoostedShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "16829:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1359,
																"name": "boostedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "16854:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16829:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16914:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "16829:86:2",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1364,
																	"name": "boostedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "16897:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1361,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "16870:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																			"typeString": "struct MasterChefV2.PoolInfo storage pointer"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBoostedShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 252,
																	"src": "16870:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2287,
																"src": "16870:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16870:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16804:111:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "16804:111:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "17020:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17020:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1376,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "17032:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1370,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "16993:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IBEP20_$2538_$dyn_storage",
																	"typeString": "contract IBEP20[] storage ref"
																}
															},
															"id": 1372,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1371,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "17001:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16993:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2062,
														"src": "16993:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2538_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16993:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "16993:46:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "17072:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17072:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1382,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "17084:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1383,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "17090:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1379,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "17054:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17054:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "EmitStatement",
												"src": "17049:48:2"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "16296:126:2",
										"text": "@notice Withdraw without caring about the rewards. EMERGENCY ONLY.\n @param _pid The id of the pool. See `poolInfo`."
									},
									"functionSelector": "5312ea8e",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1306,
											"modifierName": {
												"argumentTypes": null,
												"id": 1305,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2027,
												"src": "16477:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16477:12:2"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1387,
												"src": "16454:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16453:14:2"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16490:0:2"
									},
									"scope": 1879,
									"src": "16427:677:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "17291:337:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1395,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1390,
													"src": "17305:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "17301:59:2",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "17318:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1396,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "17332:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17332:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "17332:17:2"
														}
													]
												}
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1427,
														"src": "17370:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17370:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1406,
															"name": "lastBurnedBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "17408:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1403,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "17391:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17391:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2287,
														"src": "17391:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17391:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17370:54:2"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "pendingCakeToBurn",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1427,
														"src": "17434:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17434:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1416,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1413,
																"name": "cakePerBlockToBurn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "17477:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17477:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1411,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "17462:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2350,
														"src": "17462:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17462:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17434:64:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1418,
															"name": "burnAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "17552:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1419,
															"name": "pendingCakeToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "17563:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "17538:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17538:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "17538:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1422,
														"name": "lastBurnedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "17591:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1423,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "17609:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17609:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17591:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "17591:30:2"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "17110:123:2",
										"text": "@notice Send CAKE pending for burn to `burnAdmin`.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "777a97f8",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1393,
											"modifierName": {
												"argumentTypes": null,
												"id": 1392,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "17281:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17281:9:2"
										}
									],
									"name": "burnCake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1428,
												"src": "17256:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17256:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17255:18:2"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17291:0:2"
									},
									"scope": 1879,
									"src": "17238:390:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "18176:702:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1443,
																		"name": "_burnRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "18207:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18219:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18207:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1446,
																		"name": "_regularFarmRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "18224:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18243:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "18224:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "18207:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1450,
																	"name": "_specialFarmRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "18248:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18267:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18248:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18207:61:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a2043616b652072617465206d7573742062652067726561746572207468616e2030",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18282:48:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_850be178e7742e3c54a83ec12e40096a8f2bcd4dd5adaa8bfb65eb65272c6819",
																"typeString": "literal_string \"MasterChefV2: Cake rate must be greater than 0\""
															},
															"value": "MasterChefV2: Cake rate must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_850be178e7742e3c54a83ec12e40096a8f2bcd4dd5adaa8bfb65eb65272c6819",
																"typeString": "literal_string \"MasterChefV2: Cake rate must be greater than 0\""
															}
														],
														"id": 1442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18186:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18186:154:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "18186:154:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1463,
																		"name": "_specialFarmRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "18407:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1460,
																				"name": "_regularFarmRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1433,
																				"src": "18385:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1458,
																				"name": "_burnRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1431,
																				"src": "18371:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2270,
																			"src": "18371:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18371:31:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2270,
																	"src": "18371:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18371:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1465,
																"name": "CAKE_RATE_TOTAL_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "18428:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18371:82:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a20546f74616c2072617465206d7573742062652031653132",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18467:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd89067f705df9d88fd554ce91e044207514dd66a74f059fa845e70c80789acb",
																"typeString": "literal_string \"MasterChefV2: Total rate must be 1e12\""
															},
															"value": "MasterChefV2: Total rate must be 1e12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd89067f705df9d88fd554ce91e044207514dd66a74f059fa845e70c80789acb",
																"typeString": "literal_string \"MasterChefV2: Total rate must be 1e12\""
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18350:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18350:166:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "18350:166:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1470,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1437,
													"src": "18530:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "18526:59:2",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "18543:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1471,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "18557:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18557:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "18557:17:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18651:5:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1476,
														"name": "burnCake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "18642:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18642:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "18642:15:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1480,
														"name": "cakeRateToBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "18668:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1481,
														"name": "_burnRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "18685:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18668:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "18668:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1484,
														"name": "cakeRateToRegularFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "18704:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1485,
														"name": "_regularFarmRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "18728:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18704:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "18704:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1488,
														"name": "cakeRateToSpecialFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "18754:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1489,
														"name": "_specialFarmRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "18778:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18754:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "18754:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1493,
															"name": "_burnRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "18825:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1494,
															"name": "_regularFarmRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "18836:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1495,
															"name": "_specialFarmRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "18854:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"name": "UpdateCakeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "18810:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18810:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "EmitStatement",
												"src": "18805:66:2"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "17634:367:2",
										"text": "@notice Update the % of CAKE distributions for burn, regular pools and special pools.\n @param _burnRate The % of CAKE to burn each block.\n @param _regularFarmRate The % of CAKE to regular pools each block.\n @param _specialFarmRate The % of CAKE to special pools each block.\n @param _withUpdate Whether call \"massUpdatePools\" operation."
									},
									"functionSelector": "dc6363df",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1440,
											"modifierName": {
												"argumentTypes": null,
												"id": 1439,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "18166:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18166:9:2"
										}
									],
									"name": "updateCakeRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "_burnRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "18039:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_regularFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "18066:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18066:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "_specialFarmRate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "18100:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1499,
												"src": "18134:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18134:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18029:127:2"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18176:0:2"
									},
									"scope": 1879,
									"src": "18006:872:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "19043:331:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1508,
																"name": "_newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "19061:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19082:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19074:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19074:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19074:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19061:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a204275726e2061646d696e2061646472657373206d7573742062652076616c6964",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19086:48:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f7126bc58b6d190571ba80b7e1bffe1539150c93ac77a272ccfd7fe8d4e5e3d",
																"typeString": "literal_string \"MasterChefV2: Burn admin address must be valid\""
															},
															"value": "MasterChefV2: Burn admin address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f7126bc58b6d190571ba80b7e1bffe1539150c93ac77a272ccfd7fe8d4e5e3d",
																"typeString": "literal_string \"MasterChefV2: Burn admin address must be valid\""
															}
														],
														"id": 1507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19053:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19053:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "19053:82:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1518,
																"name": "_newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "19153:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1519,
																"name": "burnAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "19166:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19153:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a204275726e2061646d696e2061646472657373206973207468652073616d6520776974682063757272656e742061646472657373",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19177:67:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1a85cca0b65931ae11d9a9c69d582eaefd2a48397806bafaa103d3234b1f148",
																"typeString": "literal_string \"MasterChefV2: Burn admin address is the same with current address\""
															},
															"value": "MasterChefV2: Burn admin address is the same with current address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1a85cca0b65931ae11d9a9c69d582eaefd2a48397806bafaa103d3234b1f148",
																"typeString": "literal_string \"MasterChefV2: Burn admin address is the same with current address\""
															}
														],
														"id": 1517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19145:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19145:100:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "19145:100:2"
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "_oldAdmin",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1537,
														"src": "19255:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19255:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"argumentTypes": null,
													"id": 1526,
													"name": "burnAdmin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "19275:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19255:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1528,
														"name": "burnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "19294:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1529,
														"name": "_newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "19306:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19294:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "19294:21:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1533,
															"name": "_oldAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "19346:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1534,
															"name": "_newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "19357:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1532,
														"name": "UpdateBurnAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "19330:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19330:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "19325:42:2"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "18884:91:2",
										"text": "@notice Update burn admin address.\n @param _newAdmin The new burn admin address."
									},
									"functionSelector": "0bb844bc",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1505,
											"modifierName": {
												"argumentTypes": null,
												"id": 1504,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "19033:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19033:9:2"
										}
									],
									"name": "updateBurnAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_newAdmin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1538,
												"src": "19005:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19005:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19004:19:2"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19043:0:2"
									},
									"scope": 1879,
									"src": "18980:394:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "19621:184:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1549,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "19639:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19656:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19648:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19648:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19648:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19639:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a20546865207768697465206c6973742061646472657373206d7573742062652076616c6964",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19660:52:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8998f8c25e237e9c3f209eb4bdfa5fa21254f7675c63bdc3f9041a52d28d57a",
																"typeString": "literal_string \"MasterChefV2: The white list address must be valid\""
															},
															"value": "MasterChefV2: The white list address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8998f8c25e237e9c3f209eb4bdfa5fa21254f7675c63bdc3f9041a52d28d57a",
																"typeString": "literal_string \"MasterChefV2: The white list address must be valid\""
															}
														],
														"id": 1548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19631:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19631:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "19631:82:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1558,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "19724:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1560,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1559,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "19734:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19724:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1561,
														"name": "_isValid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1543,
														"src": "19743:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19724:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "19724:27:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1565,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "19782:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1566,
															"name": "_isValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "19789:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1564,
														"name": "UpdateWhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "19766:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19766:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "EmitStatement",
												"src": "19761:37:2"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "19380:162:2",
										"text": "@notice Update whitelisted addresses for special pools.\n @param _user The address to be updated.\n @param _isValid The flag for valid or invalid."
									},
									"functionSelector": "ac1d0609",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1546,
											"modifierName": {
												"argumentTypes": null,
												"id": 1545,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "19611:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19611:9:2"
										}
									],
									"name": "updateWhiteList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1570,
												"src": "19572:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "_isValid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1570,
												"src": "19587:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19587:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19571:30:2"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19621:0:2"
									},
									"scope": 1879,
									"src": "19547:258:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "20038:284:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1579,
																	"name": "_newBoostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "20069:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20098:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20090:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1580,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20090:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20090:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "20069:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1585,
																	"name": "_newBoostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "20104:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1586,
																	"name": "boostContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "20125:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "20104:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20069:69:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a204e657720626f6f737420636f6e74726163742061646472657373206d7573742062652076616c6964",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20152:56:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5854ff7ab07ab5c0d2bd88732b31760ab16e485efcddc6d588266ef66620f59",
																"typeString": "literal_string \"MasterChefV2: New boost contract address must be valid\""
															},
															"value": "MasterChefV2: New boost contract address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5854ff7ab07ab5c0d2bd88732b31760ab16e485efcddc6d588266ef66620f59",
																"typeString": "literal_string \"MasterChefV2: New boost contract address must be valid\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20048:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20048:170:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "20048:170:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1592,
														"name": "boostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "20229:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1593,
														"name": "_newBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "20245:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20229:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "20229:33:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1597,
															"name": "_newBoostContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "20297:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1596,
														"name": "UpdateBoostContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "20277:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20277:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "EmitStatement",
												"src": "20272:43:2"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "19811:147:2",
										"text": "@notice Update boost contract address and max boost factor.\n @param _newBoostContract The new address for handling all the share boosts."
									},
									"functionSelector": "9dd2fcc3",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1576,
											"modifierName": {
												"argumentTypes": null,
												"id": 1575,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "20028:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20028:9:2"
										}
									],
									"name": "updateBoostContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "_newBoostContract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "19992:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19992:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19991:27:2"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20038:0:2"
									},
									"scope": 1879,
									"src": "19963:359:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "20702:1114:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1616,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "20720:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20737:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20729:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1617,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20729:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20729:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20720:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a2054686520757365722061646472657373206d7573742062652076616c6964",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20741:46:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef328ab94d8f07a368bd2efd62ca9831bf66226653333f08c0d55a7621e1d33",
																"typeString": "literal_string \"MasterChefV2: The user address must be valid\""
															},
															"value": "MasterChefV2: The user address must be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef328ab94d8f07a368bd2efd62ca9831bf66226653333f08c0d55a7621e1d33",
																"typeString": "literal_string \"MasterChefV2: The user address must be valid\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20712:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20712:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "20712:76:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1626,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "20806:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																		"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1628,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1627,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "20815:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20806:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																	"typeString": "struct MasterChefV2.PoolInfo storage ref"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isRegular",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 254,
															"src": "20806:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a204f6e6c7920726567756c6172206661726d20636f756c6420626520626f6f73746564",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20832:50:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af9796392d95e82faf33c1d638784ed58f9d4d17a437b2e4403b7ba31e13f2fc",
																"typeString": "literal_string \"MasterChefV2: Only regular farm could be boosted\""
															},
															"value": "MasterChefV2: Only regular farm could be boosted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af9796392d95e82faf33c1d638784ed58f9d4d17a437b2e4403b7ba31e13f2fc",
																"typeString": "literal_string \"MasterChefV2: Only regular farm could be boosted\""
															}
														],
														"id": 1625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20798:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20798:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "20798:85:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1634,
																	"name": "_newMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "20914:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1635,
																	"name": "BOOST_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "20932:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20914:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1637,
																	"name": "_newMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "20951:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1638,
																	"name": "MAX_BOOST_PRECISION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "20969:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20951:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20914:74:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d61737465724368656656323a20496e76616c6964206e657720626f6f7374206d756c7469706c696572",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21002:44:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a0a776de9259c923b9f9f115c9a020fc45e7016e0eee4bd233c4390c7f5a644",
																"typeString": "literal_string \"MasterChefV2: Invalid new boost multiplier\""
															},
															"value": "MasterChefV2: Invalid new boost multiplier"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a0a776de9259c923b9f9f115c9a020fc45e7016e0eee4bd233c4390c7f5a644",
																"typeString": "literal_string \"MasterChefV2: Invalid new boost multiplier\""
															}
														],
														"id": 1633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20893:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20893:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "20893:163:2"
											},
											{
												"assignments": [
													1645
												],
												"declarations": [
													{
														"constant": false,
														"id": 1645,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1740,
														"src": "21067:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1644,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 255,
															"src": "21067:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_storage_ptr",
																"typeString": "struct MasterChefV2.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1649,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1647,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "21101:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1646,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "21090:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_struct$_PoolInfo_$255_memory_ptr_$",
															"typeString": "function (uint256) returns (struct MasterChefV2.PoolInfo memory)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21090:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
														"typeString": "struct MasterChefV2.PoolInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21067:39:2"
											},
											{
												"assignments": [
													1651
												],
												"declarations": [
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1740,
														"src": "21116:21:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
															"typeString": "struct MasterChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1650,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 244,
															"src": "21116:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1652,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "21140:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
															}
														},
														"id": 1654,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1653,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "21149:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21140:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
															"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
														}
													},
													"id": 1656,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1655,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "21155:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21140:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$244_storage",
														"typeString": "struct MasterChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21116:45:2"
											},
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "prevMultiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1740,
														"src": "21172:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1664,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1661,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "21216:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1662,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "21223:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1660,
														"name": "getBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "21197:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21197:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21172:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1666,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "21256:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1667,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "21263:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1668,
															"name": "prevMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "21269:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1665,
														"name": "settlePendingCake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "21238:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21238:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "21238:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1671,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "21295:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo storage pointer"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "21295:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1687,
																"name": "ACC_CAKE_PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "21409:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1683,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "21370:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accCakePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 246,
																		"src": "21370:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1680,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "21349:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1677,
																						"name": "_newMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1608,
																						"src": "21329:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1674,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1651,
																							"src": "21313:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																								"typeString": "struct MasterChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1675,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "21313:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2350,
																					"src": "21313:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21313:31:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2367,
																			"src": "21313:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21313:52:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2350,
																	"src": "21313:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21313:78:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "21313:82:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21313:124:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21295:142:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "21295:142:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1691,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "21447:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																"typeString": "struct MasterChefV2.PoolInfo memory"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBoostedShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "21447:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1713,
																		"name": "BOOST_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "21606:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1710,
																				"name": "_newMultiplier",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1608,
																				"src": "21586:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1707,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1651,
																					"src": "21570:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																						"typeString": "struct MasterChefV2.UserInfo storage pointer"
																					}
																				},
																				"id": 1708,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 239,
																				"src": "21570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2350,
																			"src": "21570:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21570:31:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2367,
																	"src": "21570:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21570:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1703,
																				"name": "BOOST_PRECISION",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "21535:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1700,
																						"name": "prevMultiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1659,
																						"src": "21515:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1697,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1651,
																							"src": "21499:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																								"typeString": "struct MasterChefV2.UserInfo storage pointer"
																							}
																						},
																						"id": 1698,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 239,
																						"src": "21499:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1699,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2350,
																					"src": "21499:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21499:31:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2367,
																			"src": "21499:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21499:52:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1694,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "21472:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
																				"typeString": "struct MasterChefV2.PoolInfo memory"
																			}
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalBoostedShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 252,
																		"src": "21472:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2287,
																	"src": "21472:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21472:80:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2270,
															"src": "21472:84:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21472:160:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21447:185:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "21447:185:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1718,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "21642:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1720,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1719,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "21651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21642:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
															"typeString": "struct MasterChefV2.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1721,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "21659:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$255_memory_ptr",
															"typeString": "struct MasterChefV2.PoolInfo memory"
														}
													},
													"src": "21642:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
														"typeString": "struct MasterChefV2.PoolInfo storage ref"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "21642:21:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1724,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "21673:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
																	}
																},
																"id": 1727,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1725,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "21682:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21673:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
																	"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
																}
															},
															"id": 1728,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1726,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "21688:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21673:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage",
																"typeString": "struct MasterChefV2.UserInfo storage ref"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "boostMultiplier",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "21673:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1730,
														"name": "_newMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "21713:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21673:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "21673:54:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1734,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "21765:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1735,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "21772:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1736,
															"name": "prevMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "21778:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1737,
															"name": "_newMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "21794:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1733,
														"name": "UpdateBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "21743:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21743:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "EmitStatement",
												"src": "21738:71:2"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "20328:215:2",
										"text": "@notice Update user boost factor.\n @param _user The user address for boost factor updates.\n @param _pid The pool id for the boost factor updates.\n @param _newMultiplier New boost multiplier."
									},
									"functionSelector": "041a84c9",
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1611,
											"modifierName": {
												"argumentTypes": null,
												"id": 1610,
												"name": "onlyBoostContract",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 463,
												"src": "20671:17:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20671:17:2"
										},
										{
											"arguments": null,
											"id": 1613,
											"modifierName": {
												"argumentTypes": null,
												"id": 1612,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2027,
												"src": "20689:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20689:12:2"
										}
									],
									"name": "updateBoostMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1741,
												"src": "20588:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1741,
												"src": "20611:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "_newMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1741,
												"src": "20633:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20578:83:2"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20702:0:2"
									},
									"scope": 1879,
									"src": "20548:1268:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "22045:151:2",
										"statements": [
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1767,
														"src": "22055:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22055:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1753,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "22076:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
																}
															},
															"id": 1755,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1754,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "22085:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22076:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
																"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
															}
														},
														"id": 1757,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1756,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "22091:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22076:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_storage",
															"typeString": "struct MasterChefV2.UserInfo storage ref"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "boostMultiplier",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 243,
													"src": "22076:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22055:58:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1760,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "22130:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1761,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "22143:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "22130:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1764,
														"name": "BOOST_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "22174:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "22130:59:2",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1763,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "22161:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1766,
												"nodeType": "Return",
												"src": "22123:66:2"
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "21822:131:2",
										"text": "@notice Get user boost multiplier for specific pool id.\n @param _user The user address.\n @param _pid The pool id."
									},
									"functionSelector": "033186e8",
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBoostMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "21986:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21986:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "22001:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21985:29:2"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1768,
												"src": "22036:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22035:9:2"
									},
									"scope": 1879,
									"src": "21958:238:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "22572:375:2",
										"statements": [
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1823,
														"src": "22582:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$244_memory_ptr",
															"typeString": "struct MasterChefV2.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1778,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 244,
															"src": "22582:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$244_storage_ptr",
																"typeString": "struct MasterChefV2.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1785,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1780,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "22605:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct MasterChefV2.UserInfo storage ref))"
															}
														},
														"id": 1782,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1781,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "22614:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22605:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$244_storage_$",
															"typeString": "mapping(address => struct MasterChefV2.UserInfo storage ref)"
														}
													},
													"id": 1784,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1783,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1771,
														"src": "22620:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22605:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$244_storage",
														"typeString": "struct MasterChefV2.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22582:44:2"
											},
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "boostedAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1823,
														"src": "22637:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22637:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1794,
															"name": "BOOST_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "22699:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1791,
																	"name": "_boostMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "22677:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1788,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "22661:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$244_memory_ptr",
																			"typeString": "struct MasterChefV2.UserInfo memory"
																		}
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 239,
																	"src": "22661:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2350,
																"src": "22661:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22661:33:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "22661:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22661:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22637:78:2"
											},
											{
												"assignments": [
													1798
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "accCake",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1823,
														"src": "22725:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22725:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1809,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1807,
															"name": "ACC_CAKE_PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "22797:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1801,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "22761:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_PoolInfo_$255_storage_$dyn_storage",
																				"typeString": "struct MasterChefV2.PoolInfo storage ref[] storage ref"
																			}
																		},
																		"id": 1803,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1802,
																			"name": "_pid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1773,
																			"src": "22770:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22761:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$255_storage",
																			"typeString": "struct MasterChefV2.PoolInfo storage ref"
																		}
																	},
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "accCakePerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "22761:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1799,
																	"name": "boostedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "22743:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2350,
																"src": "22743:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22743:49:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "22743:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22743:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22725:91:2"
											},
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1823,
														"src": "22826:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1810,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1814,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "22856:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$244_memory_ptr",
																	"typeString": "struct MasterChefV2.UserInfo memory"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "22856:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1812,
															"name": "accCake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "22844:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2287,
														"src": "22844:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22844:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22826:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1819,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "22925:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1820,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "22932:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1818,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "22911:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22911:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "22911:29:2"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "22202:244:2",
										"text": "@notice Settles, distribute the pending CAKE rewards for given user.\n @param _user The user address for settling rewards.\n @param _pid The pool id.\n @param _boostMultiplier The user boost multiplier in specific pool id."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settlePendingCake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "22487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "22510:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22510:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_boostMultiplier",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "22532:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22477:85:2"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22572:0:2"
									},
									"scope": 1879,
									"src": "22451:496:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "23143:428:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1832,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "23157:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23167:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23157:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1876,
												"nodeType": "IfStatement",
												"src": "23153:412:2",
												"trueBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "23170:395:2",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1839,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "23289:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																						"typeString": "contract MasterChefV2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																						"typeString": "contract MasterChefV2"
																					}
																				],
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "23281:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1837,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "23281:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23281:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1835,
																			"name": "CAKE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "23266:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2538",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2477,
																		"src": "23266:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23266:29:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1842,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "23298:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23266:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1848,
															"nodeType": "IfStatement",
															"src": "23262:101:2",
															"trueBody": {
																"id": 1847,
																"nodeType": "Block",
																"src": "23307:56:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1844,
																				"name": "harvestFromMasterChef",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1300,
																				"src": "23325:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23325:23:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1846,
																		"nodeType": "ExpressionStatement",
																		"src": "23325:23:2"
																	}
																]
															}
														},
														{
															"assignments": [
																1850
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1850,
																	"mutability": "mutable",
																	"name": "balance",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1875,
																	"src": "23376:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1849,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "23376:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1858,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1855,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "23417:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MasterChefV2_$1879",
																					"typeString": "contract MasterChefV2"
																				}
																			],
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23409:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1853,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23409:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23409:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1851,
																		"name": "CAKE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "23394:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2538",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2477,
																	"src": "23394:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23394:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "23376:47:2"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1859,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "23441:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1860,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "23451:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23441:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1867,
															"nodeType": "IfStatement",
															"src": "23437:73:2",
															"trueBody": {
																"id": 1866,
																"nodeType": "Block",
																"src": "23460:50:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1862,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1829,
																				"src": "23478:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1863,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1850,
																				"src": "23488:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23478:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1865,
																		"nodeType": "ExpressionStatement",
																		"src": "23478:17:2"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1871,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "23541:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1872,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "23546:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1868,
																		"name": "CAKE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "23523:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$2538",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2062,
																	"src": "23523:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$2538_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23523:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "23523:31:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "22953:123:2",
										"text": "@notice Safe Transfer CAKE.\n @param _to The CAKE receiver address.\n @param _amount transfer CAKE amounts."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1878,
												"src": "23104:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1878,
												"src": "23117:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23103:30:2"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23143:0:2"
									},
									"scope": 1879,
									"src": "23081:490:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1880,
							"src": "704:22869:2"
						}
					],
					"src": "33:23540:2"
				},
				"id": 2
			},
			"Users/leilei/Downloads/MasterChefV2/Ownable.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1988
						]
					},
					"id": 1989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/Context.sol",
							"file": "./Context.sol",
							"id": 1882,
							"nodeType": "ImportDirective",
							"scope": 1989,
							"sourceUnit": 218,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1884,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 217,
										"src": "597:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$217",
											"typeString": "contract Context"
										}
									},
									"id": 1885,
									"nodeType": "InheritanceSpecifier",
									"src": "597:7:3"
								}
							],
							"contractDependencies": [
								217
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1883,
								"nodeType": "StructuredDocumentation",
								"src": "82:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1988,
							"linearizedBaseContracts": [
								1988,
								217
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1887,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1988,
									"src": "611:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1886,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1893,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1893,
												"src": "667:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1893,
												"src": "698:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:57:3"
									},
									"src": "640:84:3"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "850:135:3",
										"statements": [
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1914,
														"src": "860:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1897,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1901,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1899,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "880:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "880:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "860:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1902,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "902:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1903,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "911:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "902:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "902:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "964:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "956:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1907,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "956:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "956:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1911,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "968:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1906,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "935:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1913,
												"nodeType": "EmitStatement",
												"src": "930:48:3"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "730:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1915,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:2:3"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:0:3"
									},
									"scope": 1988,
									"src": "826:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "1108:30:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1921,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1887,
													"src": "1125:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1920,
												"id": 1922,
												"nodeType": "Return",
												"src": "1118:13:3"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "991:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:2:3"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1924,
												"src": "1099:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1098:9:3"
									},
									"scope": 1988,
									"src": "1061:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1936,
										"nodeType": "Block",
										"src": "1247:95:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1928,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "1265:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1929,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1275:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1275:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1265:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1289:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1257:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "1257:67:3"
											},
											{
												"id": 1935,
												"nodeType": "PlaceholderStatement",
												"src": "1334:1:3"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "1144:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1937,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:3"
									},
									"src": "1226:116:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "1738:91:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1944,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "1774:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1790:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1782:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1945,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1782:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1782:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1943,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "1753:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1753:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1950,
												"nodeType": "EmitStatement",
												"src": "1748:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1951,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "1803:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1820:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1812:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1952,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1812:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1812:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1803:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "1803:19:3"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "1348:331:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1941,
											"modifierName": {
												"argumentTypes": null,
												"id": 1940,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "1728:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1728:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:3"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:0:3"
									},
									"scope": 1988,
									"src": "1684:145:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "2048:170:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1968,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "2066:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2086:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2078:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1969,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2078:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2078:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2066:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2058:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2058:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "2058:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1978,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "2167:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1979,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "2175:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1977,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "2146:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "EmitStatement",
												"src": "2141:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1982,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "2194:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1983,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "2203:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2194:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "2194:17:3"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "1835:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1965,
											"modifierName": {
												"argumentTypes": null,
												"id": 1964,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1937,
												"src": "2038:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2038:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1987,
												"src": "2005:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2004:18:3"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:0:3"
									},
									"scope": 1988,
									"src": "1978:240:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1989,
							"src": "577:1643:3"
						}
					],
					"src": "33:2187:3"
				},
				"id": 3
			},
			"Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2028
						]
					},
					"id": 2029,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1990,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1991,
								"nodeType": "StructuredDocumentation",
								"src": "58:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2028,
							"linearizedBaseContracts": [
								2028
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1994,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2028,
									"src": "1588:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1992,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1588:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1993,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1628:1:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1997,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2028,
									"src": "1635:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1635:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1996,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1671:1:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1999,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2028,
									"src": "1679:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1998,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1679:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "1733:39:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2002,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "1743:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2003,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "1753:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1743:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "1743:22:4"
											}
										]
									},
									"documentation": null,
									"id": 2007,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:2:4"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:4"
									},
									"scope": 2028,
									"src": "1709:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "2171:421:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2011,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1999,
																"src": "2260:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2012,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "2271:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2260:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2281:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2252:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "2252:63:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2017,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "2390:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2018,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "2400:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "2390:18:4"
											},
											{
												"id": 2021,
												"nodeType": "PlaceholderStatement",
												"src": "2419:1:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2022,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "2563:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2023,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "2573:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2563:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "2563:22:4"
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "1778:364:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 2027,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2168:2:4"
									},
									"src": "2147:445:4",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2029,
							"src": "809:1785:4"
						}
					],
					"src": "33:2561:4"
				},
				"id": 4
			},
			"Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/SafeBEP20.sol",
					"exportedSymbols": {
						"SafeBEP20": [
							2241
						]
					},
					"id": 2242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2030,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol",
							"file": "./interfaces/IBEP20.sol",
							"id": 2031,
							"nodeType": "ImportDirective",
							"scope": 2242,
							"sourceUnit": 2539,
							"src": "57:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/Address.sol",
							"file": "./Address.sol",
							"id": 2032,
							"nodeType": "ImportDirective",
							"scope": 2242,
							"sourceUnit": 195,
							"src": "91:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/leilei/Downloads/MasterChefV2/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2033,
							"nodeType": "ImportDirective",
							"scope": 2242,
							"sourceUnit": 2438,
							"src": "115:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2034,
								"nodeType": "StructuredDocumentation",
								"src": "141:457:5",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2241,
							"linearizedBaseContracts": [
								2241
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2037,
									"libraryName": {
										"contractScope": null,
										"id": 2035,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2437,
										"src": "629:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2437",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "623:27:5",
									"typeName": {
										"id": 2036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "642:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2040,
									"libraryName": {
										"contractScope": null,
										"id": 2038,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 194,
										"src": "661:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$194",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "655:26:5",
									"typeName": {
										"id": 2039,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "673:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "789:137:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2050,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "832:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2053,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "874:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2538",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2487,
																		"src": "874:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "874:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2056,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "899:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2057,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "903:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2051,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "851:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "851:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "851:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2049,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "799:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:120:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "799:120:5"
											}
										]
									},
									"documentation": null,
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2062,
												"src": "718:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2041,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "718:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2062,
												"src": "740:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2062,
												"src": "760:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "708:71:5"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:5"
									},
									"scope": 2241,
									"src": "687:239:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "1060:147:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2074,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "1103:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2077,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2064,
																			"src": "1145:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2538",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2519,
																		"src": "1145:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1145:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2080,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2066,
																	"src": "1174:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2081,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "1180:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2082,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "1184:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2075,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1122:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1122:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1122:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2073,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "1070:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1070:130:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "1070:130:5"
											}
										]
									},
									"documentation": null,
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "967:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2063,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "967:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "989:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "1011:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "1031:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "957:93:5"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1060:0:5"
									},
									"scope": 2241,
									"src": "932:275:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "1563:584:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2098,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "1865:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1874:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1865:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1864:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2106,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1905:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$2241",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$2241",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 2105,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1897:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2104,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1897:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 2107,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1897:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2108,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2092,
																					"src": "1912:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2102,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2090,
																					"src": "1881:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$2538",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2497,
																				"src": "1881:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1881:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1924:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1881:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2112,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1880:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1864:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:56:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1843:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "1843:163:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2118,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "2049:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2121,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2090,
																			"src": "2091:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2538",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2507,
																		"src": "2091:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2091:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2124,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "2115:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2125,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "2124:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2119,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2068:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2068:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2068:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2117,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "2016:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2016:124:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "2016:124:5"
											}
										]
									},
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "1213:239:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2130,
												"src": "1487:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2089,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "1487:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2130,
												"src": "1509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2130,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1477:76:5"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1563:0:5"
									},
									"scope": 2241,
									"src": "1457:690:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "2269:231:5",
										"statements": [
											{
												"assignments": [
													2140
												],
												"declarations": [
													{
														"constant": false,
														"id": 2140,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2165,
														"src": "2279:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2279:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "2346:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2145,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2326:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2241",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2241",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2318:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2143,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2318:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2318:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2147,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "2333:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2141,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "2302:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2538",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2497,
																"src": "2302:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2302:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2270,
														"src": "2302:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2279:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2154,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "2395:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2157,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2132,
																			"src": "2437:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2538",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2507,
																		"src": "2437:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2437:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2160,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "2461:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2161,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "2470:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2155,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2414:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2414:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2414:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2153,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "2362:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:131:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "ExpressionStatement",
												"src": "2362:131:5"
											}
										]
									},
									"documentation": null,
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "2193:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2131,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "2193:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "2215:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "2240:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2183:76:5"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:0:5"
									},
									"scope": 2241,
									"src": "2153:347:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "2622:318:5",
										"statements": [
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2202,
														"src": "2632:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2186,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "2720:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2739:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2181,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2687:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$2241",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$2241",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2679:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2179,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2679:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2679:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2183,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "2694:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2177,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "2663:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2538",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2497,
																"src": "2663:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2315,
														"src": "2663:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2663:129:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:160:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2191,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2194,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2168,
																			"src": "2877:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$2538",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2507,
																		"src": "2877:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2877:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2197,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "2901:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2198,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "2910:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2192,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2854:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2854:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2854:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$2538",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2190,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "2802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$2538_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2802:131:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "2802:131:5"
											}
										]
									},
									"documentation": null,
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2203,
												"src": "2546:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2167,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "2546:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2203,
												"src": "2568:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2203,
												"src": "2593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2536:76:5"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2622:0:5"
									},
									"scope": 2241,
									"src": "2506:434:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "3385:747:5",
										"statements": [
											{
												"assignments": [
													2212
												],
												"declarations": [
													{
														"constant": false,
														"id": 2212,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2239,
														"src": "3734:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2211,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3734:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2221,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2218,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "3796:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3802:34:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2215,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "3776:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$2538",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$2538",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3768:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2213,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3768:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3768:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "3768:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3768:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3734:103:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2222,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "3851:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3851:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3871:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3851:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2238,
												"nodeType": "IfStatement",
												"src": "3847:279:5",
												"trueBody": {
													"id": 2237,
													"nodeType": "Block",
													"src": "3874:252:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2229,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2212,
																				"src": "4020:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 2231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4033:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2230,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4033:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 2232,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4032:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2227,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "4009:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4009:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4009:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4057:44:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 2226,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3984:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3984:131:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2236,
															"nodeType": "ExpressionStatement",
															"src": "3984:131:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2204,
										"nodeType": "StructuredDocumentation",
										"src": "2946:364:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2240,
												"src": "3344:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$2538",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2205,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2538,
													"src": "3344:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$2538",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2240,
												"src": "3358:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3358:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3343:33:5"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:0:5"
									},
									"scope": 2241,
									"src": "3315:817:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2242,
							"src": "599:3535:5"
						}
					],
					"src": "32:4102:5"
				},
				"id": 5
			},
			"Users/leilei/Downloads/MasterChefV2/SafeMath.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2437
						]
					},
					"id": 2438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2243,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2244,
								"nodeType": "StructuredDocumentation",
								"src": "58:563:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2437,
							"linearizedBaseContracts": [
								2437
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2269,
										"nodeType": "Block",
										"src": "941:109:6",
										"statements": [
											{
												"assignments": [
													2255
												],
												"declarations": [
													{
														"constant": false,
														"id": 2255,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2269,
														"src": "951:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2259,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2256,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2247,
														"src": "963:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2257,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2249,
														"src": "967:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "951:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2261,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "986:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2262,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "991:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:29:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "978:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "978:46:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2267,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2255,
													"src": "1042:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2253,
												"id": 2268,
												"nodeType": "Return",
												"src": "1035:8:6"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "645:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2270,
												"src": "887:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2270,
												"src": "898:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:22:6"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2270,
												"src": "932:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:9:6"
									},
									"scope": 2437,
									"src": "874:176:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "1388:67:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2281,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "1409:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2282,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2275,
															"src": "1412:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:32:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2280,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2287,
															2315
														],
														"referencedDeclaration": 2315,
														"src": "1405:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2279,
												"id": 2285,
												"nodeType": "Return",
												"src": "1398:50:6"
											}
										]
									},
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "1056:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2287,
												"src": "1334:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2287,
												"src": "1345:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1333:22:6"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2287,
												"src": "1379:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1378:9:6"
									},
									"scope": 2437,
									"src": "1321:134:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "1841:92:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "1859:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2301,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "1864:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1859:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2303,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "1867:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1851:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "1851:29:6"
											},
											{
												"assignments": [
													2307
												],
												"declarations": [
													{
														"constant": false,
														"id": 2307,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2314,
														"src": "1890:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2311,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "1902:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "1906:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2312,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2307,
													"src": "1925:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2298,
												"id": 2313,
												"nodeType": "Return",
												"src": "1918:8:6"
											}
										]
									},
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "1461:280:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2315,
												"src": "1759:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2315,
												"src": "1770:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2315,
												"src": "1781:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1781:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1758:50:6"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2315,
												"src": "1832:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1831:9:6"
									},
									"scope": 2437,
									"src": "1746:187:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "2247:392:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2325,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "2479:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2484:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2479:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2331,
												"nodeType": "IfStatement",
												"src": "2475:45:6",
												"trueBody": {
													"id": 2330,
													"nodeType": "Block",
													"src": "2487:33:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2508:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2324,
															"id": 2329,
															"nodeType": "Return",
															"src": "2501:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													2333
												],
												"declarations": [
													{
														"constant": false,
														"id": 2333,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2349,
														"src": "2530:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2337,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2334,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "2542:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2335,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "2546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2339,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "2565:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2340,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "2569:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2565:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "2574:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:35:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2557:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "2557:56:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2347,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2333,
													"src": "2631:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2324,
												"id": 2348,
												"nodeType": "Return",
												"src": "2624:8:6"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "1939:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2350,
												"src": "2193:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2350,
												"src": "2204:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2192:22:6"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2350,
												"src": "2238:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2237:9:6"
									},
									"scope": 2437,
									"src": "2180:459:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "3168:63:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2361,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "3189:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2362,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "3192:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2360,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2367,
															2395
														],
														"referencedDeclaration": 2395,
														"src": "3185:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2359,
												"id": 2365,
												"nodeType": "Return",
												"src": "3178:46:6"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "2645:451:6",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2367,
												"src": "3114:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2367,
												"src": "3125:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3113:22:6"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2367,
												"src": "3159:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3158:9:6"
									},
									"scope": 2437,
									"src": "3101:130:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2394,
										"nodeType": "Block",
										"src": "3808:177:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2372,
																"src": "3826:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3826:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2383,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "3833:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3818:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "3818:28:6"
											},
											{
												"assignments": [
													2387
												],
												"declarations": [
													{
														"constant": false,
														"id": 2387,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2394,
														"src": "3856:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2388,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "3868:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2389,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "3872:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3868:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3856:17:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2392,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2387,
													"src": "3977:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2393,
												"nodeType": "Return",
												"src": "3970:8:6"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "3237:471:6",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2395,
												"src": "3726:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2395,
												"src": "3737:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2395,
												"src": "3748:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3748:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3725:50:6"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2395,
												"src": "3799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:9:6"
									},
									"scope": 2437,
									"src": "3713:272:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "4503:61:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2406,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "4524:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2407,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "4527:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:26:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2405,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2412,
															2436
														],
														"referencedDeclaration": 2436,
														"src": "4520:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2410,
												"nodeType": "Return",
												"src": "4513:44:6"
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "3991:440:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2412,
												"src": "4449:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2412,
												"src": "4460:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4448:22:6"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2412,
												"src": "4494:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4493:9:6"
									},
									"scope": 2437,
									"src": "4436:128:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2435,
										"nodeType": "Block",
										"src": "5130:68:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2425,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "5148:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5153:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2428,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "5156:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5140:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "5140:29:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2431,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "5186:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2432,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2417,
														"src": "5190:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5186:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2423,
												"id": 2434,
												"nodeType": "Return",
												"src": "5179:12:6"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "4570:460:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2436,
												"src": "5048:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2436,
												"src": "5059:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2436,
												"src": "5070:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5047:50:6"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2436,
												"src": "5121:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:9:6"
									},
									"scope": 2437,
									"src": "5035:163:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2438,
							"src": "622:4578:6"
						}
					],
					"src": "33:5167:6"
				},
				"id": 6
			},
			"Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/interfaces/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							2538
						]
					},
					"id": 2539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2439,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2538,
							"linearizedBaseContracts": [
								2538
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "82:64:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:2:7"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2445,
												"src": "197:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "196:9:7"
									},
									"scope": 2538,
									"src": "151:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "212:49:7",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 2451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:7"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2451,
												"src": "309:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2448,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "309:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "308:7:7"
									},
									"scope": 2538,
									"src": "266:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "322:47:7",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:7"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2457,
												"src": "415:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:15:7"
									},
									"scope": 2538,
									"src": "374:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2458,
										"nodeType": "StructuredDocumentation",
										"src": "436:45:7",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 2463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:7"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2463,
												"src": "525:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:15:7"
									},
									"scope": 2538,
									"src": "486:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "546:50:7",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 2469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:2:7"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2469,
												"src": "644:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:9:7"
									},
									"scope": 2538,
									"src": "601:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "659:70:7",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2477,
												"src": "753:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "752:17:7"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2477,
												"src": "793:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "792:9:7"
									},
									"scope": 2538,
									"src": "734:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "808:199:7",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2487,
												"src": "1030:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2487,
												"src": "1049:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1029:35:7"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2487,
												"src": "1083:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:6:7"
									},
									"scope": 2538,
									"src": "1012:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "1095:254:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2497,
												"src": "1373:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2497,
												"src": "1389:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1372:33:7"
									},
									"returnParameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2497,
												"src": "1441:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1440:9:7"
									},
									"scope": 2538,
									"src": "1354:96:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2498,
										"nodeType": "StructuredDocumentation",
										"src": "1456:618:7",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2507,
												"src": "2096:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2507,
												"src": "2113:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2095:33:7"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2507,
												"src": "2147:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2146:6:7"
									},
									"scope": 2538,
									"src": "2079:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2508,
										"nodeType": "StructuredDocumentation",
										"src": "2159:282:7",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2519,
												"src": "2477:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2519,
												"src": "2501:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2519,
												"src": "2528:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2467:81:7"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2519,
												"src": "2567:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2567:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2566:6:7"
									},
									"scope": 2538,
									"src": "2446:127:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "2579:150:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 2528,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2528,
												"src": "2749:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2528,
												"src": "2771:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2528,
												"src": "2791:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2748:57:7"
									},
									"src": "2734:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2529,
										"nodeType": "StructuredDocumentation",
										"src": "2812:144:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 2537,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2537,
												"src": "2976:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2537,
												"src": "2999:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2537,
												"src": "3024:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2975:63:7"
									},
									"src": "2961:78:7"
								}
							],
							"scope": 2539,
							"src": "59:2982:7"
						}
					],
					"src": "33:3008:7"
				},
				"id": 7
			},
			"Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/interfaces/IMasterChef.sol",
					"exportedSymbols": {
						"IMasterChef": [
							2590
						]
					},
					"id": 2591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2540,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2590,
							"linearizedBaseContracts": [
								2590
							],
							"name": "IMasterChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 2547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2547,
												"src": "102:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2547,
												"src": "116:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "101:31:8"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:0:8"
									},
									"scope": 2590,
									"src": "85:57:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 2554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2554,
												"src": "166:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2554,
												"src": "180:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "165:31:8"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:0:8"
									},
									"scope": 2590,
									"src": "148:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "41441d3b",
									"id": 2559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2559,
												"src": "234:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "233:17:8"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:8"
									},
									"scope": 2590,
									"src": "212:48:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1058d281",
									"id": 2564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2564,
												"src": "288:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "287:17:8"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:8"
									},
									"scope": 2590,
									"src": "266:48:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1175a1dd",
									"id": 2573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2573,
												"src": "341:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2573,
												"src": "355:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "340:29:8"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2573,
												"src": "393:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "392:9:8"
									},
									"scope": 2590,
									"src": "320:82:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "93f1a40b",
									"id": 2584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userInfo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2584,
												"src": "426:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2584,
												"src": "440:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "425:29:8"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2584,
												"src": "478:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2584,
												"src": "487:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "477:18:8"
									},
									"scope": 2590,
									"src": "408:88:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 2589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2589,
												"src": "529:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "528:14:8"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:8"
									},
									"scope": 2590,
									"src": "502:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2591,
							"src": "57:497:8"
						}
					],
					"src": "32:522:8"
				},
				"id": 8
			}
		}
	}
}