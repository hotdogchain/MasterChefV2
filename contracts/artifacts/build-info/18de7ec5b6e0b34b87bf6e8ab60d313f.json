{
	"id": "18de7ec5b6e0b34b87bf6e8ab60d313f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2020-09-28\n*/\n\npragma solidity 0.6.12;\n\n\n// \n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, 'SafeMath: addition overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, 'SafeMath: subtraction overflow');\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, 'SafeMath: multiplication overflow');\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, 'SafeMath: division by zero');\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, 'SafeMath: modulo by zero');\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n\n// \ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// \n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, 'Address: insufficient balance');\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}('');\n        require(success, 'Address: unable to send value, recipient may have reverted');\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, 'Address: low-level call failed');\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, 'Address: insufficient balance for call');\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), 'Address: call to non-contract');\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// \n/**\n * @title SafeBEP20\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeBEP20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IBEP20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IBEP20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IBEP20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            'SafeBEP20: approve from non-zero to non-zero allowance'\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\n            value,\n            'SafeBEP20: decreased allowance below zero'\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, 'SafeBEP20: low-level call failed');\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), 'SafeBEP20: BEP20 operation did not succeed');\n        }\n    }\n}\n\n// import \"@nomiclabs/buidler/console.sol\";\n// SousChef is the chef of new tokens. He can make yummy food and he is a fair guy as well as MasterChef.\ncontract SousChef {\n    using SafeMath for uint256;\n    using SafeBEP20 for IBEP20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;\n        uint256 rewardDebt;\n        uint256 rewardPending;\n    }\n\n    // Info of Pool\n    struct PoolInfo {\n        uint256 lastRewardBlock;  // Last block number that Rewards distribution occurs.\n        uint256 accRewardPerShare; // Accumulated reward per share, times 1e12. See below.\n    }\n\n    // The SYRUP TOKEN!\n    IBEP20 public syrup;\n    // rewards created per block.\n    uint256 public rewardPerBlock;\n\n    // Info.\n    PoolInfo public poolInfo;\n    // Info of each user that stakes Syrup tokens.\n    mapping (address => UserInfo) public userInfo;\n\n    // addresses list\n    address[] public addressList;\n\n    // The block number when mining starts.\n    uint256 public startBlock;\n    // The block number when mining ends.\n    uint256 public bonusEndBlock;\n\n    event Deposit(address indexed user, uint256 amount);\n    event Withdraw(address indexed user, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 amount);\n\n    constructor(\n        IBEP20 _syrup,\n        uint256 _rewardPerBlock,\n        uint256 _startBlock,\n        uint256 _endBlock\n    ) public {\n        syrup = _syrup;\n        rewardPerBlock = _rewardPerBlock;\n        startBlock = _startBlock;\n        bonusEndBlock = _endBlock;\n\n        // staking pool\n        poolInfo = PoolInfo({\n            lastRewardBlock: startBlock,\n            accRewardPerShare: 0\n        });\n    }\n\n    function addressLength() external view returns (uint256) {\n        return addressList.length;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from);\n        } else if (_from >= bonusEndBlock) {\n            return 0;\n        } else {\n            return bonusEndBlock.sub(_from);\n        }\n    }\n\n    // View function to see pending Tokens on frontend.\n    function pendingReward(address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo;\n        UserInfo storage user = userInfo[_user];\n        uint256 accRewardPerShare = pool.accRewardPerShare;\n        uint256 stakedSupply = syrup.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && stakedSupply != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 tokenReward = multiplier.mul(rewardPerBlock);\n            accRewardPerShare = accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply));\n        }\n        return user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending);\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool() public {\n        if (block.number <= poolInfo.lastRewardBlock) {\n            return;\n        }\n        uint256 syrupSupply = syrup.balanceOf(address(this));\n        if (syrupSupply == 0) {\n            poolInfo.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(poolInfo.lastRewardBlock, block.number);\n        uint256 tokenReward = multiplier.mul(rewardPerBlock);\n\n        poolInfo.accRewardPerShare = poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply));\n        poolInfo.lastRewardBlock = block.number;\n    }\n\n    // Deposit Syrup tokens to SousChef for Reward allocation.\n    function deposit(uint256 _amount) public {\n        require (_amount > 0, 'amount 0');\n        UserInfo storage user = userInfo[msg.sender];\n\n        updatePool();\n        syrup.safeTransferFrom(address(msg.sender), address(this), _amount);\n        if (user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0) {\n            addressList.push(address(msg.sender));\n        }\n\n        user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending);\n        user.amount = user.amount.add(_amount);\n        user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12);\n\n        emit Deposit(msg.sender, _amount);\n    }\n\n    // Withdraw Syrup tokens from SousChef.\n    function withdraw(uint256 _amount) public {\n        require (_amount > 0, 'amount 0');\n        UserInfo storage user = userInfo[msg.sender];\n        require(user.amount >= _amount, \"withdraw: not enough\");\n\n        updatePool();\n        syrup.safeTransfer(address(msg.sender), _amount);\n\n        user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending);\n        user.amount = user.amount.sub(_amount);\n        user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12);\n\n        emit Withdraw(msg.sender, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw() public {\n        UserInfo storage user = userInfo[msg.sender];\n        syrup.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":8985:15090  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":8985:15090  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122076eb502badb7e7e6addaa3eee37f553c5d1befc4982b7020c9fcabdd0885a1d564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076eb502badb7e7e6addaa3eee37f553c5d1befc4982b7020c9fcabdd0885a1d564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xEB502BADB7E7E6ADDAA3EEE37F553C5D1BEFC4982B7020 0xC9 0xFC 0xAB 0xDD ADDMOD DUP6 LOG1 0xD5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "8985:6105:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076eb502badb7e7e6addaa3eee37f553c5d1befc4982b7020c9fcabdd0885a1d564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xEB502BADB7E7E6ADDAA3EEE37F553C5D1BEFC4982B7020 0xC9 0xFC 0xAB 0xDD ADDMOD DUP6 LOG1 0xD5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "8985:6105:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8985,
									"end": 15090,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076eb502badb7e7e6addaa3eee37f553c5d1befc4982b7020c9fcabdd0885a1d564736f6c634300060c0033",
									".code": [
										{
											"begin": 8985,
											"end": 15090,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 15090,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":{\"keccak256\":\"0x66d2c06d73c00e170a8d23e1e26deb1f6f2356f0eeb010891cd102746b6ad457\",\"urls\":[\"bzz-raw://1d4a361d946a893a9225a0a8041afc5c3e761dfb83557d6e6d182f656110ce7e\",\"dweb:/ipfs/QmbydBEgcyJVUsWJNzwTf76VbAMD6h9GW3U8UwUmF35S7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":{\"keccak256\":\"0x66d2c06d73c00e170a8d23e1e26deb1f6f2356f0eeb010891cd102746b6ad457\",\"urls\":[\"bzz-raw://1d4a361d946a893a9225a0a8041afc5c3e761dfb83557d6e6d182f656110ce7e\",\"dweb:/ipfs/QmbydBEgcyJVUsWJNzwTf76VbAMD6h9GW3U8UwUmF35S7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15554:18875  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15554:18875  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220429eeed78fefb2e5637b2acfacc34011c1caeb869c0ab69af1fcdba256a9126b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220429eeed78fefb2e5637b2acfacc34011c1caeb869c0ab69af1fcdba256a9126b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP SWAP15 0xEE 0xD7 DUP16 0xEF 0xB2 0xE5 PUSH4 0x7B2ACFAC 0xC3 BLOCKHASH GT 0xC1 0xCA 0xEB DUP7 SWAP13 EXP 0xB6 SWAP11 CALL 0xFC 0xDB LOG2 JUMP 0xA9 SLT PUSH12 0x64736F6C634300060C003300 ",
							"sourceMap": "15554:3321:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220429eeed78fefb2e5637b2acfacc34011c1caeb869c0ab69af1fcdba256a9126b64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP SWAP15 0xEE 0xD7 DUP16 0xEF 0xB2 0xE5 PUSH4 0x7B2ACFAC 0xC3 BLOCKHASH GT 0xC1 0xCA 0xEB DUP7 SWAP13 EXP 0xB6 SWAP11 CALL 0xFC 0xDB LOG2 JUMP 0xA9 SLT PUSH12 0x64736F6C634300060C003300 ",
							"sourceMap": "15554:3321:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15554,
									"end": 18875,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220429eeed78fefb2e5637b2acfacc34011c1caeb869c0ab69af1fcdba256a9126b64736f6c634300060c0033",
									".code": [
										{
											"begin": 15554,
											"end": 18875,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 18875,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":{\"keccak256\":\"0x66d2c06d73c00e170a8d23e1e26deb1f6f2356f0eeb010891cd102746b6ad457\",\"urls\":[\"bzz-raw://1d4a361d946a893a9225a0a8041afc5c3e761dfb83557d6e6d182f656110ce7e\",\"dweb:/ipfs/QmbydBEgcyJVUsWJNzwTf76VbAMD6h9GW3U8UwUmF35S7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":660:5853  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":660:5853  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbc49969a55329feeb50f66454bbc2ab6d2b7766776656c4e4507397ec39dba564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbc49969a55329feeb50f66454bbc2ab6d2b7766776656c4e4507397ec39dba564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xC4 SWAP10 PUSH10 0xA55329FEEB50F66454BB 0xC2 0xAB PUSH14 0x2B7766776656C4E4507397EC39DB 0xA5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "660:5193:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbc49969a55329feeb50f66454bbc2ab6d2b7766776656c4e4507397ec39dba564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xC4 SWAP10 PUSH10 0xA55329FEEB50F66454BB 0xC2 0xAB PUSH14 0x2B7766776656C4E4507397EC39DB 0xA5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "660:5193:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 660,
									"end": 5853,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbc49969a55329feeb50f66454bbc2ab6d2b7766776656c4e4507397ec39dba564736f6c634300060c0033",
									".code": [
										{
											"begin": 660,
											"end": 5853,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 5853,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":{\"keccak256\":\"0x66d2c06d73c00e170a8d23e1e26deb1f6f2356f0eeb010891cd102746b6ad457\",\"urls\":[\"bzz-raw://1d4a361d946a893a9225a0a8041afc5c3e761dfb83557d6e6d182f656110ce7e\",\"dweb:/ipfs/QmbydBEgcyJVUsWJNzwTf76VbAMD6h9GW3U8UwUmF35S7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SousChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_syrup",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addressList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bonusEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accRewardPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "syrup",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardPending",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19027:24249  contract SousChef {... */\n  mstore(0x40, 0x80)\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20140:20560  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20295:20301  _syrup */\n  dup4\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20287:20292  syrup */\n  0x00\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20287:20301  syrup = _syrup */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20328:20343  _rewardPerBlock */\n  dup3\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20311:20325  rewardPerBlock */\n  0x01\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20311:20343  rewardPerBlock = _rewardPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20366:20377  _startBlock */\n  dup2\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20353:20363  startBlock */\n  0x06\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20353:20377  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20403:20412  _endBlock */\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20387:20400  bonusEndBlock */\n  0x07\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20387:20412  bonusEndBlock = _endBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20458:20553  PoolInfo({... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20498:20508  startBlock */\n  sload(0x06)\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20458:20553  PoolInfo({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20541:20542  0 */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20458:20553  PoolInfo({... */\n  dup2\n  mstore\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20447:20455  poolInfo */\n  0x02\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20447:20553  poolInfo = PoolInfo({... */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20140:20560  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19027:24249  contract SousChef {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19027:24249  contract SousChef {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ae39cac\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xdb2e21bc\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdc881888\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe3161ddd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf40f0f52\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x8ae39cac\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb810fb43\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x1959a002\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1aed6553\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5a2f3d09\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86a952c4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19696:19741  mapping (address => UserInfo) public userInfo */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19922:19950  uint256 public bonusEndBlock */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23312:23908  function withdraw(uint256 _amount) public {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19849:19874  uint256 public startBlock */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19615:19639  PoolInfo public poolInfo */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19507:19526  IBEP20 public syrup */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19566:19595  uint256 public rewardPerBlock */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22571:23262  function deposit(uint256 _amount) public {... */\n    tag_10:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19770:19798  address[] public addressList */\n    tag_11:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23976:24246  function emergencyWithdraw() public {... */\n    tag_12:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20566:20665  function addressLength() external view returns (uint256) {... */\n    tag_13:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21898:22502  function updatePool() public {... */\n    tag_14:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21100:21825  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_15:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19696:19741  mapping (address => UserInfo) public userInfo */\n    tag_20:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19922:19950  uint256 public bonusEndBlock */\n    tag_22:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23312:23908  function withdraw(uint256 _amount) public {... */\n    tag_25:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23383:23384  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23373:23380  _amount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23373:23384  _amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23364:23397  require (_amount > 0, 'amount 0') */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x616d6f756e742030000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23407:23428  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23431:23439  userInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23431:23451  userInfo[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23440:23450  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23431:23451  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23407:23451  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23484:23491  _amount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23469:23473  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23469:23480  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23469:23491  user.amount >= _amount */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23461:23516  require(user.amount >= _amount, \"withdraw: not enough\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420656e6f756768000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23527:23539  updatePool() */\n      tag_52\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23527:23537  updatePool */\n      tag_45\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23527:23539  updatePool() */\n      jump\t// in\n    tag_52:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23549:23597  syrup.safeTransfer(address(msg.sender), _amount) */\n      tag_53\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23576:23586  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23589:23596  _amount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23549:23554  syrup */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23549:23567  syrup.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23549:23597  syrup.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23727  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      tag_55\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23708:23712  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23708:23726  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23703  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_56\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23687:23691  user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23687:23702  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23682  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_57\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23677:23681  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23672  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_58\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23645:23653  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23645:23671  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23633  user */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23640  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23644  user.amount.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23672  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23676  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23682  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23686  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub */\n      tag_61\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23703  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23707  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add */\n      tag_62\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23629:23727  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23608:23612  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23608:23626  user.rewardPending */\n      0x02\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23608:23727  user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23751:23775  user.amount.sub(_amount) */\n      tag_63\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23767:23774  _amount */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23751:23755  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23751:23762  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23751:23766  user.amount.sub */\n      tag_61\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23751:23775  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23737:23741  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23737:23748  user.amount */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23737:23775  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23856  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_64\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23851:23855  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23846  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_65\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23819:23827  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23819:23845  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23807  user */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23814  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23818  user.amount.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23846  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23850  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23803:23856  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23785:23789  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23785:23800  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23785:23856  user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23881:23891  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23872:23901  Withdraw(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23893:23900  _amount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23872:23901  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23312:23908  function withdraw(uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19849:19874  uint256 public startBlock */\n    tag_27:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19615:19639  PoolInfo public poolInfo */\n    tag_29:\n      0x02\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19507:19526  IBEP20 public syrup */\n    tag_31:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19566:19595  uint256 public rewardPerBlock */\n    tag_33:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22571:23262  function deposit(uint256 _amount) public {... */\n    tag_36:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22641:22642  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22631:22638  _amount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22631:22642  _amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22622:22655  require (_amount > 0, 'amount 0') */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x616d6f756e742030000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22665:22686  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22689:22697  userInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22689:22709  userInfo[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22698:22708  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22689:22709  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22665:22709  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22720:22732  updatePool() */\n      tag_68\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22720:22730  updatePool */\n      tag_45\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22720:22732  updatePool() */\n      jump\t// in\n    tag_68:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22742:22809  syrup.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_69\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22773:22783  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22794:22798  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22801:22808  _amount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22742:22747  syrup */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22742:22764  syrup.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_70\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22742:22809  syrup.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22838:22839  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22827  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22834  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22839  user.amount == 0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22863  user.amount == 0 && user.rewardDebt == 0 */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22862:22863  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22843:22847  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22843:22858  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22843:22863  user.rewardDebt == 0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22863  user.amount == 0 && user.rewardDebt == 0 */\n    tag_71:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22889  user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0 */\n      dup1\n      iszero\n      tag_72\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22888:22889  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22867:22871  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22867:22885  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22867:22889  user.rewardPending ==0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22823:22889  user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0 */\n    tag_72:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22819:22953  if (user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22905:22916  addressList */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22930:22940  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22905:22942  addressList.push(address(msg.sender)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22819:22953  if (user.amount == 0 && user.rewardDebt == 0 && user.rewardPending ==0) {... */\n    tag_73:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23082  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      tag_75\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23063:23067  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23063:23081  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23058  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_76\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23042:23046  user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23042:23057  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23037  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_77\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23032:23036  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23027  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_78\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23000:23008  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23000:23026  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:22988  user */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:22995  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:22999  user.amount.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23027  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23031  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23037  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23041  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub */\n      tag_61\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23058  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23062  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add */\n      tag_62\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22984:23082  user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22963:22967  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22963:22981  user.rewardPending */\n      0x02\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22963:23082  user.rewardPending = user.amount.mul(poolInfo.accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23106:23130  user.amount.add(_amount) */\n      tag_79\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23122:23129  _amount */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23106:23110  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23106:23117  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23106:23121  user.amount.add */\n      tag_62\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23106:23130  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23092:23096  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23092:23103  user.amount */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23092:23130  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23211  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      tag_80\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23206:23210  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23201  user.amount.mul(poolInfo.accRewardPerShare) */\n      tag_81\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23174:23182  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23174:23200  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23162  user */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23169  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23173  user.amount.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23201  user.amount.mul(poolInfo.accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23205  user.amount.mul(poolInfo.accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23158:23211  user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23140:23144  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23140:23155  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23140:23211  user.rewardDebt = user.amount.mul(poolInfo.accRewardPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23235:23245  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23227:23255  Deposit(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23247:23254  _amount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23227:23255  Deposit(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22571:23262  function deposit(uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":19770:19798  address[] public addressList */\n    tag_39:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23976:24246  function emergencyWithdraw() public {... */\n    tag_41:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24022:24043  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24046:24054  userInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24046:24066  userInfo[msg.sender] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24055:24065  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24046:24066  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24022:24066  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24076:24128  syrup.safeTransfer(address(msg.sender), user.amount) */\n      tag_85\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24103:24113  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24116:24120  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24116:24127  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24076:24081  syrup */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24076:24094  syrup.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24076:24128  syrup.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24161:24171  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24143:24185  EmergencyWithdraw(msg.sender, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24173:24177  user */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24173:24184  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24143:24185  EmergencyWithdraw(msg.sender, user.amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24209:24210  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24195:24199  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24195:24206  user.amount */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24195:24210  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24238:24239  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24220:24224  user */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24220:24235  user.rewardDebt */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":24220:24239  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":23976:24246  function emergencyWithdraw() public {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20566:20665  function addressLength() external view returns (uint256) {... */\n    tag_43:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20614:20621  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20640:20651  addressList */\n      0x05\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20640:20658  addressList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20633:20658  return addressList.length */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20566:20665  function addressLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21898:22502  function updatePool() public {... */\n    tag_45:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21957:21965  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21957:21981  poolInfo.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21941:21953  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21941:21981  block.number <= poolInfo.lastRewardBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21937:22014  if (block.number <= poolInfo.lastRewardBlock) {... */\n      tag_88\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21997:22004  return; */\n      jump(tag_87)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21937:22014  if (block.number <= poolInfo.lastRewardBlock) {... */\n    tag_88:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22023:22042  uint256 syrupSupply */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22045:22050  syrup */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22045:22060  syrup.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22069:22073  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22045:22075  syrup.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22023:22075  uint256 syrupSupply = syrup.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22104:22105  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22089:22100  syrupSupply */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22089:22105  syrupSupply == 0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22085:22191  if (syrupSupply == 0) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22148:22160  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22121:22129  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22121:22145  poolInfo.lastRewardBlock */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22121:22160  poolInfo.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22174:22181  return; */\n      pop\n      jump(tag_87)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22085:22191  if (syrupSupply == 0) {... */\n    tag_93:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22200:22218  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22221:22274  getMultiplier(poolInfo.lastRewardBlock, block.number) */\n      tag_94\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22235:22243  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22235:22259  poolInfo.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22261:22273  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22221:22234  getMultiplier */\n      tag_95\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22221:22274  getMultiplier(poolInfo.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_94:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22200:22274  uint256 multiplier = getMultiplier(poolInfo.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22284:22303  uint256 tokenReward */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22306:22336  multiplier.mul(rewardPerBlock) */\n      tag_96\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22321:22335  rewardPerBlock */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22306:22316  multiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22306:22320  multiplier.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22306:22336  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22284:22336  uint256 tokenReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22376:22446  poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply)) */\n      tag_97\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22445  tokenReward.mul(1e12).div(syrupSupply) */\n      tag_98\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22433:22444  syrupSupply */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22428  tokenReward.mul(1e12) */\n      tag_99\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22423:22427  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22418  tokenReward */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22422  tokenReward.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22428  tokenReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22432  tokenReward.mul(1e12).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22407:22445  tokenReward.mul(1e12).div(syrupSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22376:22384  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22376:22402  poolInfo.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22376:22406  poolInfo.accRewardPerShare.add */\n      tag_62\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22376:22446  poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22347:22355  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22347:22373  poolInfo.accRewardPerShare */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22347:22446  poolInfo.accRewardPerShare = poolInfo.accRewardPerShare.add(tokenReward.mul(1e12).div(syrupSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22483:22495  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22456:22464  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22456:22480  poolInfo.lastRewardBlock */\n      0x00\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":22456:22495  poolInfo.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21898:22502  function updatePool() public {... */\n      pop\n      pop\n      pop\n    tag_87:\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21100:21825  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_48:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21161:21168  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21180:21201  PoolInfo storage pool */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21204:21212  poolInfo */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21180:21212  PoolInfo storage pool = poolInfo */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21222:21243  UserInfo storage user */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21246:21254  userInfo */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21246:21261  userInfo[_user] */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21255:21260  _user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21246:21261  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21222:21261  UserInfo storage user = userInfo[_user] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21271:21296  uint256 accRewardPerShare */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21299:21303  pool */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21299:21321  pool.accRewardPerShare */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21271:21321  uint256 accRewardPerShare = pool.accRewardPerShare */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21331:21351  uint256 stakedSupply */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21354:21359  syrup */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21354:21369  syrup.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21378:21382  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21354:21384  syrup.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21331:21384  uint256 stakedSupply = syrup.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21413:21417  pool */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21413:21433  pool.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21398:21410  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21398:21433  block.number > pool.lastRewardBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21398:21454  block.number > pool.lastRewardBlock && stakedSupply != 0 */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21453:21454  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21437:21449  stakedSupply */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21437:21454  stakedSupply != 0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21398:21454  block.number > pool.lastRewardBlock && stakedSupply != 0 */\n    tag_105:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21394:21713  if (block.number > pool.lastRewardBlock && stakedSupply != 0) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21470:21488  uint256 multiplier */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21491:21540  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_107\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21505:21509  pool */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21505:21525  pool.lastRewardBlock */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21527:21539  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21491:21504  getMultiplier */\n      tag_95\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21491:21540  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_107:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21470:21540  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21554:21573  uint256 tokenReward */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21576:21606  multiplier.mul(rewardPerBlock) */\n      tag_108\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21591:21605  rewardPerBlock */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21576:21586  multiplier */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21576:21590  multiplier.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21576:21606  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21554:21606  uint256 tokenReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21640:21702  accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply)) */\n      tag_109\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21701  tokenReward.mul(1e12).div(stakedSupply) */\n      tag_110\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21688:21700  stakedSupply */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21683  tokenReward.mul(1e12) */\n      tag_111\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21678:21682  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21673  tokenReward */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21677  tokenReward.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21683  tokenReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21687  tokenReward.mul(1e12).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21662:21701  tokenReward.mul(1e12).div(stakedSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21640:21657  accRewardPerShare */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21640:21661  accRewardPerShare.add */\n      tag_62\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21640:21702  accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21620:21702  accRewardPerShare = accRewardPerShare.add(tokenReward.mul(1e12).div(stakedSupply)) */\n      swap4\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21394:21713  if (block.number > pool.lastRewardBlock && stakedSupply != 0) {... */\n      pop\n      pop\n    tag_106:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21818  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      tag_112\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21799:21803  user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21799:21817  user.rewardPending */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21794  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_113\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21778:21782  user */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21778:21793  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21773  user.amount.mul(accRewardPerShare).div(1e12) */\n      tag_114\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21768:21772  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21763  user.amount.mul(accRewardPerShare) */\n      tag_115\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21745:21762  accRewardPerShare */\n      dup9\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21733  user */\n      dup11\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21740  user.amount */\n      0x00\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21744  user.amount.mul */\n      tag_59\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21763  user.amount.mul(accRewardPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21767  user.amount.mul(accRewardPerShare).div */\n      tag_60\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21773  user.amount.mul(accRewardPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21777  user.amount.mul(accRewardPerShare).div(1e12).sub */\n      tag_61\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21794  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21798  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add */\n      tag_62\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21729:21818  user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21722:21818  return user.amount.mul(accRewardPerShare).div(1e12).sub(user.rewardDebt).add(user.rewardPending) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21100:21825  function pendingReward(address _user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15642:15847  function safeTransfer(... */\n    tag_54:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15754:15840  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_117\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15774:15779  token */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15804:15827  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15829:15831  to */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15833:15838  value */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15781:15839  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15754:15773  _callOptionalReturn */\n      tag_118\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15754:15840  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_117:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15642:15847  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2248:2707  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_59:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2306:2313  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2552:2553  0 */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2547:2548  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2547:2553  a == 0 */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2543:2588  if (a == 0) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2576:2577  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2569:2577  return 0 */\n      swap1\n      pop\n      jump(tag_119)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2543:2588  if (a == 0) {... */\n    tag_120:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2598:2607  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2614:2615  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2610:2611  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2610:2615  a * b */\n      mul\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2598:2615  uint256 c = a * b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2642:2643  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2637:2638  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2633:2634  c */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2633:2638  c / a */\n      dup2\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      div\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2633:2643  c / a == b */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2625:2681  require(c / a == b, 'SafeMath: multiplication overflow') */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2699:2700  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2692:2700  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":2248:2707  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3169:3299  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_60:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3227:3234  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3253:3292  div(a, b, 'SafeMath: division by zero') */\n      tag_124\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3257:3258  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3260:3261  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3253:3292  div(a, b, 'SafeMath: division by zero') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3253:3256  div */\n      tag_125\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3253:3292  div(a, b, 'SafeMath: division by zero') */\n      jump\t// in\n    tag_124:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3246:3292  return div(a, b, 'SafeMath: division by zero') */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3169:3299  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1359:1493  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_61:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1417:1424  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1443:1486  sub(a, b, 'SafeMath: subtraction overflow') */\n      tag_127\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1447:1448  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1450:1451  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1443:1486  sub(a, b, 'SafeMath: subtraction overflow') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1443:1446  sub */\n      tag_128\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1443:1486  sub(a, b, 'SafeMath: subtraction overflow') */\n      jump\t// in\n    tag_127:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1436:1486  return sub(a, b, 'SafeMath: subtraction overflow') */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1359:1493  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":912:1088  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_62:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":970:977  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":989:998  uint256 c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1005:1006  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1001:1002  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1001:1006  a + b */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":989:1006  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1029:1030  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1024:1025  c */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1024:1030  c >= a */\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1016:1062  require(c >= a, 'SafeMath: addition overflow') */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1080:1081  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1073:1081  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":912:1088  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15853:16094  function safeTransferFrom(... */\n    tag_70:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15991:16087  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_132\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":16011:16016  token */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":16041:16068  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":16070:16074  from */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":16076:16078  to */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":16080:16085  value */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":16018:16086  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15991:16010  _callOptionalReturn */\n      tag_118\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15991:16087  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_132:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15853:16094  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20738:21038  function getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {... */\n    tag_95:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20812:20819  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20842:20855  bonusEndBlock */\n      sload(0x07)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20835:20838  _to */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20835:20855  _to <= bonusEndBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20831:21032  if (_to <= bonusEndBlock) {... */\n      tag_134\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20878:20892  _to.sub(_from) */\n      tag_135\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20886:20891  _from */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20878:20881  _to */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20878:20885  _to.sub */\n      tag_61\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20878:20892  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20871:20892  return _to.sub(_from) */\n      swap1\n      pop\n      jump(tag_133)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20831:21032  if (_to <= bonusEndBlock) {... */\n    tag_134:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20922:20935  bonusEndBlock */\n      sload(0x07)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20913:20918  _from */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20913:20935  _from >= bonusEndBlock */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20909:21032  if (_from >= bonusEndBlock) {... */\n      tag_137\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20958:20959  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20951:20959  return 0 */\n      swap1\n      pop\n      jump(tag_133)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20909:21032  if (_from >= bonusEndBlock) {... */\n    tag_137:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20997:21021  bonusEndBlock.sub(_from) */\n      tag_139\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":21015:21020  _from */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20997:21010  bonusEndBlock */\n      sload(0x07)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20997:21014  bonusEndBlock.sub */\n      tag_61\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20997:21021  bonusEndBlock.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20990:21021  return bonusEndBlock.sub(_from) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":20738:21038  function getMultiplier(uint256 _from, uint256 _to) internal view returns (uint256) {... */\n    tag_133:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18110:18873  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_118:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18529:18552  bytes memory returndata */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18555:18624  address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      tag_141\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18583:18587  data */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18555:18624  address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18563:18568  token */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18555:18582  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_142\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18555:18624  address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18529:18624  bytes memory returndata = address(token).functionCall(data, 'SafeBEP20: low-level call failed') */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18658:18659  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18638:18648  returndata */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18638:18655  returndata.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18638:18659  returndata.length > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18634:18867  if (returndata.length > 0) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18790:18800  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18779:18809  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18771:18856  require(abi.decode(returndata, (bool)), 'SafeBEP20: BEP20 operation did not succeed') */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18634:18867  if (returndata.length > 0) {... */\n    tag_143:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":18110:18873  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3781:4083  function div(... */\n    tag_125:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3897:3904  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3928:3929  0 */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3924:3925  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3924:3929  b > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3931:3943  errorMessage */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3916:3944  require(b > 0, errorMessage) */\n      swap1\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_148:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_150\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_148)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_151:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3954:3963  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3970:3971  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3966:3967  a */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3966:3971  a / b */\n      dup2\n      tag_152\n      jumpi\n      invalid\n    tag_152:\n      div\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3954:3971  uint256 c = a / b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":4075:4076  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":4068:4076  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":3781:4083  function div(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1784:2001  function sub(... */\n    tag_128:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1900:1907  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1932:1933  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1927:1928  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1927:1933  b <= a */\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1935:1947  errorMessage */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1919:1948  require(b <= a, errorMessage) */\n      swap1\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_155:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_157\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_155)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_158:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1958:1967  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1974:1975  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1970:1971  a */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1970:1975  a - b */\n      sub\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1958:1975  uint256 c = a - b */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1993:1994  c */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1986:1994  return c */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":1784:2001  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12649:12873  function functionCall(... */\n    tag_142:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12782:12794  bytes memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12813:12866  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_160\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12836:12842  target */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12844:12848  data */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12850:12851  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12853:12865  errorMessage */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12813:12835  _functionCallWithValue */\n      tag_161\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12813:12866  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_160:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12806:12866  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":12649:12873  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14094:15088  function _functionCallWithValue(... */\n    tag_161:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14262:14274  bytes memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14294:14312  isContract(target) */\n      tag_163\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14305:14311  target */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14294:14304  isContract */\n      tag_164\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14294:14312  isContract(target) */\n      jump\t// in\n    tag_163:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14286:14346  require(isContract(target), 'Address: call to non-contract') */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14417:14429  bool success */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14431:14454  bytes memory returndata */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14458:14464  target */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14458:14469  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14477:14485  weiValue */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14487:14491  data */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14458:14492  target.call{value: weiValue}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_166:\n      0x20\n      dup4\n      lt\n      tag_168\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_166)\n    tag_168:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_171\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_170)\n    tag_171:\n      0x60\n      swap2\n      pop\n    tag_170:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14416:14492  (bool success, bytes memory returndata) = target.call{value: weiValue}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14506:14513  success */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14502:15082  if (success) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14536:14546  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14529:14546  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_162)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14502:15082  if (success) {... */\n    tag_172:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14667:14668  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14647:14657  returndata */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14647:14664  returndata.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14647:14668  returndata.length > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14643:15072  if (returndata.length > 0) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14905:14915  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14899:14916  mload(returndata) */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14965:14980  returndata_size */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14952:14962  returndata */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14948:14950  32 */\n      0x20\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14944:14963  add(32, returndata) */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14937:14981  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14854:14999  {... */\n    tag_174:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15044:15056  errorMessage */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":15037:15057  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_176:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_178\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_176)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_179:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":14094:15088  function _functionCallWithValue(... */\n    tag_162:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9577:10207  function isContract(address account) internal view returns (bool) {... */\n    tag_164:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9637:9641  bool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9895:9911  bytes32 codehash */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9921:9940  bytes32 accountHash */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9943:10009  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9921:10009  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10122:10129  account */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10110:10130  extcodehash(account) */\n      extcodehash\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10098:10130  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10169:10180  accountHash */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10157:10165  codehash */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10157:10180  codehash != accountHash */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10157:10199  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10196:10199  0x0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10184:10199  codehash != 0x0 */\n      dup1\n      shl\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10184:10192  codehash */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10184:10199  codehash != 0x0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10157:10199  codehash != accountHash && codehash != 0x0 */\n    tag_181:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":10149:10200  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":9577:10207  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082 5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa264697066735822122047f8d232d79882067d3922217150f8d0c56ff38a1ec9917e4478d74b3c3399ba64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161175b38038061175b8339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018190555081600681905550806007819055506040518060400160405280600654815260200160008152506002600082015181600001556020820151816001015590505050505050611660806100fb6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638ae39cac1161008c578063db2e21bc11610066578063db2e21bc146102a1578063dc881888146102ab578063e3161ddd146102c9578063f40f0f52146102d3576100cf565b80638ae39cac146101fd578063b6b55f251461021b578063b810fb4314610249576100cf565b80631959a002146100d45780631aed65531461013a5780632e1a7d4d1461015857806348cd4cb1146101865780635a2f3d09146101a457806386a952c4146101c9575b600080fd5b610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610142610355565b6040518082815260200191505060405180910390f35b6101846004803603602081101561016e57600080fd5b810190808035906020019092919050505061035b565b005b61018e6105f4565b6040518082815260200191505060405180910390f35b6101ac6105fa565b604051808381526020018281526020019250505060405180910390f35b6101d161060c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610205610630565b6040518082815260200191505060405180910390f35b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610636565b005b6102756004803603602081101561025f57600080fd5b81019080803590602001909291905050506108e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a9610924565b005b6102b3610a1f565b6040518082815260200191505060405180910390f35b6102d1610a2c565b005b610315600480360360208110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba3565b6040518082815260200191505060405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154905083565b60075481565b600081116103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000154101561048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f77697468647261773a206e6f7420656e6f75676800000000000000000000000081525060200191505060405180910390fd5b610496610a2c565b6104e1338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b6105408160020154610532836001015461052464e8d4a510006105166002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b816002018190555061055f828260000154610f1990919063ffffffff16565b816000018190555061059a64e8d4a5100061058c6002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040518082815260200191505060405180910390a25050565b60065481565b60028060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600081116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106f7610a2c565b61074433308460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610feb909392919063ffffffff16565b6000816000015414801561075c575060008160010154145b801561076c575060008160020154145b156107d5576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6108348160020154610826836001015461081864e8d4a5100061080a6002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b8160020181905550610853828260000154610f6390919063ffffffff16565b816000018190555061088e64e8d4a510006108806002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a25050565b600581815481106108f557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109b633826000015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582600001546040518082815260200191505060405180910390a2600081600001819055506000816001018190555050565b6000600580549050905090565b6002600001544311610a3d57610ba1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ac757600080fd5b505afa158015610adb573d6000803e3d6000fd5b505050506040513d6020811015610af157600080fd5b810190808051906020019092919050505090506000811415610b1d574360026000018190555050610ba1565b6000610b2e600260000154436110ac565b90506000610b4760015483610e4990919063ffffffff16565b9050610b8a610b7684610b6864e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b600260010154610f6390919063ffffffff16565b600260010181905550436002600001819055505050505b565b600080600290506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260010154905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c8057600080fd5b505afa158015610c94573d6000803e3d6000fd5b505050506040513d6020811015610caa57600080fd5b81019080805190602001909291905050509050836000015443118015610cd1575060008114155b15610d42576000610ce68560000154436110ac565b90506000610cff60015483610e4990919063ffffffff16565b9050610d3d610d2e84610d2064e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b85610f6390919063ffffffff16565b935050505b610d9c8360020154610d8e8560010154610d8064e8d4a51000610d72888a60000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b945050505050919050565b610e448363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b505050565b600080831415610e5c5760009050610ec9565b6000828402905082848281610e6d57fe5b0414610ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061160a6021913960400191505060405180910390fd5b809150505b92915050565b6000610f1183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111f0565b905092915050565b6000610f5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b6565b905092915050565b600080828401905083811015610fe1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6110a6846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b50505050565b600060075482116110d1576110ca8383610f1990919063ffffffff16565b90506110fb565b60075483106110e357600090506110fb565b6110f883600754610f1990919063ffffffff16565b90505b92915050565b6060611163826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113769092919063ffffffff16565b90506000815111156111eb5780806020019051602081101561118457600080fd5b81019080805190602001909291905050506111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115e0602a913960400191505060405180910390fd5b5b505050565b6000808311829061129c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611261578082015181840152602081019050611246565b50505050905090810190601f16801561128e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816112a857fe5b049050809150509392505050565b6000838311158290611363576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132857808201518184015260208101905061130d565b50505050905090810190601f1680156113555780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060611385848460008561138e565b90509392505050565b606061139985611594565b61140b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061145b5780518252602082019150602081019050602083039250611438565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114bd576040519150601f19603f3d011682016040523d82523d6000602084013e6114c2565b606091505b509150915081156114d757809250505061158c565b6000815111156114ea5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611551578082015181840152602081019050611536565b50505050905090810190601f16801561157e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156115d657506000801b8214155b9250505091905056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122047f8d232d79882067d3922217150f8d0c56ff38a1ec9917e4478d74b3c3399ba64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x175B CODESIZE SUB DUP1 PUSH2 0x175B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP POP POP PUSH2 0x1660 DUP1 PUSH2 0xFB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDB2E21BC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xDC881888 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x2D3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xB810FB43 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x5A2F3D09 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x86A952C4 EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0xA2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420656E6F756768000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x496 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x4E1 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x540 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x532 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x524 PUSH5 0xE8D4A51000 PUSH2 0x516 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x55F DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x59A PUSH5 0xE8D4A51000 PUSH2 0x58C PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x6F7 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x744 CALLER ADDRESS DUP5 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x5 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x834 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x826 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x818 PUSH5 0xE8D4A51000 PUSH2 0x80A PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x853 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x88E PUSH5 0xE8D4A51000 PUSH2 0x880 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x9B6 CALLER DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER GT PUSH2 0xA3D JUMPI PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xB1D JUMPI NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2E PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB47 PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB8A PUSH2 0xB76 DUP5 PUSH2 0xB68 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x0 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xCD1 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 PUSH2 0xCE6 DUP6 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCFF PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD3D PUSH2 0xD2E DUP5 PUSH2 0xD20 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xD9C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xD8E DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0xD80 PUSH5 0xE8D4A51000 PUSH2 0xD72 DUP9 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0xE6D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x160A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x11F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A6 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT PUSH2 0x10D1 JUMPI PUSH2 0x10CA DUP4 DUP4 PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 LT PUSH2 0x10E3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x10F8 DUP4 PUSH1 0x7 SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1163 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1376 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11EB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1261 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1246 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x12A8 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1328 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x130D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1355 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1385 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x138E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1399 DUP6 PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x145B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x14D7 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x158C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x14EA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1536 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x157E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SELFBALANCE 0xF8 0xD2 ORIGIN 0xD7 SWAP9 DUP3 MOD PUSH30 0x3922217150F8D0C56FF38A1EC9917E4478D74B3C3399BA64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "19027:5222:0:-:0;;;20140:420;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20295:6;20287:5;;:14;;;;;;;;;;;;;;;;;;20328:15;20311:14;:32;;;;20366:11;20353:10;:24;;;;20403:9;20387:13;:25;;;;20458:95;;;;;;;;20498:10;;20458:95;;;;20541:1;20458:95;;;20447:8;:106;;;;;;;;;;;;;;;;;;;20140:420;;;;19027:5222;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638ae39cac1161008c578063db2e21bc11610066578063db2e21bc146102a1578063dc881888146102ab578063e3161ddd146102c9578063f40f0f52146102d3576100cf565b80638ae39cac146101fd578063b6b55f251461021b578063b810fb4314610249576100cf565b80631959a002146100d45780631aed65531461013a5780632e1a7d4d1461015857806348cd4cb1146101865780635a2f3d09146101a457806386a952c4146101c9575b600080fd5b610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610142610355565b6040518082815260200191505060405180910390f35b6101846004803603602081101561016e57600080fd5b810190808035906020019092919050505061035b565b005b61018e6105f4565b6040518082815260200191505060405180910390f35b6101ac6105fa565b604051808381526020018281526020019250505060405180910390f35b6101d161060c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610205610630565b6040518082815260200191505060405180910390f35b6102476004803603602081101561023157600080fd5b8101908080359060200190929190505050610636565b005b6102756004803603602081101561025f57600080fd5b81019080803590602001909291905050506108e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a9610924565b005b6102b3610a1f565b6040518082815260200191505060405180910390f35b6102d1610a2c565b005b610315600480360360208110156102e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba3565b6040518082815260200191505060405180910390f35b60046020528060005260406000206000915090508060000154908060010154908060020154905083565b60075481565b600081116103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000154101561048e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f77697468647261773a206e6f7420656e6f75676800000000000000000000000081525060200191505060405180910390fd5b610496610a2c565b6104e1338360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b6105408160020154610532836001015461052464e8d4a510006105166002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b816002018190555061055f828260000154610f1990919063ffffffff16565b816000018190555061059a64e8d4a5100061058c6002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040518082815260200191505060405180910390a25050565b60065481565b60028060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600081116106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f616d6f756e74203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106f7610a2c565b61074433308460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610feb909392919063ffffffff16565b6000816000015414801561075c575060008160010154145b801561076c575060008160020154145b156107d5576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6108348160020154610826836001015461081864e8d4a5100061080a6002600101548860000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b8160020181905550610853828260000154610f6390919063ffffffff16565b816000018190555061088e64e8d4a510006108806002600101548460000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a25050565b600581815481106108f557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109b633826000015460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610da79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969582600001546040518082815260200191505060405180910390a2600081600001819055506000816001018190555050565b6000600580549050905090565b6002600001544311610a3d57610ba1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ac757600080fd5b505afa158015610adb573d6000803e3d6000fd5b505050506040513d6020811015610af157600080fd5b810190808051906020019092919050505090506000811415610b1d574360026000018190555050610ba1565b6000610b2e600260000154436110ac565b90506000610b4760015483610e4990919063ffffffff16565b9050610b8a610b7684610b6864e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b600260010154610f6390919063ffffffff16565b600260010181905550436002600001819055505050505b565b600080600290506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260010154905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c8057600080fd5b505afa158015610c94573d6000803e3d6000fd5b505050506040513d6020811015610caa57600080fd5b81019080805190602001909291905050509050836000015443118015610cd1575060008114155b15610d42576000610ce68560000154436110ac565b90506000610cff60015483610e4990919063ffffffff16565b9050610d3d610d2e84610d2064e8d4a5100085610e4990919063ffffffff16565b610ecf90919063ffffffff16565b85610f6390919063ffffffff16565b935050505b610d9c8360020154610d8e8560010154610d8064e8d4a51000610d72888a60000154610e4990919063ffffffff16565b610ecf90919063ffffffff16565b610f1990919063ffffffff16565b610f6390919063ffffffff16565b945050505050919050565b610e448363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b505050565b600080831415610e5c5760009050610ec9565b6000828402905082848281610e6d57fe5b0414610ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061160a6021913960400191505060405180910390fd5b809150505b92915050565b6000610f1183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506111f0565b905092915050565b6000610f5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112b6565b905092915050565b600080828401905083811015610fe1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6110a6846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611101565b50505050565b600060075482116110d1576110ca8383610f1990919063ffffffff16565b90506110fb565b60075483106110e357600090506110fb565b6110f883600754610f1990919063ffffffff16565b90505b92915050565b6060611163826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113769092919063ffffffff16565b90506000815111156111eb5780806020019051602081101561118457600080fd5b81019080805190602001909291905050506111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115e0602a913960400191505060405180910390fd5b5b505050565b6000808311829061129c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611261578082015181840152602081019050611246565b50505050905090810190601f16801561128e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816112a857fe5b049050809150509392505050565b6000838311158290611363576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561132857808201518184015260208101905061130d565b50505050905090810190601f1680156113555780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060611385848460008561138e565b90509392505050565b606061139985611594565b61140b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061145b5780518252602082019150602081019050602083039250611438565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146114bd576040519150601f19603f3d011682016040523d82523d6000602084013e6114c2565b606091505b509150915081156114d757809250505061158c565b6000815111156114ea5780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611551578082015181840152602081019050611536565b50505050905090810190601f16801561157e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156115d657506000801b8214155b9250505091905056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122047f8d232d79882067d3922217150f8d0c56ff38a1ec9917e4478d74b3c3399ba64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDB2E21BC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xDC881888 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x2D3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xB810FB43 EQ PUSH2 0x249 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1959A002 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x5A2F3D09 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x86A952C4 EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0xA2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420656E6F756768000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x496 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x4E1 CALLER DUP4 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x540 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x532 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x524 PUSH5 0xE8D4A51000 PUSH2 0x516 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x55F DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x59A PUSH5 0xE8D4A51000 PUSH2 0x58C PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x6F7 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x744 CALLER ADDRESS DUP5 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFEB SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x76C JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x5 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x834 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x826 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x818 PUSH5 0xE8D4A51000 PUSH2 0x80A PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x853 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x88E PUSH5 0xE8D4A51000 PUSH2 0x880 PUSH1 0x2 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x9B6 CALLER DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER GT PUSH2 0xA3D JUMPI PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xB1D JUMPI NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xBA1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2E PUSH1 0x2 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB47 PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB8A PUSH2 0xB76 DUP5 PUSH2 0xB68 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD SLOAD PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x0 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xCD1 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 PUSH2 0xCE6 DUP6 PUSH1 0x0 ADD SLOAD NUMBER PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCFF PUSH1 0x1 SLOAD DUP4 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD3D PUSH2 0xD2E DUP5 PUSH2 0xD20 PUSH5 0xE8D4A51000 DUP6 PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xD9C DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xD8E DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0xD80 PUSH5 0xE8D4A51000 PUSH2 0xD72 DUP9 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0xE49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xECF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0xE6D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x160A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF11 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x11F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A6 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1101 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT PUSH2 0x10D1 JUMPI PUSH2 0x10CA DUP4 DUP4 PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 LT PUSH2 0x10E3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x10F8 DUP4 PUSH1 0x7 SLOAD PUSH2 0xF19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1163 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1376 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x11EB JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x129C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1261 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1246 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x12A8 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1328 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x130D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1355 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1385 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x138E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1399 DUP6 PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x145B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x14D7 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x158C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x14EA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1551 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1536 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x157E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 SELFBALANCE 0xF8 0xD2 ORIGIN 0xD7 SWAP9 DUP3 MOD PUSH30 0x3922217150F8D0C56FF38A1EC9917E4478D74B3C3399BA64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "19027:5222:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19696:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19922:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23312:596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19849:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19615:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;19507:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;19566:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22571:691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19770:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;23976:270;;;:::i;:::-;;20566:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21898:604;;;:::i;:::-;;21100:725;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19696:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19922:28::-;;;;:::o;23312:596::-;23383:1;23373:7;:11;23364:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23407:21;23431:8;:20;23440:10;23431:20;;;;;;;;;;;;;;;23407:44;;23484:7;23469:4;:11;;;:22;;23461:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23527:12;:10;:12::i;:::-;23549:48;23576:10;23589:7;23549:5;;;;;;;;;;:18;;;;:48;;;;;:::i;:::-;23629:98;23708:4;:18;;;23629:74;23687:4;:15;;;23629:53;23677:4;23629:43;23645:8;:26;;;23629:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;:57;;:74;;;;:::i;:::-;:78;;:98;;;;:::i;:::-;23608:4;:18;;:119;;;;23751:24;23767:7;23751:4;:11;;;:15;;:24;;;;:::i;:::-;23737:4;:11;;:38;;;;23803:53;23851:4;23803:43;23819:8;:26;;;23803:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;23785:4;:15;;:71;;;;23881:10;23872:29;;;23893:7;23872:29;;;;;;;;;;;;;;;;;;23312:596;;:::o;19849:25::-;;;;:::o;19615:24::-;;;;;;;;;;;;;;:::o;19507:19::-;;;;;;;;;;;;:::o;19566:29::-;;;;:::o;22571:691::-;22641:1;22631:7;:11;22622:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22665:21;22689:8;:20;22698:10;22689:20;;;;;;;;;;;;;;;22665:44;;22720:12;:10;:12::i;:::-;22742:67;22773:10;22794:4;22801:7;22742:5;;;;;;;;;;:22;;;;:67;;;;;;:::i;:::-;22838:1;22823:4;:11;;;:16;:40;;;;;22862:1;22843:4;:15;;;:20;22823:40;:66;;;;;22888:1;22867:4;:18;;;:22;22823:66;22819:134;;;22905:11;22930:10;22905:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22819:134;22984:98;23063:4;:18;;;22984:74;23042:4;:15;;;22984:53;23032:4;22984:43;23000:8;:26;;;22984:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;:57;;:74;;;;:::i;:::-;:78;;:98;;;;:::i;:::-;22963:4;:18;;:119;;;;23106:24;23122:7;23106:4;:11;;;:15;;:24;;;;:::i;:::-;23092:4;:11;;:38;;;;23158:53;23206:4;23158:43;23174:8;:26;;;23158:4;:11;;;:15;;:43;;;;:::i;:::-;:47;;:53;;;;:::i;:::-;23140:4;:15;;:71;;;;23235:10;23227:28;;;23247:7;23227:28;;;;;;;;;;;;;;;;;;22571:691;;:::o;19770:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23976:270::-;24022:21;24046:8;:20;24055:10;24046:20;;;;;;;;;;;;;;;24022:44;;24076:52;24103:10;24116:4;:11;;;24076:5;;;;;;;;;;:18;;;;:52;;;;;:::i;:::-;24161:10;24143:42;;;24173:4;:11;;;24143:42;;;;;;;;;;;;;;;;;;24209:1;24195:4;:11;;:15;;;;24238:1;24220:4;:15;;:19;;;;23976:270;:::o;20566:99::-;20614:7;20640:11;:18;;;;20633:25;;20566:99;:::o;21898:604::-;21957:8;:24;;;21941:12;:40;21937:77;;21997:7;;21937:77;22023:19;22045:5;;;;;;;;;;;:15;;;22069:4;22045:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22023:52;;22104:1;22089:11;:16;22085:106;;;22148:12;22121:8;:24;;:39;;;;22174:7;;;22085:106;22200:18;22221:53;22235:8;:24;;;22261:12;22221:13;:53::i;:::-;22200:74;;22284:19;22306:30;22321:14;;22306:10;:14;;:30;;;;:::i;:::-;22284:52;;22376:70;22407:38;22433:11;22407:21;22423:4;22407:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;22376:8;:26;;;:30;;:70;;;;:::i;:::-;22347:8;:26;;:99;;;;22483:12;22456:8;:24;;:39;;;;21898:604;;;;:::o;21100:725::-;21161:7;21180:21;21204:8;21180:32;;21222:21;21246:8;:15;21255:5;21246:15;;;;;;;;;;;;;;;21222:39;;21271:25;21299:4;:22;;;21271:50;;21331:20;21354:5;;;;;;;;;;;:15;;;21378:4;21354:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21331:53;;21413:4;:20;;;21398:12;:35;:56;;;;;21453:1;21437:12;:17;;21398:56;21394:319;;;21470:18;21491:49;21505:4;:20;;;21527:12;21491:13;:49::i;:::-;21470:70;;21554:19;21576:30;21591:14;;21576:10;:14;;:30;;;;:::i;:::-;21554:52;;21640:62;21662:39;21688:12;21662:21;21678:4;21662:11;:15;;:21;;;;:::i;:::-;:25;;:39;;;;:::i;:::-;21640:17;:21;;:62;;;;:::i;:::-;21620:82;;21394:319;;;21729:89;21799:4;:18;;;21729:65;21778:4;:15;;;21729:44;21768:4;21729:34;21745:17;21729:4;:11;;;:15;;:34;;;;:::i;:::-;:38;;:44;;;;:::i;:::-;:48;;:65;;;;:::i;:::-;:69;;:89;;;;:::i;:::-;21722:96;;;;;;21100:725;;;:::o;15642:205::-;15754:86;15774:5;15804:23;;;15829:2;15833:5;15781:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15754:19;:86::i;:::-;15642:205;;;:::o;2248:459::-;2306:7;2552:1;2547;:6;2543:45;;;2576:1;2569:8;;;;2543:45;2598:9;2614:1;2610;:5;2598:17;;2642:1;2637;2633;:5;;;;;;:10;2625:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2699:1;2692:8;;;2248:459;;;;;:::o;3169:130::-;3227:7;3253:39;3257:1;3260;3253:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3246:46;;3169:130;;;;:::o;1359:134::-;1417:7;1443:43;1447:1;1450;1443:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1436:50;;1359:134;;;;:::o;912:176::-;970:7;989:9;1005:1;1001;:5;989:17;;1029:1;1024;:6;;1016:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:1;1073:8;;;912:176;;;;:::o;15853:241::-;15991:96;16011:5;16041:27;;;16070:4;16076:2;16080:5;16018:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15991:19;:96::i;:::-;15853:241;;;;:::o;20738:300::-;20812:7;20842:13;;20835:3;:20;20831:201;;20878:14;20886:5;20878:3;:7;;:14;;;;:::i;:::-;20871:21;;;;20831:201;20922:13;;20913:5;:22;20909:123;;20958:1;20951:8;;;;20909:123;20997:24;21015:5;20997:13;;:17;;:24;;;;:::i;:::-;20990:31;;20738:300;;;;;:::o;18110:763::-;18529:23;18555:69;18583:4;18555:69;;;;;;;;;;;;;;;;;18563:5;18555:27;;;;:69;;;;;:::i;:::-;18529:95;;18658:1;18638:10;:17;:21;18634:233;;;18790:10;18779:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18771:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18634:233;18110:763;;;:::o;3781:302::-;3897:7;3928:1;3924;:5;3931:12;3916:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3954:9;3970:1;3966;:5;;;;;;3954:17;;4075:1;4068:8;;;3781:302;;;;;:::o;1784:217::-;1900:7;1932:1;1927;:6;;1935:12;1919:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1958:9;1974:1;1970;:5;1958:17;;1993:1;1986:8;;;1784:217;;;;;:::o;12649:224::-;12782:12;12813:53;12836:6;12844:4;12850:1;12853:12;12813:22;:53::i;:::-;12806:60;;12649:224;;;;;:::o;14094:994::-;14262:12;14294:18;14305:6;14294:10;:18::i;:::-;14286:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14417:12;14431:23;14458:6;:11;;14477:8;14487:4;14458:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14416:76;;;;14506:7;14502:580;;;14536:10;14529:17;;;;;;14502:580;14667:1;14647:10;:17;:21;14643:429;;;14905:10;14899:17;14965:15;14952:10;14948:2;14944:19;14937:44;14854:145;15044:12;15037:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14094:994;;;;;;;:::o;9577:630::-;9637:4;9895:16;9921:19;9943:66;9921:88;;;;10122:7;10110:20;10098:32;;10169:11;10157:8;:23;;:42;;;;;10196:3;10184:15;;:8;:15;;10157:42;10149:51;;;;9577:630;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1145600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressLength()": "1065",
								"addressList(uint256)": "2078",
								"bonusEndBlock()": "1028",
								"deposit(uint256)": "infinite",
								"emergencyWithdraw()": "infinite",
								"pendingReward(address)": "infinite",
								"poolInfo()": "1940",
								"rewardPerBlock()": "1028",
								"startBlock()": "1072",
								"syrup()": "1155",
								"updatePool()": "infinite",
								"userInfo(address)": "2848",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"getMultiplier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19027,
									"end": 24249,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20295,
									"end": 20301,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20287,
									"end": 20292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20287,
									"end": 20301,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20328,
									"end": 20343,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20311,
									"end": 20325,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20311,
									"end": 20343,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20311,
									"end": 20343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20311,
									"end": 20343,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20311,
									"end": 20343,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20366,
									"end": 20377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20353,
									"end": 20363,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20353,
									"end": 20377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20353,
									"end": 20377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20353,
									"end": 20377,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20353,
									"end": 20377,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20403,
									"end": 20412,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20387,
									"end": 20400,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20387,
									"end": 20412,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20387,
									"end": 20412,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20387,
									"end": 20412,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20387,
									"end": 20412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20498,
									"end": 20508,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20498,
									"end": 20508,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20541,
									"end": 20542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20458,
									"end": 20553,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20455,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20447,
									"end": 20553,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20140,
									"end": 20560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19027,
									"end": 24249,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047f8d232d79882067d3922217150f8d0c56ff38a1ec9917e4478d74b3c3399ba64736f6c634300060c0033",
									".code": [
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "DB2E21BC"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "DB2E21BC"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "DC881888"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "E3161DDD"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "F40F0F52"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "8AE39CAC"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "B810FB43"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "1AED6553"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "5A2F3D09"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "86A952C4"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19027,
											"end": 24249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19696,
											"end": 19741,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19922,
											"end": 19950,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23383,
											"end": 23384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23373,
											"end": 23380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23373,
											"end": 23384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "616D6F756E742030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23364,
											"end": 23397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23407,
											"end": 23428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23431,
											"end": 23439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23440,
											"end": 23450,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23431,
											"end": 23451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23407,
											"end": 23451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23407,
											"end": 23451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 23491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23469,
											"end": 23480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23480,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "77697468647261773A206E6F7420656E6F756768000000000000000000000000"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23461,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23527,
											"end": 23539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23527,
											"end": 23537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 23527,
											"end": 23539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23527,
											"end": 23539,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23527,
											"end": 23539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23576,
											"end": 23586,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23589,
											"end": 23596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23549,
											"end": 23554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23549,
											"end": 23567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23549,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23549,
											"end": 23597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23708,
											"end": 23712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23726,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23708,
											"end": 23726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23708,
											"end": 23726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23687,
											"end": 23691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23687,
											"end": 23702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23677,
											"end": 23681,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23645,
											"end": 23653,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23645,
											"end": 23671,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23645,
											"end": 23671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23633,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23629,
											"end": 23640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23629,
											"end": 23644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23629,
											"end": 23672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23629,
											"end": 23676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23629,
											"end": 23682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23629,
											"end": 23686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23629,
											"end": 23703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23629,
											"end": 23707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23629,
											"end": 23727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23626,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23608,
											"end": 23626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23727,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23767,
											"end": 23774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23751,
											"end": 23762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23751,
											"end": 23766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23751,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23737,
											"end": 23748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23775,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23851,
											"end": 23855,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23819,
											"end": 23827,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23819,
											"end": 23845,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23819,
											"end": 23845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23819,
											"end": 23845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23807,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23803,
											"end": 23814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23803,
											"end": 23818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23803,
											"end": 23846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23803,
											"end": 23850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23803,
											"end": 23856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23800,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23785,
											"end": 23800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23881,
											"end": 23891,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 23893,
											"end": 23900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23872,
											"end": 23901,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23312,
											"end": 23908,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 19874,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19615,
											"end": 19639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19507,
											"end": 19526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19566,
											"end": 19595,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22641,
											"end": 22642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22631,
											"end": 22638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22642,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "616D6F756E742030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22622,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22665,
											"end": 22686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22689,
											"end": 22697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22698,
											"end": 22708,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22689,
											"end": 22709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22665,
											"end": 22709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22665,
											"end": 22709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22720,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22720,
											"end": 22730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22720,
											"end": 22732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22720,
											"end": 22732,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22720,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 22773,
											"end": 22783,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22794,
											"end": 22798,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22801,
											"end": 22808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22742,
											"end": 22747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22742,
											"end": 22764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22742,
											"end": 22764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 22742,
											"end": 22809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22823,
											"end": 22827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22823,
											"end": 22834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22839,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22862,
											"end": 22863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22843,
											"end": 22847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22843,
											"end": 22858,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22843,
											"end": 22858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22843,
											"end": 22858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22843,
											"end": 22863,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 22823,
											"end": 22863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22888,
											"end": 22889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22867,
											"end": 22871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22885,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22867,
											"end": 22885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22867,
											"end": 22889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 22823,
											"end": 22889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22819,
											"end": 22953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22819,
											"end": 22953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 22819,
											"end": 22953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22916,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22930,
											"end": 22940,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22905,
											"end": 22942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22819,
											"end": 22953,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 22819,
											"end": 22953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 23063,
											"end": 23067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23081,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23063,
											"end": 23081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23063,
											"end": 23081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23042,
											"end": 23046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23057,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23042,
											"end": 23057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23042,
											"end": 23057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23032,
											"end": 23036,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23000,
											"end": 23008,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23000,
											"end": 23026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23000,
											"end": 23026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23000,
											"end": 23026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 22988,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 22995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22984,
											"end": 22995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 22995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 22999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22984,
											"end": 22999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22984,
											"end": 23027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22984,
											"end": 23031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22984,
											"end": 23037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 22984,
											"end": 23041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22984,
											"end": 23058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22984,
											"end": 23062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22984,
											"end": 23082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 22981,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22963,
											"end": 22981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23082,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23122,
											"end": 23129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23106,
											"end": 23117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 23106,
											"end": 23121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23106,
											"end": 23130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23092,
											"end": 23103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23130,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23206,
											"end": 23210,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23174,
											"end": 23182,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23174,
											"end": 23200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23174,
											"end": 23200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23174,
											"end": 23200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23162,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23158,
											"end": 23169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23158,
											"end": 23173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23158,
											"end": 23201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23158,
											"end": 23205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23158,
											"end": 23211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23140,
											"end": 23144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23140,
											"end": 23155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23140,
											"end": 23155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23140,
											"end": 23211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23140,
											"end": 23211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23140,
											"end": 23211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23140,
											"end": 23211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23235,
											"end": 23245,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 23247,
											"end": 23254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23255,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22571,
											"end": 23262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19770,
											"end": 19798,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24022,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24046,
											"end": 24054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24055,
											"end": 24065,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24022,
											"end": 24066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24022,
											"end": 24066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24103,
											"end": 24113,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24116,
											"end": 24120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24116,
											"end": 24127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24116,
											"end": 24127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24116,
											"end": 24127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24076,
											"end": 24081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24076,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24161,
											"end": 24171,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "PUSH",
											"source": 0,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 24173,
											"end": 24177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24173,
											"end": 24184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24173,
											"end": 24184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24173,
											"end": 24184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24143,
											"end": 24185,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 24209,
											"end": 24210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24195,
											"end": 24199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24195,
											"end": 24206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24210,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24195,
											"end": 24210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24238,
											"end": 24239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24220,
											"end": 24224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24235,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24220,
											"end": 24235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24239,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24220,
											"end": 24239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23976,
											"end": 24246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20614,
											"end": 20621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20640,
											"end": 20651,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20633,
											"end": 20658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20633,
											"end": 20658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20566,
											"end": 20665,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 21965,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21957,
											"end": 21981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21957,
											"end": 21981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 21981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21941,
											"end": 21953,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 21941,
											"end": 21981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21937,
											"end": 22014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21937,
											"end": 22014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21997,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21997,
											"end": 22004,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21937,
											"end": 22014,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 21937,
											"end": 22014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22023,
											"end": 22042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22045,
											"end": 22050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22045,
											"end": 22060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22060,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22069,
											"end": 22073,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22045,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22023,
											"end": 22075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22023,
											"end": 22075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22104,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22089,
											"end": 22100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22089,
											"end": 22105,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22085,
											"end": 22191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22085,
											"end": 22191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22085,
											"end": 22191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22148,
											"end": 22160,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22121,
											"end": 22145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22121,
											"end": 22145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22160,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22121,
											"end": 22160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 22174,
											"end": 22181,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22085,
											"end": 22191,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22085,
											"end": 22191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22200,
											"end": 22218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22221,
											"end": 22274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22235,
											"end": 22243,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22235,
											"end": 22259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22235,
											"end": 22259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22235,
											"end": 22259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22261,
											"end": 22273,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22221,
											"end": 22234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22221,
											"end": 22274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22221,
											"end": 22274,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22221,
											"end": 22274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22200,
											"end": 22274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22200,
											"end": 22274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22284,
											"end": 22303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22321,
											"end": 22335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22321,
											"end": 22335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22306,
											"end": 22316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22306,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22306,
											"end": 22320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22306,
											"end": 22336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22284,
											"end": 22336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22284,
											"end": 22336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 22433,
											"end": 22444,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 22423,
											"end": 22427,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 22407,
											"end": 22418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22407,
											"end": 22422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 22407,
											"end": 22428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22407,
											"end": 22432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 22407,
											"end": 22445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22384,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22376,
											"end": 22402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22376,
											"end": 22402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 22376,
											"end": 22406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 22376,
											"end": 22446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22355,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22347,
											"end": 22373,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22347,
											"end": 22373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22347,
											"end": 22446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22483,
											"end": 22495,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22464,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22456,
											"end": 22480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22456,
											"end": 22495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 22502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21161,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21180,
											"end": 21201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21204,
											"end": 21212,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21222,
											"end": 21243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21246,
											"end": 21254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21255,
											"end": 21260,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21246,
											"end": 21261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21222,
											"end": 21261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21222,
											"end": 21261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21271,
											"end": 21296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21299,
											"end": 21303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21299,
											"end": 21321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21271,
											"end": 21321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21271,
											"end": 21321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21331,
											"end": 21351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21354,
											"end": 21359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21354,
											"end": 21369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21369,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 21378,
											"end": 21382,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21331,
											"end": 21384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21331,
											"end": 21384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21413,
											"end": 21417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21413,
											"end": 21433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21413,
											"end": 21433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21413,
											"end": 21433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21410,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21433,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21453,
											"end": 21454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21437,
											"end": 21449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21437,
											"end": 21454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 21398,
											"end": 21454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21470,
											"end": 21488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21491,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21505,
											"end": 21509,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21505,
											"end": 21525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21505,
											"end": 21525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21505,
											"end": 21525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21527,
											"end": 21539,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 21491,
											"end": 21504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21491,
											"end": 21540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21491,
											"end": 21540,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21491,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21470,
											"end": 21540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21470,
											"end": 21540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 21573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21591,
											"end": 21605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21591,
											"end": 21605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21576,
											"end": 21590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21576,
											"end": 21606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 21606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 21606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21678,
											"end": 21682,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 21662,
											"end": 21673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21662,
											"end": 21677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21662,
											"end": 21687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21662,
											"end": 21701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21657,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 21640,
											"end": 21661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21640,
											"end": 21702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21620,
											"end": 21702,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21620,
											"end": 21702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 21394,
											"end": 21713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21799,
											"end": 21803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21799,
											"end": 21817,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21799,
											"end": 21817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21799,
											"end": 21817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21778,
											"end": 21782,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21778,
											"end": 21793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21778,
											"end": 21793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21768,
											"end": 21772,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21745,
											"end": 21762,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21733,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21729,
											"end": 21740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21740,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21729,
											"end": 21744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21729,
											"end": 21763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21729,
											"end": 21767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21729,
											"end": 21773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 21729,
											"end": 21777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21729,
											"end": 21794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 21729,
											"end": 21798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21729,
											"end": 21818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21722,
											"end": 21818,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21722,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21722,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21722,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21722,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21722,
											"end": 21818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21100,
											"end": 21825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15642,
											"end": 15847,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 15642,
											"end": 15847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15774,
											"end": 15779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15804,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 15804,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15804,
											"end": 15827,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15829,
											"end": 15831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15833,
											"end": 15838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15781,
											"end": 15839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15754,
											"end": 15840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15754,
											"end": 15840,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15754,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15642,
											"end": 15847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15642,
											"end": 15847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15642,
											"end": 15847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15642,
											"end": 15847,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2547,
											"end": 2553,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 2577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2569,
											"end": 2577,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2588,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2625,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3253,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3299,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1447,
											"end": 1448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1443,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1493,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 970,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1016,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1088,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16011,
											"end": 16016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16041,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16041,
											"end": 16068,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16041,
											"end": 16068,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16070,
											"end": 16074,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16076,
											"end": 16078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16080,
											"end": 16085,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15991,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15991,
											"end": 16087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15991,
											"end": 16087,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15991,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 16094,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20812,
											"end": 20819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20842,
											"end": 20855,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20842,
											"end": 20855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20835,
											"end": 20838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20835,
											"end": 20855,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20831,
											"end": 21032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20886,
											"end": 20891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 20878,
											"end": 20885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20871,
											"end": 20892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20871,
											"end": 20892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20871,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 20871,
											"end": 20892,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 21032,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20831,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20922,
											"end": 20935,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20922,
											"end": 20935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20913,
											"end": 20918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20913,
											"end": 20935,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20909,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20909,
											"end": 21032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20958,
											"end": 20959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20951,
											"end": 20959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 20959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 20959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 20951,
											"end": 20959,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20909,
											"end": 21032,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20909,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 21015,
											"end": 21020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20997,
											"end": 21010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 20997,
											"end": 21014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 20997,
											"end": 21021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20738,
											"end": 21038,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18110,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 18110,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18552,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18583,
											"end": 18587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18563,
											"end": 18568,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18555,
											"end": 18582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18555,
											"end": 18582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18555,
											"end": 18624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18529,
											"end": 18624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18638,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18638,
											"end": 18655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18638,
											"end": 18659,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18634,
											"end": 18867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18634,
											"end": 18867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18634,
											"end": 18867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18790,
											"end": 18800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18779,
											"end": 18809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH data",
											"source": 0,
											"value": "21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 18771,
											"end": 18856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18634,
											"end": 18867,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 18634,
											"end": 18867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18873,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3931,
											"end": 3943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3781,
											"end": 4083,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 1975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 2001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12782,
											"end": 12794,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12813,
											"end": 12866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12836,
											"end": 12842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12844,
											"end": 12848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12850,
											"end": 12851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12813,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12813,
											"end": 12866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12813,
											"end": 12866,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12813,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12806,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12806,
											"end": 12866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12873,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14262,
											"end": 14274,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14305,
											"end": 14311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14294,
											"end": 14304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14286,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14417,
											"end": 14429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14431,
											"end": 14454,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14458,
											"end": 14464,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14458,
											"end": 14469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14485,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14416,
											"end": 14492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14416,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14416,
											"end": 14492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14416,
											"end": 14492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14506,
											"end": 14513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 15082,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 15082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14502,
											"end": 15082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14536,
											"end": 14546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14529,
											"end": 14546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14529,
											"end": 14546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14529,
											"end": 14546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14529,
											"end": 14546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14529,
											"end": 14546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14529,
											"end": 14546,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14502,
											"end": 15082,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14502,
											"end": 15082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14667,
											"end": 14668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14647,
											"end": 14657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14647,
											"end": 14664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14647,
											"end": 14668,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 15072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14643,
											"end": 15072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14905,
											"end": 14915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14899,
											"end": 14916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14965,
											"end": 14980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14944,
											"end": 14963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14937,
											"end": 14981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14854,
											"end": 14999,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14854,
											"end": 14999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15044,
											"end": 15056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15037,
											"end": 15057,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14094,
											"end": 15088,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9577,
											"end": 10207,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9577,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9637,
											"end": 9641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9895,
											"end": 9911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9921,
											"end": 9940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 9921,
											"end": 10009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 10009,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9921,
											"end": 10009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9921,
											"end": 10009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10122,
											"end": 10129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10130,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10098,
											"end": 10130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10169,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10180,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10196,
											"end": 10199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10199,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10157,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10149,
											"end": 10200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10149,
											"end": 10200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10149,
											"end": 10200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10149,
											"end": 10200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9577,
											"end": 10207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9577,
											"end": 10207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9577,
											"end": 10207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9577,
											"end": 10207,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addressLength()": "dc881888",
							"addressList(uint256)": "b810fb43",
							"bonusEndBlock()": "1aed6553",
							"deposit(uint256)": "b6b55f25",
							"emergencyWithdraw()": "db2e21bc",
							"pendingReward(address)": "f40f0f52",
							"poolInfo()": "5a2f3d09",
							"rewardPerBlock()": "8ae39cac",
							"startBlock()": "48cd4cb1",
							"syrup()": "86a952c4",
							"updatePool()": "e3161ddd",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPending\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":\"SousChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol\":{\"keccak256\":\"0x66d2c06d73c00e170a8d23e1e26deb1f6f2356f0eeb010891cd102746b6ad457\",\"urls\":[\"bzz-raw://1d4a361d946a893a9225a0a8041afc5c3e761dfb83557d6e6d182f656110ce7e\",\"dweb:/ipfs/QmbydBEgcyJVUsWJNzwTf76VbAMD6h9GW3U8UwUmF35S7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 797,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "syrup",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IBEP20)367"
							},
							{
								"astId": 799,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "rewardPerBlock",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 801,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(PoolInfo)795_storage"
							},
							{
								"astId": 805,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(UserInfo)790_storage)"
							},
							{
								"astId": 808,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "addressList",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 810,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 812,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
								"label": "bonusEndBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)367": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)790_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SousChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)790_storage"
							},
							"t_struct(PoolInfo)795_storage": {
								"encoding": "inplace",
								"label": "struct SousChef.PoolInfo",
								"members": [
									{
										"astId": 792,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 794,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
										"label": "accRewardPerShare",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)790_storage": {
								"encoding": "inplace",
								"label": "struct SousChef.UserInfo",
								"members": [
									{
										"astId": 785,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 787,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 789,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol:SousChef",
										"label": "rewardPending",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/contracts/SousChef.sol",
					"exportedSymbols": {
						"Address": [
							569
						],
						"IBEP20": [
							367
						],
						"SafeBEP20": [
							777
						],
						"SafeMath": [
							268
						],
						"SousChef": [
							1324
						]
					},
					"id": 1325,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "66:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "96:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "979:109:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "989:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1005:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1001:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "989:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1024:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1029:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1024:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1032:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1016:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1080:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1073:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "683:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "925:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "936:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "924:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 268,
									"src": "912:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1426:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1447:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1450:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1453:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1443:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1443:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1436:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1094:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1372:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1371:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 45,
												"src": "1417:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1416:9:0"
									},
									"scope": 268,
									"src": "1359:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1909:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "1927:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1932:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1927:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1935:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1919:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 72,
														"src": "1958:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1970:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1974:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1970:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1958:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "1993:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "1986:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1499:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1806:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1825:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1844:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1796:80:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "1900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1899:9:0"
									},
									"scope": 268,
									"src": "1784:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2315:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2552:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2543:45:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2555:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2576:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2569:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 107,
														"src": "2598:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2598:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2633:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2637:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2633:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2642:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2633:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2645:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2625:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2625:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2699:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2692:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2007:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2261:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2272:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2260:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2305:9:0"
									},
									"scope": 268,
									"src": "2248:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3236:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3257:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3260:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3253:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3246:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2713:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3182:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3193:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3181:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3227:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3226:9:0"
									},
									"scope": 268,
									"src": "3169:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3906:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "3924:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3928:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3924:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3916:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "3916:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 152,
														"src": "3954:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3954:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3970:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3966:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3954:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4068:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3305:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3803:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3793:80:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "3897:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:9:0"
									},
									"scope": 268,
									"src": "3781:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4601:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4622:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4625:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4618:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4611:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4089:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "4547:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "4558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4546:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "4592:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4591:9:0"
									},
									"scope": 268,
									"src": "4534:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5258:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5276:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5281:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5276:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5284:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5268:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5268:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5314:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5318:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5314:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5307:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4668:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5155:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5174:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5193:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5145:80:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "5249:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5248:9:0"
									},
									"scope": 268,
									"src": "5133:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5401:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "5411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "5415:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 205,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "5419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5415:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 208,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5427:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5415:13:0",
														"trueExpression": {
															"argumentTypes": null,
															"id": 207,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5411:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5411:17:0"
											}
										]
									},
									"documentation": null,
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "5345:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "5356:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5344:22:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "5390:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5389:11:0"
									},
									"scope": 268,
									"src": "5332:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "5609:242:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 220,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "5623:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5627:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 256,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5807:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5812:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5807:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 264,
													"nodeType": "IfStatement",
													"src": "5803:42:0",
													"trueBody": {
														"id": 263,
														"nodeType": "Block",
														"src": "5815:30:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 259,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "5829:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5833:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5829:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 262,
																"nodeType": "ExpressionStatement",
																"src": "5829:5:0"
															}
														]
													}
												},
												"id": 265,
												"nodeType": "IfStatement",
												"src": "5619:226:0",
												"trueBody": {
													"id": 255,
													"nodeType": "Block",
													"src": "5630:167:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 223,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "5644:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 224,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5648:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5644:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 226,
															"nodeType": "ExpressionStatement",
															"src": "5644:5:0"
														},
														{
															"assignments": [
																228
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 228,
																	"mutability": "mutable",
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 255,
																	"src": "5663:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 227,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5663:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 234,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 229,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "5675:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5679:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5675:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5683:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5675:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5663:21:0"
														},
														{
															"body": {
																"id": 253,
																"nodeType": "Block",
																"src": "5712:75:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 238,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "5730:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 239,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "5734:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5730:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 241,
																		"nodeType": "ExpressionStatement",
																		"src": "5730:5:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 242,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "5753:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 247,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 245,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 243,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 215,
																									"src": "5758:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 244,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 228,
																									"src": "5762:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5758:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 246,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 228,
																								"src": "5766:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5758:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 248,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5757:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5771:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "5757:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5753:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 252,
																		"nodeType": "ExpressionStatement",
																		"src": "5753:19:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 235,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "5705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 236,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "5709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5705:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 254,
															"nodeType": "WhileStatement",
															"src": "5698:89:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "5564:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5563:11:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "5598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5597:11:0"
									},
									"scope": 268,
									"src": "5550:301:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1325,
							"src": "660:5193:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 367,
							"linearizedBaseContracts": [
								367
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "5882:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5973:2:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "5999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5998:9:0"
									},
									"scope": 367,
									"src": "5953:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "6014:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6087:2:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6113:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 277,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6112:7:0"
									},
									"scope": 367,
									"src": "6070:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "6126:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6195:2:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "6221:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6220:15:0"
									},
									"scope": 367,
									"src": "6180:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "6242:47:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6307:2:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "6333:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6332:15:0"
									},
									"scope": 367,
									"src": "6294:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "6354:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:2:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 298,
												"src": "6454:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6453:9:0"
									},
									"scope": 367,
									"src": "6411:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "6469:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 306,
												"src": "6565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6564:17:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 306,
												"src": "6605:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6604:9:0"
									},
									"scope": 367,
									"src": "6546:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "6620:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "6852:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "6871:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6851:35:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "6905:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6904:6:0"
									},
									"scope": 367,
									"src": "6834:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "6917:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "7205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "7221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7204:33:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "7261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7260:9:0"
									},
									"scope": 367,
									"src": "7186:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "7276:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "7940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "7957:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7939:33:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "7991:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7990:6:0"
									},
									"scope": 367,
									"src": "7923:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "8003:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8359:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8386:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8325:81:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "8425:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8424:6:0"
									},
									"scope": 367,
									"src": "8304:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "8437:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 357,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "8615:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "8637:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "8657:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8614:57:0"
									},
									"src": "8600:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "8678:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 366,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "8846:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "8869:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "8894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8845:63:0"
									},
									"src": "8831:78:0"
								}
							],
							"scope": 1325,
							"src": "5859:3052:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "8917:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 569,
							"linearizedBaseContracts": [
								569
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "9643:564:0",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 393,
														"src": "9895:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 376,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9895:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9895:16:0"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 393,
														"src": "9921:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 379,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9943:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9921:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10084:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10098:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "10122:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "10110:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "10110:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "10098:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "10122:7:0",
														"valueSize": 1
													},
													{
														"declaration": 377,
														"isOffset": false,
														"isSlot": false,
														"src": "10098:8:0",
														"valueSize": 1
													}
												],
												"id": 383,
												"nodeType": "InlineAssembly",
												"src": "10075:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "10157:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 385,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "10169:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "10157:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 387,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "10184:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10196:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "10184:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10157:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 391,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10156:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 392,
												"nodeType": "Return",
												"src": "10149:51:0"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "9007:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "9597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9596:17:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "9637:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9636:6:0"
									},
									"scope": 569,
									"src": "9577:630:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "11195:318:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 405,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "11221:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		],
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11213:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 403,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11213:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11213:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11213:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "11238:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11213:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11246:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11205:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "11205:73:0"
											},
											{
												"assignments": [
													414,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 427,
														"src": "11367:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 413,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 421,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11415:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 415,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "11385:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11385:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 417,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "11407:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11385:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11385:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11366:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 423,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "11436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11445:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11428:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "11428:78:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "10213:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11143:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11143:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "11170:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11142:43:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11195:0:0"
									},
									"scope": 569,
									"src": "11124:389:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "12343:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 439,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "12373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "12381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12387:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 438,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															445,
															465
														],
														"referencedDeclaration": 465,
														"src": "12360:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 437,
												"id": 443,
												"nodeType": "Return",
												"src": "12353:67:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "11519:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "12276:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "12292:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12292:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12275:35:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "12329:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12328:14:0"
									},
									"scope": 569,
									"src": "12254:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "12796:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "12836:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 459,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "12844:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12850:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 461,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "12853:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 457,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "12813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12813:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 456,
												"id": 463,
												"nodeType": "Return",
												"src": "12806:60:0"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "12433:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "12680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "12704:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "12731:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12731:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12670:93:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "12782:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12782:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12781:14:0"
									},
									"scope": 569,
									"src": "12649:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13378:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "13417:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13431:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13438:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 477,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															485,
															518
														],
														"referencedDeclaration": 518,
														"src": "13395:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13395:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 476,
												"id": 483,
												"nodeType": "Return",
												"src": "13388:94:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "12879:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13299:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13299:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13326:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13265:80:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "13364:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13363:14:0"
									},
									"scope": 569,
									"src": "13235:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "13916:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "13942:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$569",
																				"typeString": "library Address"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13934:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13934:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13934:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13934:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "13959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13934:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13966:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13926:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "13926:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "14047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "14055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 513,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "14061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 514,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "14068:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 510,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "14024:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14024:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 498,
												"id": 516,
												"nodeType": "Return",
												"src": "14017:64:0"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "13495:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "13777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "13801:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13801:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "13828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "13851:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13851:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13767:116:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "13902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13901:14:0"
									},
									"scope": 569,
									"src": "13737:351:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "14276:812:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 533,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "14305:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 532,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "14294:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14294:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14314:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14286:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "14286:60:0"
											},
											{
												"assignments": [
													539,
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 567,
														"src": "14417:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 567,
														"src": "14431:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14431:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 546,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "14487:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 542,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "14458:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14458:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 544,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "14477:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14458:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14458:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14416:76:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 549,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 539,
													"src": "14506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "14563:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 553,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "14647:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14647:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14667:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14647:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 563,
																"nodeType": "Block",
																"src": "15019:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 560,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "15044:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 559,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "15037:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15037:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 562,
																		"nodeType": "ExpressionStatement",
																		"src": "15037:20:0"
																	}
																]
															},
															"id": 564,
															"nodeType": "IfStatement",
															"src": "14643:429:0",
															"trueBody": {
																"id": 558,
																"nodeType": "Block",
																"src": "14670:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "14854:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "14876:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "14905:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "14899:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14899:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "14880:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14948:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "14952:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14944:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14944:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "14965:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "14937:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14937:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14937:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 541,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "14905:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 541,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "14952:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 557,
																		"nodeType": "InlineAssembly",
																		"src": "14845:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "14502:580:0",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "14515:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 550,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "14536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 530,
															"id": 551,
															"nodeType": "Return",
															"src": "14529:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14159:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14186:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14212:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 525,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14125:119:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "14262:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14262:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14261:14:0"
									},
									"scope": 569,
									"src": "14094:994:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1325,
							"src": "8985:6105:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "15096:457:0",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 573,
									"libraryName": {
										"contractScope": null,
										"id": 571,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "15584:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15578:27:0",
									"typeName": {
										"id": 572,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15597:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 576,
									"libraryName": {
										"contractScope": null,
										"id": 574,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 569,
										"src": "15616:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$569",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "15610:26:0",
									"typeName": {
										"id": 575,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "15744:103:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "15774:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 589,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "15804:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 316,
																		"src": "15804:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15804:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 592,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "15829:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 593,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "15833:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 587,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15781:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15781:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15781:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 585,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "15754:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15754:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "15754:86:0"
											}
										]
									},
									"documentation": null,
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "15673:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 577,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "15673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "15695:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "15715:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15663:71:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15744:0:0"
									},
									"scope": 777,
									"src": "15642:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "15981:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 610,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "16011:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 613,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "16041:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 348,
																		"src": "16041:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16041:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 616,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "16070:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 617,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "16076:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 618,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "16080:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16018:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16018:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16018:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 609,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "15991:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15991:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "15991:96:0"
											}
										]
									},
									"documentation": null,
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "15888:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 599,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "15888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "15910:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "15932:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "15952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15878:93:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15981:0:0"
									},
									"scope": 777,
									"src": "15853:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "16460:550:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "16762:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16771:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "16762:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 637,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16761:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 642,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "16802:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$777",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$777",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16794:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 640,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "16794:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16794:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 644,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 628,
																					"src": "16809:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 638,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "16778:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$367",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 326,
																				"src": "16778:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16778:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16821:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "16778:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16777:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16761:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16837:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16740:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "16740:163:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 654,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "16933:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 657,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "16963:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "16963:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16963:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 660,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "16987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "16996:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 655,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16940:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16940:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16940:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 653,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "16913:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16913:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "16913:90:0"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "16100:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "16384:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 625,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "16384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "16406:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "16431:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16374:76:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16460:0:0"
									},
									"scope": 777,
									"src": "16354:656:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "17132:197:0",
										"statements": [
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 701,
														"src": "17142:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 686,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "17209:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 681,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17189:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17181:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 679,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17181:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17181:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 683,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "17196:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 677,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "17165:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "17165:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17165:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "17165:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17165:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17142:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 690,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "17245:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "17275:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "17275:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17275:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 696,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "17299:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 697,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "17308:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 691,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17252:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17252:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17252:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 689,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "17225:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17225:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "17225:97:0"
											}
										]
									},
									"documentation": null,
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 702,
												"src": "17056:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 667,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "17056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 702,
												"src": "17078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 702,
												"src": "17103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17046:76:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17132:0:0"
									},
									"scope": 777,
									"src": "17016:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "17451:276:0",
										"statements": [
											{
												"assignments": [
													712
												],
												"declarations": [
													{
														"constant": false,
														"id": 712,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 738,
														"src": "17461:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 722,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "17541:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17560:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 717,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17508:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$777",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17500:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17500:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17500:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 719,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "17515:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "17484:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "17484:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17484:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "17484:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17484:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17461:152:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 727,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "17643:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 730,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "17673:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$367",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 336,
																		"src": "17673:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17673:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 733,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "17697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 734,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "17706:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "17650:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17650:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17650:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 726,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "17623:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17623:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "17623:97:0"
											}
										]
									},
									"documentation": null,
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "17375:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 703,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "17375:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "17397:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "17422:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17365:76:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17451:0:0"
									},
									"scope": 777,
									"src": "17335:392:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "18180:693:0",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 775,
														"src": "18529:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 747,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "18583:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18589:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 751,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "18563:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$367",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18555:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 749,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18555:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18555:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 465,
														"src": "18555:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18555:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18529:95:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 758,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "18638:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "18638:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18658:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18638:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 774,
												"nodeType": "IfStatement",
												"src": "18634:233:0",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "18661:206:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 765,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "18790:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 767,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "18803:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 766,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "18803:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 768,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "18802:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 763,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "18779:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "18779:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18779:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18811:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 762,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "18771:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18771:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "18771:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "17733:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "18139:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 741,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "18139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 776,
												"src": "18153:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18138:33:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18180:0:0"
									},
									"scope": 777,
									"src": "18110:763:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1325,
							"src": "15554:3321:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1324,
							"linearizedBaseContracts": [
								1324
							],
							"name": "SousChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 780,
									"libraryName": {
										"contractScope": null,
										"id": 778,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "19057:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$268",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19051:27:0",
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19070:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 783,
									"libraryName": {
										"contractScope": null,
										"id": 781,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 777,
										"src": "19089:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$777",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19083:27:0",
									"typeName": {
										"contractScope": null,
										"id": 782,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 367,
										"src": "19103:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$367",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "SousChef.UserInfo",
									"id": 790,
									"members": [
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 790,
											"src": "19168:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 784,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 787,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 790,
											"src": "19192:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19192:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 789,
											"mutability": "mutable",
											"name": "rewardPending",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 790,
											"src": "19220:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19220:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1324,
									"src": "19142:106:0",
									"visibility": "public"
								},
								{
									"canonicalName": "SousChef.PoolInfo",
									"id": 795,
									"members": [
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 795,
											"src": "19300:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 791,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19300:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "accRewardPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 795,
											"src": "19389:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "19389:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 1324,
									"src": "19274:203:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86a952c4",
									"id": 797,
									"mutability": "mutable",
									"name": "syrup",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19507:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$367",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 796,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 367,
										"src": "19507:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$367",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ae39cac",
									"id": 799,
									"mutability": "mutable",
									"name": "rewardPerBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19566:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a2f3d09",
									"id": 801,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19615:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
										"typeString": "struct SousChef.PoolInfo"
									},
									"typeName": {
										"contractScope": null,
										"id": 800,
										"name": "PoolInfo",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 795,
										"src": "19615:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
											"typeString": "struct SousChef.PoolInfo"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 805,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19696:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
										"typeString": "mapping(address => struct SousChef.UserInfo)"
									},
									"typeName": {
										"id": 804,
										"keyType": {
											"id": 802,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "19705:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "19696:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
											"typeString": "mapping(address => struct SousChef.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 803,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 790,
											"src": "19716:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
												"typeString": "struct SousChef.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b810fb43",
									"id": 808,
									"mutability": "mutable",
									"name": "addressList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19770:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 806,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "19770:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 807,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "19770:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 810,
									"mutability": "mutable",
									"name": "startBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19849:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19849:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aed6553",
									"id": 812,
									"mutability": "mutable",
									"name": "bonusEndBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1324,
									"src": "19922:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19922:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 818,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 818,
												"src": "19971:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 818,
												"src": "19993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19970:38:0"
									},
									"src": "19957:52:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 824,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 824,
												"src": "20029:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 824,
												"src": "20051:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20028:38:0"
									},
									"src": "20014:53:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 830,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "20096:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "20118:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20095:38:0"
									},
									"src": "20072:62:0"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "20277:283:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 841,
														"name": "syrup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "20287:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$367",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 842,
														"name": "_syrup",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "20295:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$367",
															"typeString": "contract IBEP20"
														}
													},
													"src": "20287:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "20287:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 845,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "20311:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 846,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "20328:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20311:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "20311:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 849,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "20353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 850,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "20366:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20353:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "20353:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 853,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "20387:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 854,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "20403:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20387:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20387:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 857,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "20447:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
															"typeString": "struct SousChef.PoolInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 859,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "20498:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20541:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 858,
															"name": "PoolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "20458:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolInfo_$795_storage_ptr_$",
																"typeString": "type(struct SousChef.PoolInfo storage pointer)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"lastRewardBlock",
															"accRewardPerShare"
														],
														"nodeType": "FunctionCall",
														"src": "20458:95:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_memory_ptr",
															"typeString": "struct SousChef.PoolInfo memory"
														}
													},
													"src": "20447:106:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
														"typeString": "struct SousChef.PoolInfo storage ref"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "20447:106:0"
											}
										]
									},
									"documentation": null,
									"id": 865,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "_syrup",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$367",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 831,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 367,
													"src": "20161:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$367",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20184:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20217:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "20246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20151:118:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20277:0:0"
									},
									"scope": 1324,
									"src": "20140:420:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "20623:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 870,
														"name": "addressList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "20640:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "20640:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 869,
												"id": 872,
												"nodeType": "Return",
												"src": "20633:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "dc881888",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20588:2:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "20614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20613:9:0"
									},
									"scope": 1324,
									"src": "20566:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "20821:217:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 883,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "20835:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 884,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "20842:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20835:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 892,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "20913:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 893,
															"name": "bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "20922:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20913:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 903,
														"nodeType": "Block",
														"src": "20976:56:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 900,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "21015:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 898,
																			"name": "bonusEndBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 812,
																			"src": "20997:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "20997:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20997:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 882,
																"id": 902,
																"nodeType": "Return",
																"src": "20990:31:0"
															}
														]
													},
													"id": 904,
													"nodeType": "IfStatement",
													"src": "20909:123:0",
													"trueBody": {
														"id": 897,
														"nodeType": "Block",
														"src": "20937:33:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20958:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 882,
																"id": 896,
																"nodeType": "Return",
																"src": "20951:8:0"
															}
														]
													}
												},
												"id": 905,
												"nodeType": "IfStatement",
												"src": "20831:201:0",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "20857:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 888,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "20886:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 886,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "20878:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "20878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20878:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 882,
															"id": 890,
															"nodeType": "Return",
															"src": "20871:21:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "20761:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "20776:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20760:28:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 907,
												"src": "20812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20811:9:0"
									},
									"scope": 1324,
									"src": "20738:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "21170:655:0",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21180:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
															"typeString": "struct SousChef.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 914,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 795,
															"src": "21180:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
																"typeString": "struct SousChef.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"argumentTypes": null,
													"id": 916,
													"name": "poolInfo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "21204:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
														"typeString": "struct SousChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21180:32:0"
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21222:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 918,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "21222:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 920,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "21246:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 922,
													"indexExpression": {
														"argumentTypes": null,
														"id": 921,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "21255:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21246:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21222:39:0"
											},
											{
												"assignments": [
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "accRewardPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21271:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 926,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "21299:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
															"typeString": "struct SousChef.PoolInfo storage pointer"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accRewardPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "21299:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21271:50:0"
											},
											{
												"assignments": [
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "stakedSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "21331:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 935,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "21378:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21370:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21370:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 931,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "21354:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "21354:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21354:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21331:53:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 939,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "21398:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "21398:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 941,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "21413:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
																	"typeString": "struct SousChef.PoolInfo storage pointer"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "21413:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21398:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 944,
															"name": "stakedSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "21437:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21453:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "21437:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "21398:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 978,
												"nodeType": "IfStatement",
												"src": "21394:319:0",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "21456:257:0",
													"statements": [
														{
															"assignments": [
																949
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 949,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 977,
																	"src": "21470:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 948,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21470:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 956,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 951,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "21505:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$795_storage_ptr",
																				"typeString": "struct SousChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 792,
																		"src": "21505:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 953,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "21527:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "21527:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 950,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "21491:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21491:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21470:70:0"
														},
														{
															"assignments": [
																958
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 958,
																	"mutability": "mutable",
																	"name": "tokenReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 977,
																	"src": "21554:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21554:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 963,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 961,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "21591:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 959,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "21576:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "21576:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21576:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21554:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 964,
																	"name": "accRewardPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "21620:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 972,
																					"name": "stakedSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "21688:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653132",
																							"id": 969,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "21678:4:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 967,
																							"name": "tokenReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 958,
																							"src": "21662:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 108,
																						"src": "21662:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "21662:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 125,
																				"src": "21662:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21662:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 965,
																			"name": "accRewardPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "21640:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 28,
																		"src": "21640:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21640:62:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21620:82:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "21620:82:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 992,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "21799:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardPending",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 789,
															"src": "21799:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 988,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "21778:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																			"typeString": "struct SousChef.UserInfo storage pointer"
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 787,
																	"src": "21778:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653132",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21768:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 982,
																					"name": "accRewardPerShare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 925,
																					"src": "21745:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 979,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 919,
																						"src": "21729:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																							"typeString": "struct SousChef.UserInfo storage pointer"
																						}
																					},
																					"id": 980,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 785,
																					"src": "21729:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 108,
																				"src": "21729:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21729:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 125,
																		"src": "21729:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21729:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 45,
																"src": "21729:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21729:65:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "21729:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21729:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 913,
												"id": 995,
												"nodeType": "Return",
												"src": "21722:96:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f40f0f52",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "21123:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21122:15:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "21161:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21160:9:0"
									},
									"scope": 1324,
									"src": "21100:725:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "21927:575:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1000,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "21941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "21941:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1002,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "21957:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																"typeString": "struct SousChef.PoolInfo storage ref"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "21957:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21941:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "21937:77:0",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "21983:31:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 999,
															"id": 1005,
															"nodeType": "Return",
															"src": "21997:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "syrupSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1070,
														"src": "22023:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "22069:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22061:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1010,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "22045:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "22045:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22045:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22023:52:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1018,
														"name": "syrupSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "22089:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22104:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22089:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "22085:106:0",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "22107:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1021,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "22121:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																			"typeString": "struct SousChef.PoolInfo storage ref"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "22121:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1024,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "22148:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22148:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22121:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "22121:39:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 999,
															"id": 1028,
															"nodeType": "Return",
															"src": "22174:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1070,
														"src": "22200:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1034,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "22235:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																	"typeString": "struct SousChef.PoolInfo storage ref"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "22235:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1036,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "22261:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "22261:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "22221:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22221:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22200:74:0"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "tokenReward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1070,
														"src": "22284:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1044,
															"name": "rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "22321:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1042,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "22306:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "22306:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22306:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22284:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1047,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "22347:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																"typeString": "struct SousChef.PoolInfo storage ref"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accRewardPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "22347:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1058,
																		"name": "syrupSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "22433:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653132",
																				"id": 1055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22423:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1053,
																				"name": "tokenReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1041,
																				"src": "22407:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 108,
																			"src": "22407:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22407:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 125,
																	"src": "22407:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22407:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1050,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "22376:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																		"typeString": "struct SousChef.PoolInfo storage ref"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accRewardPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 794,
																"src": "22376:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "22376:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22376:70:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22347:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "22347:99:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1063,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "22456:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																"typeString": "struct SousChef.PoolInfo storage ref"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "22456:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1066,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "22483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "22483:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22456:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "22456:39:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3161ddd",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21917:2:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21927:0:0"
									},
									"scope": 1324,
									"src": "21898:604:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "22612:650:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1077,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "22631:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22641:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22631:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616d6f756e742030",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22644:10:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															},
															"value": "amount 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22622:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "22622:33:0"
											},
											{
												"assignments": [
													1084
												],
												"declarations": [
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1186,
														"src": "22665:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1083,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "22665:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1085,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "22689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 1088,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1086,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "22698:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "22698:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22689:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22665:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1090,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "22720:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22720:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "22720:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1098,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "22773:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22773:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1096,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22765:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22765:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1103,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "22794:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SousChef_$1324",
																		"typeString": "contract SousChef"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22786:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1105,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "22801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1093,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "22742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 623,
														"src": "22742:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$367_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22742:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "22742:67:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1108,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "22823:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "22823:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22838:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22823:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "22843:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "22843:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22862:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "22823:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1117,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "22867:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardPending",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 789,
															"src": "22867:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22888:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22867:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "22823:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "22819:134:0",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "22891:62:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1127,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "22930:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "22930:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22922:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1125,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22922:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22922:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1122,
																		"name": "addressList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "22905:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "22905:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22905:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "22905:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1134,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "22963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardPending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "22963:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1151,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "23063:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardPending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 789,
																"src": "23063:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1147,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "23042:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "23042:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653132",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23032:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1140,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 801,
																							"src": "23000:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																								"typeString": "struct SousChef.PoolInfo storage ref"
																							}
																						},
																						"id": 1141,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accRewardPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 794,
																						"src": "23000:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1137,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1084,
																							"src": "22984:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																								"typeString": "struct SousChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1138,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 785,
																						"src": "22984:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 108,
																					"src": "22984:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22984:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 125,
																			"src": "22984:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22984:53:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "22984:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22984:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "22984:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22984:98:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22963:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "22963:119:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1156,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "23092:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "23092:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1162,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "23122:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1159,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "23106:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "23106:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "23106:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23106:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23092:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "23092:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1166,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "23140:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "23140:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653132",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23206:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1172,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "23174:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																				"typeString": "struct SousChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accRewardPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 794,
																		"src": "23174:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1169,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "23158:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 785,
																		"src": "23158:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "23158:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23158:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "23158:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23158:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23140:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "23140:71:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23235:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "23235:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1183,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "23247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "23227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23227:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "EmitStatement",
												"src": "23222:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6b55f25",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "22588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22587:17:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22612:0:0"
									},
									"scope": 1324,
									"src": "22571:691:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "23354:554:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1193,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "23373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23383:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23373:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616d6f756e742030",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23386:10:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															},
															"value": "amount 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
																"typeString": "literal_string \"amount 0\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23364:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "23364:33:0"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1280,
														"src": "23407:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1199,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "23407:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1201,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "23431:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 1204,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "23440:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "23440:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23431:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23407:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "23469:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "23469:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1209,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "23484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23469:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a206e6f7420656e6f756768",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23493:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48e359b719392b510b9882ac02d3c37bf1d37c62af492446a0babaa6dfb48d52",
																"typeString": "literal_string \"withdraw: not enough\""
															},
															"value": "withdraw: not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48e359b719392b510b9882ac02d3c37bf1d37c62af492446a0babaa6dfb48d52",
																"typeString": "literal_string \"withdraw: not enough\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "23461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23461:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "23461:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1214,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "23527:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23527:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "23527:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1222,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "23576:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "23576:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23568:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23568:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23568:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1225,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "23589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1217,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "23549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "23549:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$367_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23549:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "23549:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1228,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "23608:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardPending",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "23608:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1245,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "23708:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardPending",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 789,
																"src": "23708:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1241,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "23687:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "23687:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653132",
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23677:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1234,
																							"name": "poolInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 801,
																							"src": "23645:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																								"typeString": "struct SousChef.PoolInfo storage ref"
																							}
																						},
																						"id": 1235,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accRewardPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 794,
																						"src": "23645:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1231,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1200,
																							"src": "23629:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																								"typeString": "struct SousChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 785,
																						"src": "23629:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 108,
																					"src": "23629:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23629:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 125,
																			"src": "23629:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23629:53:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "23629:57:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23629:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 28,
															"src": "23629:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23629:98:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23608:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "23608:119:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1250,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "23737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "23737:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1256,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "23767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "23751:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																		"typeString": "struct SousChef.UserInfo storage pointer"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "23751:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 45,
															"src": "23751:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23751:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23737:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "23737:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1260,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "23785:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "23785:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653132",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23851:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1266,
																			"name": "poolInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "23819:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$795_storage",
																				"typeString": "struct SousChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accRewardPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 794,
																		"src": "23819:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1263,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "23803:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																				"typeString": "struct SousChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 785,
																		"src": "23803:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "23803:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23803:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "23803:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23803:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23785:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "23785:71:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "23881:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "23881:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1277,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "23893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1274,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "23872:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23872:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "EmitStatement",
												"src": "23867:34:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "23330:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23329:17:0"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23354:0:0"
									},
									"scope": 1324,
									"src": "23312:596:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "24012:234:0",
										"statements": [
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1322,
														"src": "24022:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
															"typeString": "struct SousChef.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1284,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 790,
															"src": "24022:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1286,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "24046:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$790_storage_$",
															"typeString": "mapping(address => struct SousChef.UserInfo storage ref)"
														}
													},
													"id": 1289,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1287,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "24055:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "24055:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24046:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$790_storage",
														"typeString": "struct SousChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24022:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1296,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "24103:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "24103:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24095:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1294,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24095:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24095:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1299,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "24116:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "24116:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1291,
															"name": "syrup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "24076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$367",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "24076:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$367_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$367_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24076:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "24076:52:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1304,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "24161:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "24161:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1306,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "24173:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																	"typeString": "struct SousChef.UserInfo storage pointer"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "24173:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1303,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "24143:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24143:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "EmitStatement",
												"src": "24138:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1310,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "24195:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "24195:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24209:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24195:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "24195:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1316,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "24220:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$790_storage_ptr",
																"typeString": "struct SousChef.UserInfo storage pointer"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "24220:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24238:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24220:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "24220:19:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "db2e21bc",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24002:2:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24012:0:0"
									},
									"scope": 1324,
									"src": "23976:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1325,
							"src": "19027:5222:0"
						}
					],
					"src": "66:24183:0"
				},
				"id": 0
			}
		}
	}
}