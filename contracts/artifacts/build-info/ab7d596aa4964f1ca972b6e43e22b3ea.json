{
	"id": "ab7d596aa4964f1ca972b6e43e22b3ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2021-02-16\n*/\n\n// File: @openzeppelin/contracts/GSN/Context.sol\n\n// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: @pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol\n\npragma solidity >=0.4.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n\n// File: @pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol\n\npragma solidity >=0.4.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n// File: @pancakeswap/pancake-swap-lib/contracts/utils/Address.sol\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash =\n            0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                \"Address: low-level call with value failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(\n            address(this).balance >= value,\n            \"Address: insufficient balance for call\"\n        );\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 weiValue,\n        string memory errorMessage\n    ) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) =\n            target.call{value: weiValue}(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @pancakeswap/pancake-swap-lib/contracts/token/BEP20/SafeBEP20.sol\n\npragma solidity ^0.6.0;\n\n/**\n * @title SafeBEP20\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeBEP20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IBEP20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IBEP20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IBEP20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function safeIncreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance =\n            token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    function safeDecreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance =\n            token.allowance(address(this), spender).sub(\n                value,\n                \"SafeBEP20: decreased allowance below zero\"\n            );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata =\n            address(token).functionCall(\n                data,\n                \"SafeBEP20: low-level call failed\"\n            );\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeBEP20: BEP20 operation did not succeed\"\n            );\n        }\n    }\n}\n\n// File: @pancakeswap/pancake-swap-lib/contracts/utils/ReentrancyGuard.sol\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\ncontract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n// File: contracts/utils/IFO.sol\n\npragma solidity 0.6.12;\n\ncontract IFO is ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeBEP20 for IBEP20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount; // How many tokens the user has provided.\n        bool claimed; // default false\n    }\n\n    // admin address\n    address public adminAddress;\n    // The raising token\n    IBEP20 public lpToken;\n    // The offering token\n    IBEP20 public offeringToken;\n    // The block number when IFO starts\n    uint256 public startBlock;\n    // The block number when IFO ends\n    uint256 public endBlock;\n    // total amount of raising tokens need to be raised\n    uint256 public raisingAmount;\n    // total amount of offeringToken that will offer\n    uint256 public offeringAmount;\n    // total amount of raising tokens that have already raised\n    uint256 public totalAmount;\n    // address => amount\n    mapping(address => UserInfo) public userInfo;\n    // participators\n    address[] public addressList;\n\n    event Deposit(address indexed user, uint256 amount);\n\n    event Harvest(\n        address indexed user,\n        uint256 offeringAmount,\n        uint256 excessAmount\n    );\n\n    constructor(\n        IBEP20 _lpToken,\n        IBEP20 _offeringToken,\n        uint256 _startBlock,\n        uint256 _endBlock,\n        uint256 _offeringAmount,\n        uint256 _raisingAmount,\n        address _adminAddress\n    ) public {\n        lpToken = _lpToken;\n        offeringToken = _offeringToken;\n        startBlock = _startBlock;\n        endBlock = _endBlock;\n        offeringAmount = _offeringAmount;\n        raisingAmount = _raisingAmount;\n        totalAmount = 0;\n        adminAddress = _adminAddress;\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == adminAddress, \"admin: wut?\");\n        _;\n    }\n\n    function setOfferingAmount(uint256 _offerAmount) public onlyAdmin {\n        require(block.number < startBlock, \"no\");\n        offeringAmount = _offerAmount;\n    }\n\n    function setRaisingAmount(uint256 _raisingAmount) public onlyAdmin {\n        require(block.number < startBlock, \"no\");\n        raisingAmount = _raisingAmount;\n    }\n\n    function deposit(uint256 _amount) public {\n        require(\n            block.number > startBlock && block.number < endBlock,\n            \"not ifo time\"\n        );\n        require(_amount > 0, \"need _amount > 0\");\n        lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n        if (userInfo[msg.sender].amount == 0) {\n            addressList.push(address(msg.sender));\n        }\n        userInfo[msg.sender].amount = userInfo[msg.sender].amount.add(_amount);\n        totalAmount = totalAmount.add(_amount);\n        emit Deposit(msg.sender, _amount);\n    }\n\n    function harvest() public nonReentrant {\n        require(block.number > endBlock, \"not harvest time\");\n        require(userInfo[msg.sender].amount > 0, \"have you participated?\");\n        require(!userInfo[msg.sender].claimed, \"nothing to harvest\");\n        uint256 offeringTokenAmount = getOfferingAmount(msg.sender);\n        uint256 refundingTokenAmount = getRefundingAmount(msg.sender);\n        offeringToken.safeTransfer(address(msg.sender), offeringTokenAmount);\n        if (refundingTokenAmount > 0) {\n            lpToken.safeTransfer(address(msg.sender), refundingTokenAmount);\n        }\n        userInfo[msg.sender].claimed = true;\n        emit Harvest(msg.sender, offeringTokenAmount, refundingTokenAmount);\n    }\n\n    function hasHarvest(address _user) external view returns (bool) {\n        return userInfo[_user].claimed;\n    }\n\n    // allocation 100000 means 0.1(10%), 1 meanss 0.000001(0.0001%), 1000000 means 1(100%)\n    function getUserAllocation(address _user) public view returns (uint256) {\n        return userInfo[_user].amount.mul(1e12).div(totalAmount).div(1e6);\n    }\n\n    // get the amount of IFO token you will get\n    function getOfferingAmount(address _user) public view returns (uint256) {\n        if (totalAmount > raisingAmount) {\n            uint256 allocation = getUserAllocation(_user);\n            return offeringAmount.mul(allocation).div(1e6);\n        } else {\n            // userInfo[_user] / (raisingAmount / offeringAmount)\n            return\n                userInfo[_user].amount.mul(offeringAmount).div(raisingAmount);\n        }\n    }\n\n    // get the amount of lp token you will be refunded\n    function getRefundingAmount(address _user) public view returns (uint256) {\n        if (totalAmount <= raisingAmount) {\n            return 0;\n        }\n        uint256 allocation = getUserAllocation(_user);\n        uint256 payAmount = raisingAmount.mul(allocation).div(1e6);\n        return userInfo[_user].amount.sub(payAmount);\n    }\n\n    function getAddressListLength() external view returns (uint256) {\n        return addressList.length;\n    }\n\n    function finalWithdraw(uint256 _lpAmount, uint256 _offerAmount)\n        public\n        onlyAdmin\n    {\n        require(\n            _lpAmount < lpToken.balanceOf(address(this)),\n            \"not enough token 0\"\n        );\n        require(\n            _offerAmount < offeringToken.balanceOf(address(this)),\n            \"not enough token 1\"\n        );\n        lpToken.safeTransfer(address(msg.sender), _lpAmount);\n        offeringToken.safeTransfer(address(msg.sender), _offerAmount);\n    }\n}\n\n// File: contracts/interfaces/IPancakeProfile.sol\n\npragma solidity ^0.6.0;\n\n/** @title IPancakeProfile.\n */\ninterface IPancakeProfile {\n    function createProfile(\n        uint256 _teamId,\n        address _nftAddress,\n        uint256 _tokenId\n    ) external;\n\n    /**\n     * @dev To pause user profile. It releases the NFT.\n     * Callable only by registered users.\n     */\n    function pauseProfile() external;\n\n    /**\n     * @dev To update user profile.\n     * Callable only by registered users.\n     */\n    function updateProfile() external;\n\n    /**\n     * @dev To reactivate user profile.\n     * Callable only by registered users.\n     */\n    function reactivateProfile(address _nftAddress, uint256 _tokenId) external;\n\n    /**\n     * @dev To increase the number of points for a user.\n     * Callable only by point admins\n     */\n    function increaseUserPoints(\n        address _userAddress,\n        uint256 _numberPoints,\n        uint256 _campaignId\n    ) external;\n\n    /**\n     * @dev To increase the number of points for a set of users.\n     * Callable only by point admins\n     */\n    function increaseUserPointsMultiple(\n        address[] calldata _userAddresses,\n        uint256 _numberPoints,\n        uint256 _campaignId\n    ) external;\n\n    /**\n     * @dev To increase the number of points for a team.\n     * Callable only by point admins\n     */\n\n    function increaseTeamPoints(\n        uint256 _teamId,\n        uint256 _numberPoints,\n        uint256 _campaignId\n    ) external;\n\n    /**\n     * @dev To remove the number of points for a user.\n     * Callable only by point admins\n     */\n    function removeUserPoints(address _userAddress, uint256 _numberPoints)\n        external;\n\n    /**\n     * @dev To remove a set number of points for a set of users.\n     */\n    function removeUserPointsMultiple(\n        address[] calldata _userAddresses,\n        uint256 _numberPoints\n    ) external;\n\n    /**\n     * @dev To remove the number of points for a team.\n     * Callable only by point admins\n     */\n\n    function removeTeamPoints(uint256 _teamId, uint256 _numberPoints) external;\n\n    /**\n     * @dev To add a NFT contract address for users to set their profile.\n     * Callable only by owner admins.\n     */\n    function addNftAddress(address _nftAddress) external;\n\n    /**\n     * @dev Add a new teamId\n     * Callable only by owner admins.\n     */\n    function addTeam() external;\n\n    /**\n     * @dev Function to change team.\n     * Callable only by special admins.\n     */\n    function changeTeam(address _userAddress, uint256 _newTeamId) external;\n\n    /**\n     * @dev Claim CAKE to burn later.\n     * Callable only by owner admins.\n     */\n    function claimFee(uint256 _amount) external;\n\n    /**\n     * @dev Make a team joinable again.\n     * Callable only by owner admins.\n     */\n    function makeTeamJoinable(uint256 _teamId) external;\n\n    /**\n     * @dev Make a team not joinable.\n     * Callable only by owner admins.\n     */\n    function makeTeamNotJoinable(uint256 _teamId) external;\n\n    /**\n     * @dev Rename a team\n     * Callable only by owner admins.\n     */\n    function renameTeam() external;\n\n    /**\n     * @dev Update the number of CAKE to register\n     * Callable only by owner admins.\n     */\n    function updateNumberCake() external;\n\n    /**\n     * @dev Check the user's profile for a given address\n     */\n    function getUserProfile(address _userAddress)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            address,\n            uint256,\n            bool\n        );\n\n    /**\n     * @dev Check the user's status for a given address\n     */\n    function getUserStatus(address _userAddress) external view returns (bool);\n\n    /**\n     * @dev Check a team's profile\n     */\n    function getTeamProfile(uint256 _teamId)\n        external\n        view\n        returns (\n            string memory,\n            string memory,\n            uint256,\n            uint256,\n            bool\n        );\n}\n\n// File: contracts/PointCenterIFO.sol\n\npragma solidity ^0.6.12;\n\n/** @title PointCenterIFO.\n@dev It is a contract for users to collect points\nfor IFOs they participated in.\n*/\ncontract PointCenterIFO is Ownable {\n    IPancakeProfile pancakeProfile;\n\n    uint256 public maxViewLength;\n\n    mapping(address => IFOs) public ifos;\n    mapping(address => mapping(address => bool)) private _users;\n\n    event IFOAdd(\n        address indexed contractAddress,\n        uint256 thresholdToClaim,\n        uint256 indexed campaignId,\n        uint256 numberPoints\n    );\n\n    struct IFOs {\n        uint256 thresholdToClaim;\n        uint256 campaignId;\n        uint256 numberPoints;\n    }\n\n    constructor(address _pancakeProfileAddress, uint256 _maxViewLength) public {\n        pancakeProfile = IPancakeProfile(_pancakeProfileAddress);\n        maxViewLength = _maxViewLength;\n    }\n\n    function getPoints(address _contractAddress) external {\n        address senderAddress = _msgSender();\n\n        // 1. Check if IFO is valid\n        require(\n            (ifos[_contractAddress].campaignId > 0) &&\n                (ifos[_contractAddress].numberPoints > 0),\n            \"not valid\"\n        );\n\n        // 2. Check if he has claimed\n        require(\n            !_users[senderAddress][_contractAddress],\n            \"has claimed for this IFO\"\n        );\n\n        // 3. Check if he is active\n        bool isUserActive = pancakeProfile.getUserStatus(senderAddress);\n        require(isUserActive, \"not active\");\n\n        // 4. Check if he can claim\n        IFO currentIfo = IFO(_contractAddress);\n\n        uint256 amountUser;\n        bool hasUserClaimed;\n\n        // Read user info\n        (amountUser, hasUserClaimed) = currentIfo.userInfo(senderAddress);\n\n        require(hasUserClaimed, \"has not claimed\");\n        require(\n            amountUser > ifos[_contractAddress].thresholdToClaim,\n            \"too small\"\n        );\n\n        // 5. Update the status\n        _users[senderAddress][_contractAddress] = true;\n\n        // 6. Increase user points of sender\n        pancakeProfile.increaseUserPoints(\n            senderAddress,\n            ifos[_contractAddress].numberPoints,\n            ifos[_contractAddress].campaignId\n        );\n    }\n\n    function addIFOAddress(\n        address _contractAddress,\n        uint256 _thresholdToClaim,\n        uint256 _campaignId,\n        uint256 _numberPoints\n    ) external onlyOwner {\n        // Add data to the struct for ifos\n        ifos[_contractAddress] = IFOs({\n            thresholdToClaim: _thresholdToClaim,\n            campaignId: _campaignId,\n            numberPoints: _numberPoints\n        });\n\n        emit IFOAdd(\n            _contractAddress,\n            _thresholdToClaim,\n            _campaignId,\n            _numberPoints\n        );\n    }\n\n    function updateMaxViewLength(uint256 _newMaxViewLength) external onlyOwner {\n        maxViewLength = _newMaxViewLength;\n    }\n\n    function checkClaimStatus(address _userAddress, address _contractAddress)\n        external\n        view\n        returns (bool)\n    {\n        bool status = _checkClaimStatus(_userAddress, _contractAddress);\n        return status;\n    }\n\n    function checkClaimStatuses(\n        address _userAddress,\n        address[] memory _contractAddresses\n    ) external view returns (bool[] memory) {\n        bool[] memory responses = new bool[](_contractAddresses.length);\n\n        require(\n            _contractAddresses.length <= maxViewLength,\n            \"Length must be <= maxViewLength\"\n        );\n\n        for (uint256 i = 0; i < _contractAddresses.length; i++) {\n            bool status =\n                _checkClaimStatus(_userAddress, _contractAddresses[i]);\n            responses[i] = status;\n        }\n\n        return responses;\n    }\n\n    function _checkClaimStatus(address _userAddress, address _contractAddress)\n        private\n        view\n        returns (bool)\n    {\n        IFO currentIfo = IFO(_contractAddress);\n\n        uint256 amountUser;\n        bool hasUserClaimed;\n\n        // read user info\n        (amountUser, hasUserClaimed) = currentIfo.userInfo(_userAddress);\n\n        if (\n            (!hasUserClaimed) ||\n            (amountUser < ifos[_contractAddress].thresholdToClaim)\n        ) {\n            // 1. Check if user has claimed funds from IFO AND match threshold\n            return false;\n        } else if (_users[_userAddress][_contractAddress]) {\n            // 2. Check if user has already claimed points for this IFO\n            return false;\n        } else if (\n            // 3. Check if a campaignId AND numberPoints were set\n            (ifos[_contractAddress].campaignId < 1) ||\n            (ifos[_contractAddress].numberPoints < 1)\n        ) {\n            return false;\n        } else {\n            // 4. Can claim\n            return true;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":12585:18926  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":12585:18926  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122015cb24aa13b5cf5117382a418db543f76c18fae821726870244caff034f9a14f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015cb24aa13b5cf5117382a418db543f76c18fae821726870244caff034f9a14f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xCB 0x24 0xAA SGT 0xB5 0xCF MLOAD OR CODESIZE 0x2A COINBASE DUP14 0xB5 NUMBER 0xF7 PUSH13 0x18FAE821726870244CAFF034F9 LOG1 0x4F PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "12585:6341:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122015cb24aa13b5cf5117382a418db543f76c18fae821726870244caff034f9a14f64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xCB 0x24 0xAA SGT 0xB5 0xCF MLOAD OR CODESIZE 0x2A COINBASE DUP14 0xB5 NUMBER 0xF7 PUSH13 0x18FAE821726870244CAFF034F9 LOG1 0x4F PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "12585:6341:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12585,
									"end": 18926,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015cb24aa13b5cf5117382a418db543f76c18fae821726870244caff034f9a14f64736f6c634300060c0033",
									".code": [
										{
											"begin": 12585,
											"end": 18926,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12585,
											"end": 18926,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_offeringToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_offeringAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_raisingAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_adminAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "offeringAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "excessAmount",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addressList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "adminAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lpAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_offerAmount",
									"type": "uint256"
								}
							],
							"name": "finalWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressListLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getOfferingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getRefundingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserAllocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "hasHarvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "offeringAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "offeringToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "raisingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_offerAmount",
									"type": "uint256"
								}
							],
							"name": "setOfferingAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_raisingAmount",
									"type": "uint256"
								}
							],
							"name": "setRaisingAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "claimed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25941:31214  contract IFO is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27087:27604  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0xe0\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  dup5\n  add\n  mload\n  0x80\n  dup6\n  add\n  mload\n  0xa0\n  dup7\n  add\n  mload\n  0xc0\n  swap1\n  swap7\n  add\n  mload\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":24915:24916  1 */\n  0x01\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25029:25036  _status */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25029:25051  _status = _NOT_ENTERED */\n  dup2\n  dup2\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27330:27337  lpToken */\n  0x02\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27330:27348  lpToken = _lpToken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap10\n  dup11\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27358:27371  offeringToken */\n  0x03\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27358:27388  offeringToken = _offeringToken */\n  dup1\n  sload\n  swap9\n  dup11\n  and\n  swap9\n  dup3\n  and\n  swap9\n  swap1\n  swap9\n  or\n  swap1\n  swap8\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27398:27408  startBlock */\n  0x04\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27398:27422  startBlock = _startBlock */\n  swap6\n  swap1\n  swap6\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27432:27440  endBlock */\n  0x05\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27432:27452  endBlock = _endBlock */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27462:27476  offeringAmount */\n  0x07\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27462:27494  offeringAmount = _offeringAmount */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27504:27517  raisingAmount */\n  0x06\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27504:27534  raisingAmount = _raisingAmount */\n  swap6\n  swap1\n  swap6\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27544:27555  totalAmount */\n  0x08\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27544:27559  totalAmount = 0 */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27569:27597  adminAddress = _adminAddress */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25941:31214  contract IFO is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25941:31214  contract IFO is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x87e97bc6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb810fb43\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb810fb43\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb920ade2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe1af9a95\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc00358e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfc6f9468\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x87e97bc6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c0a7669\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f1b5248\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb7813607\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x4225c32f\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x4225c32f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5fcbd285\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x64ce9fff\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x083c6323\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27d1b1a2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f5105f8\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26478:26501  uint256 public endBlock */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26805:26849  mapping(address => UserInfo) public userInfo */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      iszero\n      iszero\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26748:26774  uint256 public totalAmount */\n    tag_5:\n      tag_26\n      tag_32\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27715:27877  function setOfferingAmount(uint256 _offerAmount) public onlyAdmin {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      calldataload\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30273:30606  function getRefundingAmount(address _user) public view returns (uint256) {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_38\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27883:28047  function setRaisingAmount(uint256 _raisingAmount) public onlyAdmin {... */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      calldataload\n      tag_41\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28637:29358  function harvest() public nonReentrant {... */\n    tag_9:\n      tag_33\n      tag_43\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26409:26434  uint256 public startBlock */\n    tag_10:\n      tag_26\n      tag_45\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26283:26304  IBEP20 public lpToken */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29364:29475  function hasHarvest(address _user) external view returns (bool) {... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_50\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29780:30212  function getOfferingAmount(address _user) public view returns (uint256) {... */\n    tag_13:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_53\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26563:26591  uint256 public raisingAmount */\n    tag_14:\n      tag_26\n      tag_55\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30724:31212  function finalWithdraw(uint256 _lpAmount, uint256 _offerAmount)... */\n    tag_15:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_58\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28053:28631  function deposit(uint256 _amount) public {... */\n    tag_16:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26336:26363  IBEP20 public offeringToken */\n    tag_17:\n      tag_46\n      tag_63\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26876:26904  address[] public addressList */\n    tag_18:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29572:29726  function getUserAllocation(address _user) public view returns (uint256) {... */\n    tag_19:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_69\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26650:26679  uint256 public offeringAmount */\n    tag_20:\n      tag_26\n      tag_71\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30612:30718  function getAddressListLength() external view returns (uint256) {... */\n    tag_21:\n      tag_26\n      tag_73\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26225:26252  address public adminAddress */\n    tag_22:\n      tag_46\n      tag_75\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26478:26501  uint256 public endBlock */\n    tag_27:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26805:26849  mapping(address => UserInfo) public userInfo */\n    tag_30:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      dup3\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26748:26774  uint256 public totalAmount */\n    tag_32:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27715:27877  function setOfferingAmount(uint256 _offerAmount) public onlyAdmin {... */\n    tag_35:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27663:27675  adminAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27649:27659  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27649:27675  msg.sender == adminAddress */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27641:27691  require(msg.sender == adminAddress, \"admin: wut?\") */\n      tag_77\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa8, 0x61646d696e3a207775743f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_77:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27814:27824  startBlock */\n      sload(0x04)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27799:27811  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27799:27824  block.number < startBlock */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27791:27831  require(block.number < startBlock, \"no\") */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x02\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xf0, 0x6e6f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27841:27855  offeringAmount */\n      0x07\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27841:27870  offeringAmount = _offerAmount */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27715:27877  function setOfferingAmount(uint256 _offerAmount) public onlyAdmin {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30273:30606  function getRefundingAmount(address _user) public view returns (uint256) {... */\n    tag_38:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30337:30344  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30375:30388  raisingAmount */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30360:30371  totalAmount */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30360:30388  totalAmount <= raisingAmount */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30356:30423  if (totalAmount <= raisingAmount) {... */\n      tag_81\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30411:30412  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30404:30412  return 0 */\n      jump(tag_80)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30356:30423  if (totalAmount <= raisingAmount) {... */\n    tag_81:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30432:30450  uint256 allocation */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30453:30477  getUserAllocation(_user) */\n      tag_82\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30471:30476  _user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30453:30470  getUserAllocation */\n      tag_69\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30453:30477  getUserAllocation(_user) */\n      jump\t// in\n    tag_82:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30432:30477  uint256 allocation = getUserAllocation(_user) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30487:30504  uint256 payAmount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30545  raisingAmount.mul(allocation).div(1e6) */\n      tag_83\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30541:30544  1e6 */\n      0x0f4240\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30536  raisingAmount.mul(allocation) */\n      tag_84\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30525:30535  allocation */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30520  raisingAmount */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30524  raisingAmount.mul */\n      tag_85\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30536  raisingAmount.mul(allocation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30540  raisingAmount.mul(allocation).div */\n      swap1\n      tag_86\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30507:30545  raisingAmount.mul(allocation).div(1e6) */\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30577  userInfo[_user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30570  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30577  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30584  userInfo[_user].amount */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30487:30545  uint256 payAmount = raisingAmount.mul(allocation).div(1e6) */\n      swap1\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30599  userInfo[_user].amount.sub(payAmount) */\n      tag_87\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30487:30545  uint256 payAmount = raisingAmount.mul(allocation).div(1e6) */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30588  userInfo[_user].amount.sub */\n      tag_88\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30562:30599  userInfo[_user].amount.sub(payAmount) */\n      jump\t// in\n    tag_87:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30555:30599  return userInfo[_user].amount.sub(payAmount) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30273:30606  function getRefundingAmount(address _user) public view returns (uint256) {... */\n    tag_80:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27883:28047  function setRaisingAmount(uint256 _raisingAmount) public onlyAdmin {... */\n    tag_41:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27663:27675  adminAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27649:27659  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27649:27675  msg.sender == adminAddress */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27641:27691  require(msg.sender == adminAddress, \"admin: wut?\") */\n      tag_90\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa8, 0x61646d696e3a207775743f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_90:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27983:27993  startBlock */\n      sload(0x04)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27968:27980  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27968:27993  block.number < startBlock */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27960:28000  require(block.number < startBlock, \"no\") */\n      tag_92\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x02\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xf0, 0x6e6f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_92:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28010:28023  raisingAmount */\n      0x06\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28010:28040  raisingAmount = _raisingAmount */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27883:28047  function setRaisingAmount(uint256 _raisingAmount) public onlyAdmin {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28637:29358  function harvest() public nonReentrant {... */\n    tag_43:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":24958:24959  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25546:25553  _status */\n      sload(0x00)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25546:25565  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25538:25601  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_94\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_94:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":24958:24959  2 */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25676:25683  _status */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25676:25694  _status = _ENTERED */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28709:28717  endBlock */\n      sload(0x05)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28694:28706  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28694:28717  block.number > endBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28686:28738  require(block.number > endBlock, \"not harvest time\") */\n      tag_96\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x80, 0x6e6f7420686172766573742074696d65)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_96:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28765:28775  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28786:28787  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28756:28776  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28756:28764  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28756:28776  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28756:28783  userInfo[msg.sender].amount */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28748:28814  require(userInfo[msg.sender].amount > 0, \"have you participated?\") */\n      tag_97\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x6861766520796f75207061727469636970617465643f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_97:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28842:28852  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28833:28853  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28833:28841  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28833:28853  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28833:28861  userInfo[msg.sender].claimed */\n      0x01\n      add\n      sload\n      0xff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28832:28861  !userInfo[msg.sender].claimed */\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28824:28884  require(!userInfo[msg.sender].claimed, \"nothing to harvest\") */\n      tag_98\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x1b9bdd1a1a5b99c81d1bc81a185c9d995cdd)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_98:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28894:28921  uint256 offeringTokenAmount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28924:28953  getOfferingAmount(msg.sender) */\n      tag_99\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28942:28952  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28924:28941  getOfferingAmount */\n      tag_53\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28924:28953  getOfferingAmount(msg.sender) */\n      jump\t// in\n    tag_99:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28894:28953  uint256 offeringTokenAmount = getOfferingAmount(msg.sender) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28963:28991  uint256 refundingTokenAmount */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28994:29024  getRefundingAmount(msg.sender) */\n      tag_100\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29013:29023  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28994:29012  getRefundingAmount */\n      tag_38\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28994:29024  getRefundingAmount(msg.sender) */\n      jump\t// in\n    tag_100:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29034:29047  offeringToken */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28963:29024  uint256 refundingTokenAmount = getRefundingAmount(msg.sender) */\n      swap1\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29034:29102  offeringToken.safeTransfer(address(msg.sender), offeringTokenAmount) */\n      tag_101\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29034:29047  offeringToken */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29069:29079  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29082:29101  offeringTokenAmount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29034:29060  offeringToken.safeTransfer */\n      tag_102\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29034:29102  offeringToken.safeTransfer(address(msg.sender), offeringTokenAmount) */\n      jump\t// in\n    tag_101:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29116:29140  refundingTokenAmount > 0 */\n      dup1\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29112:29230  if (refundingTokenAmount > 0) {... */\n      tag_104\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29156:29163  lpToken */\n      sload(0x02)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29156:29219  lpToken.safeTransfer(address(msg.sender), refundingTokenAmount) */\n      tag_104\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29156:29163  lpToken */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29185:29195  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29198:29218  refundingTokenAmount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29156:29176  lpToken.safeTransfer */\n      tag_102\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29156:29219  lpToken.safeTransfer(address(msg.sender), refundingTokenAmount) */\n      jump\t// in\n    tag_104:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29248:29258  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29239:29259  userInfo[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29239:29247  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29239:29259  userInfo[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29270:29274  true */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29239:29267  userInfo[msg.sender].claimed */\n      swap1\n      dup2\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29239:29274  userInfo[msg.sender].claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29289:29351  Harvest(msg.sender, offeringTokenAmount, refundingTokenAmount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      dup2\n      mload\n      0x71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":24915:24916  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25849:25856  _status */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":25849:25871  _status = _NOT_ENTERED */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28637:29358  function harvest() public nonReentrant {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26409:26434  uint256 public startBlock */\n    tag_45:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26283:26304  IBEP20 public lpToken */\n    tag_47:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29364:29475  function hasHarvest(address _user) external view returns (bool) {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29445:29460  userInfo[_user] */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29422:29426  bool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29445:29460  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29445:29453  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29445:29460  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29445:29468  userInfo[_user].claimed */\n      0x01\n      add\n      sload\n      0xff\n      and\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29364:29475  function hasHarvest(address _user) external view returns (bool) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29780:30212  function getOfferingAmount(address _user) public view returns (uint256) {... */\n    tag_53:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29843:29850  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29880:29893  raisingAmount */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29866:29877  totalAmount */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29866:29893  totalAmount > raisingAmount */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29862:30206  if (totalAmount > raisingAmount) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29909:29927  uint256 allocation */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29930:29954  getUserAllocation(_user) */\n      tag_108\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29948:29953  _user */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29930:29947  getUserAllocation */\n      tag_69\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29930:29954  getUserAllocation(_user) */\n      jump\t// in\n    tag_108:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29909:29954  uint256 allocation = getUserAllocation(_user) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29975:30014  offeringAmount.mul(allocation).div(1e6) */\n      tag_109\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30010:30013  1e6 */\n      0x0f4240\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29975:30005  offeringAmount.mul(allocation) */\n      tag_84\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29994:30004  allocation */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29975:29989  offeringAmount */\n      sload(0x07)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29975:29993  offeringAmount.mul */\n      tag_85\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29975:30005  offeringAmount.mul(allocation) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29975:30014  offeringAmount.mul(allocation).div(1e6) */\n    tag_109:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29968:30014  return offeringAmount.mul(allocation).div(1e6) */\n      swap2\n      pop\n      pop\n      jump(tag_80)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29862:30206  if (totalAmount > raisingAmount) {... */\n    tag_107:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30181:30194  raisingAmount */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30161:30175  offeringAmount */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30149  userInfo[_user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30142  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30149  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30156  userInfo[_user].amount */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30195  userInfo[_user].amount.mul(offeringAmount).div(raisingAmount) */\n      tag_112\n      swap3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30181:30194  raisingAmount */\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30176  userInfo[_user].amount.mul(offeringAmount) */\n      tag_84\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30156  userInfo[_user].amount */\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30160  userInfo[_user].amount.mul */\n      tag_85\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30176  userInfo[_user].amount.mul(offeringAmount) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30134:30195  userInfo[_user].amount.mul(offeringAmount).div(raisingAmount) */\n    tag_112:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30111:30195  return... */\n      swap1\n      pop\n      jump(tag_80)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26563:26591  uint256 public raisingAmount */\n    tag_55:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30724:31212  function finalWithdraw(uint256 _lpAmount, uint256 _offerAmount)... */\n    tag_58:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27663:27675  adminAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27649:27659  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27649:27675  msg.sender == adminAddress */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":27641:27691  require(msg.sender == adminAddress, \"admin: wut?\") */\n      tag_115\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa8, 0x61646d696e3a207775743f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_115:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30875  lpToken */\n      sload(0x02)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30900  lpToken.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30894:30898  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30900  lpToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30875  lpToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30885  lpToken.balanceOf */\n      0x70a08231\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30900  lpToken.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30875  lpToken */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30868:30900  lpToken.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30856:30900  _lpAmount < lpToken.balanceOf(address(this)) */\n      dup3\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30835:30944  require(... */\n      tag_121\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x74, 0x06e6f7420656e6f75676820746f6b656e203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_121:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31003  offeringToken */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31028  offeringToken.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31022:31026  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31028  offeringToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31003  offeringToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31013  offeringToken.balanceOf */\n      0x70a08231\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31028  offeringToken.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31003  offeringToken */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30990:31028  offeringToken.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30975:31028  _offerAmount < offeringToken.balanceOf(address(this)) */\n      dup2\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30954:31072  require(... */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x70, 0x6e6f7420656e6f75676820746f6b656e2031)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31082:31089  lpToken */\n      sload(0x02)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31082:31134  lpToken.safeTransfer(address(msg.sender), _lpAmount) */\n      tag_127\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31082:31089  lpToken */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31111:31121  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31124:31133  _lpAmount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31082:31102  lpToken.safeTransfer */\n      tag_102\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31082:31134  lpToken.safeTransfer(address(msg.sender), _lpAmount) */\n      jump\t// in\n    tag_127:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31144:31157  offeringToken */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31144:31205  offeringToken.safeTransfer(address(msg.sender), _offerAmount) */\n      tag_128\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31144:31157  offeringToken */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31179:31189  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31192:31204  _offerAmount */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31144:31170  offeringToken.safeTransfer */\n      tag_102\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":31144:31205  offeringToken.safeTransfer(address(msg.sender), _offerAmount) */\n      jump\t// in\n    tag_128:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30724:31212  function finalWithdraw(uint256 _lpAmount, uint256 _offerAmount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28053:28631  function deposit(uint256 _amount) public {... */\n    tag_61:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28140:28150  startBlock */\n      sload(0x04)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28125:28137  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28125:28150  block.number > startBlock */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28125:28177  block.number > startBlock && block.number < endBlock */\n      dup1\n      iszero\n      tag_130\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28169:28177  endBlock */\n      sload(0x05)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28154:28166  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28154:28177  block.number < endBlock */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28125:28177  block.number > startBlock && block.number < endBlock */\n    tag_130:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28104:28215  require(... */\n      tag_131\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x6e6f742069666f2074696d65)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_131:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28243:28244  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28233:28240  _amount */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28233:28244  _amount > 0 */\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28225:28265  require(_amount > 0, \"need _amount > 0\") */\n      tag_132\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x84, 0x06e656564205f616d6f756e74203e203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_132:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28275:28282  lpToken */\n      sload(0x02)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28275:28344  lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_133\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28275:28282  lpToken */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28308:28318  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28329:28333  this */\n      address\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28336:28343  _amount */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28275:28299  lpToken.safeTransferFrom */\n      tag_134\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28275:28344  lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      jump\t// in\n    tag_133:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28367:28377  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28358:28378  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28358:28366  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28358:28378  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28358:28385  userInfo[msg.sender].amount */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28354:28454  if (userInfo[msg.sender].amount == 0) {... */\n      tag_135\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28406:28417  addressList */\n      0x0a\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28406:28443  addressList.push(address(msg.sender)) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28431:28441  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28406:28443  addressList.push(address(msg.sender)) */\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28354:28454  if (userInfo[msg.sender].amount == 0) {... */\n    tag_135:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28502:28512  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28513  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28501  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28513  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28520  userInfo[msg.sender].amount */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28533  userInfo[msg.sender].amount.add(_amount) */\n      tag_137\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28525:28532  _amount */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28524  userInfo[msg.sender].amount.add */\n      tag_138\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28493:28533  userInfo[msg.sender].amount.add(_amount) */\n      jump\t// in\n    tag_137:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28472:28482  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28463:28483  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28463:28471  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28463:28483  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28463:28533  userInfo[msg.sender].amount = userInfo[msg.sender].amount.add(_amount) */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28557:28568  totalAmount */\n      sload(0x08)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28557:28581  totalAmount.add(_amount) */\n      tag_139\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28573:28580  _amount */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28557:28572  totalAmount.add */\n      tag_138\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28557:28581  totalAmount.add(_amount) */\n      jump\t// in\n    tag_139:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28543:28554  totalAmount */\n      0x08\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28543:28581  totalAmount = totalAmount.add(_amount) */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28596:28624  Deposit(msg.sender, _amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28604:28614  msg.sender */\n      caller\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28596:28624  Deposit(msg.sender, _amount) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":28053:28631  function deposit(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26336:26363  IBEP20 public offeringToken */\n    tag_63:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26876:26904  address[] public addressList */\n    tag_66:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      invalid\n    tag_140:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29572:29726  function getUserAllocation(address _user) public view returns (uint256) {... */\n    tag_69:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29698:29709  totalAmount */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29676  userInfo[_user] */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29635:29642  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29676  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29669  userInfo */\n      0x09\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29676  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29683  userInfo[_user].amount */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29635:29642  uint256 */\n      swap1\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29719  userInfo[_user].amount.mul(1e12).div(totalAmount).div(1e6) */\n      tag_143\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29715:29718  1e6 */\n      0x0f4240\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29710  userInfo[_user].amount.mul(1e12).div(totalAmount) */\n      tag_84\n      swap2\n      dup3\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29688:29692  1e12 */\n      0xe8d4a51000\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29687  userInfo[_user].amount.mul */\n      tag_85\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29693  userInfo[_user].amount.mul(1e12) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29661:29719  userInfo[_user].amount.mul(1e12).div(totalAmount).div(1e6) */\n    tag_143:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29654:29719  return userInfo[_user].amount.mul(1e12).div(totalAmount).div(1e6) */\n      swap3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":29572:29726  function getUserAllocation(address _user) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26650:26679  uint256 public offeringAmount */\n    tag_71:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30612:30718  function getAddressListLength() external view returns (uint256) {... */\n    tag_73:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30693:30704  addressList */\n      0x0a\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30693:30711  addressList.length */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":30612:30718  function getAddressListLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":26225:26252  address public adminAddress */\n    tag_75:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5594:6053  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_85:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5652:5659  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5893:5899  a == 0 */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5889:5934  if (a == 0) {... */\n      tag_148\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5922:5923  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5915:5923  return 0 */\n      jump(tag_143)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5889:5934  if (a == 0) {... */\n    tag_148:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5956:5961  a * b */\n      dup3\n      dup3\n      mul\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5960:5961  b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5956:5957  a */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5956:5961  a * b */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5956:5957  a */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5979:5984  c / a */\n      tag_149\n      jumpi\n      invalid\n    tag_149:\n      div\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5979:5989  c / a == b */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5971:6027  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6045:6046  c */\n      swap4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5594:6053  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6515:6645  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6573:6580  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6599:6638  div(a, b, \"SafeMath: division by zero\") */\n      tag_150\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6603:6604  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6606:6607  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6599:6638  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6599:6602  div */\n      tag_153\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":6599:6638  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4705:4839  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4763:4770  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4789:4832  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_150\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4793:4794  a */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4796:4797  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4789:4832  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4789:4792  sub */\n      tag_156\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4789:4832  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19575:19814  function safeTransfer(... */\n    tag_102:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19739:19797  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19687:19807  _callOptionalReturn(... */\n      tag_158\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19720:19725  token */\n      dup5\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19687:19706  _callOptionalReturn */\n      tag_159\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19687:19807  _callOptionalReturn(... */\n      jump\t// in\n    tag_158:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19575:19814  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19820:20095  function safeTransferFrom(... */\n    tag_134:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":20010:20078  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19958:20088  _callOptionalReturn(... */\n      tag_161\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19991:19996  token */\n      dup6\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19958:19977  _callOptionalReturn */\n      tag_159\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19958:20088  _callOptionalReturn(... */\n      jump\t// in\n    tag_161:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19820:20095  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4258:4434  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4316:4323  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4347:4352  a + b */\n      dup3\n      dup3\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4370:4376  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4362:4408  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_150\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7127:7429  function div(... */\n    tag_153:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7243:7250  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7277:7289  errorMessage */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7270:7275  b > 0 */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7262:7290  require(b > 0, errorMessage) */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_166:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_168\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_166)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_169\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_169:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7300:7309  uint256 c */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7316:7317  b */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7312:7313  a */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7312:7317  a / b */\n      dup2\n      tag_170\n      jumpi\n      invalid\n    tag_170:\n      div\n      swap6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":7127:7429  function div(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5130:5347  function sub(... */\n    tag_156:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5246:5253  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5281:5293  errorMessage */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5273:5279  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5265:5294  require(b <= a, errorMessage) */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_168\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_166)\n    tag_172:\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5316:5321  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":5130:5347  function sub(... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22373:23240  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_159:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22792:22815  bytes memory returndata */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22830:22945  address(token).functionCall(... */\n      tag_178\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22875:22879  data */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22830:22945  address(token).functionCall(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22838:22843  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22830:22857  address(token).functionCall */\n      and\n      tag_179\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22830:22945  address(token).functionCall(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22959:22976  returndata.length */\n      dup1\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22792:22945  bytes memory returndata =... */\n      swap1\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22959:22980  returndata.length > 0 */\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":22955:23234  if (returndata.length > 0) {... */\n      tag_158\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":23128:23138  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":23117:23147  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":23092:23223  require(... */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16349:16573  function functionCall(... */\n    tag_179:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16482:16494  bytes memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16513:16566  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_184\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16536:16542  target */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16544:16548  data */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16550:16551  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16553:16565  errorMessage */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16513:16535  _functionCallWithValue */\n      tag_185\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16513:16566  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_184:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16506:16566  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":16349:16573  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":17918:18924  function _functionCallWithValue(... */\n    tag_185:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18086:18098  bytes memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18118:18136  isContract(target) */\n      tag_187\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18129:18135  target */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18118:18128  isContract */\n      tag_188\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18118:18136  isContract(target) */\n      jump\t// in\n    tag_187:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18110:18170  require(isContract(target), \"Address: call to non-contract\") */\n      tag_189\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_189:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18241:18253  bool success */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18255:18278  bytes memory returndata */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18294:18300  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18294:18305  target.call */\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18313:18321  weiValue */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18323:18327  data */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18294:18328  target.call{value: weiValue}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_190:\n      0x20\n      dup4\n      lt\n      tag_192\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_190)\n    tag_192:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_195\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_194)\n    tag_195:\n      0x60\n      swap2\n      pop\n    tag_194:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18240:18328  (bool success, bytes memory returndata) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18342:18349  success */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18338:18918  if (success) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18372:18382  returndata */\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18365:18382  return returndata */\n      tag_184\n      swap1\n      pop\n      jump\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18338:18918  if (success) {... */\n    tag_196:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18483:18500  returndata.length */\n      dup1\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18483:18504  returndata.length > 0 */\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18479:18908  if (returndata.length > 0) {... */\n      tag_198\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18741:18751  returndata */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18735:18752  mload(returndata) */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18801:18816  returndata_size */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18788:18798  returndata */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18784:18786  32 */\n      0x20\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18780:18799  add(32, returndata) */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18773:18817  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18690:18835  {... */\n    tag_198:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18873:18893  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup7\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup7\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18880:18892  errorMessage */\n      dup8\n      swap4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":18873:18893  revert(errorMessage) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_168\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_166)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13177:13819  function isContract(address account) internal view returns (bool) {... */\n    tag_188:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13237:13241  bool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13722:13742  extcodehash(account) */\n      dup2\n      extcodehash\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13555:13621  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13769:13792  codehash != accountHash */\n      dup2\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13769:13811  codehash != accountHash && codehash != 0x0 */\n      tag_87\n      jumpi\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13796:13811  codehash != 0x0 */\n      iszero\n      iszero\n      swap3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":13177:13819  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082 5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa26469706673582212200c56ca58fc24041fe7814048bc89d6da758670b1e3442d4ee92385e6ee663eae64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051611257380380611257833981810160405260e081101561003357600080fd5b508051602082015160408301516060840151608085015160a086015160c09096015160016000818155600280546001600160a01b03998a166001600160a01b03199182161790915560038054988a16988216989098179097556004959095556005939093556007919091556006959095556008919091558054929093169116179055611193806100c46000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806387e97bc6116100ad578063b810fb4311610071578063b810fb43146102d8578063b920ade2146102f5578063e1af9a951461031b578063fc00358e14610323578063fc6f94681461032b5761012c565b806387e97bc6146102625780639c0a7669146102885780639f1b524814610290578063b6b55f25146102b3578063b7813607146102d05761012c565b80634225c32f116100f45780634225c32f146101d75780634641257d146101f457806348cd4cb1146101fc5780635fcbd2851461020457806364ce9fff146102285761012c565b8063083c6323146101315780631959a0021461014b5780631a39d8ef1461018a57806327d1b1a2146101925780632f5105f8146101b1575b600080fd5b610139610333565b60408051918252519081900360200190f35b6101716004803603602081101561016157600080fd5b50356001600160a01b0316610339565b6040805192835290151560208301528051918290030190f35b610139610355565b6101af600480360360208110156101a857600080fd5b503561035b565b005b610139600480360360208110156101c757600080fd5b50356001600160a01b03166103e8565b6101af600480360360208110156101ed57600080fd5b503561045e565b6101af6104eb565b6101396106fb565b61020c610701565b604080516001600160a01b039092168252519081900360200190f35b61024e6004803603602081101561023e57600080fd5b50356001600160a01b0316610710565b604080519115158252519081900360200190f35b6101396004803603602081101561027857600080fd5b50356001600160a01b0316610731565b6101396107a5565b6101af600480360360408110156102a657600080fd5b50803590602001356107ab565b6101af600480360360208110156102c957600080fd5b50356109a8565b61020c610b24565b61020c600480360360208110156102ee57600080fd5b5035610b33565b6101396004803603602081101561030b57600080fd5b50356001600160a01b0316610b5a565b610139610b98565b610139610b9e565b61020c610ba4565b60055481565b6009602052600090815260409020805460019091015460ff1682565b60085481565b6001546001600160a01b031633146103a8576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b60045443106103e3576040805162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015290519081900360640190fd5b600755565b6000600654600854116103fd57506000610459565b600061040883610b5a565b9050600061042e620f424061042884600654610bb390919063ffffffff16565b90610c13565b6001600160a01b0385166000908152600960205260409020549091506104549082610c55565b925050505b919050565b6001546001600160a01b031633146104ab576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b60045443106104e6576040805162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015290519081900360640190fd5b600655565b60026000541415610543576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556005544311610591576040805162461bcd60e51b815260206004820152601060248201526f6e6f7420686172766573742074696d6560801b604482015290519081900360640190fd5b336000908152600960205260409020546105eb576040805162461bcd60e51b81526020600482015260166024820152756861766520796f75207061727469636970617465643f60501b604482015290519081900360640190fd5b3360009081526009602052604090206001015460ff1615610648576040805162461bcd60e51b81526020600482015260126024820152711b9bdd1a1a5b99c81d1bc81a185c9d995cdd60721b604482015290519081900360640190fd5b600061065333610731565b90506000610660336103e8565b60035490915061067a906001600160a01b03163384610c97565b801561069757600254610697906001600160a01b03163383610c97565b336000818152600960209081526040918290206001908101805460ff19169091179055815185815290810184905281517f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954929181900390910190a250506001600055565b60045481565b6002546001600160a01b031681565b6001600160a01b031660009081526009602052604090206001015460ff1690565b6000600654600854111561077057600061074a83610b5a565b9050610768620f424061042883600754610bb390919063ffffffff16565b915050610459565b6006546007546001600160a01b03841660009081526009602052604090205461079e92916104289190610bb3565b9050610459565b60065481565b6001546001600160a01b031633146107f8576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600254604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561084357600080fd5b505afa158015610857573d6000803e3d6000fd5b505050506040513d602081101561086d57600080fd5b505182106108b7576040805162461bcd60e51b815260206004820152601260248201527106e6f7420656e6f75676820746f6b656e20360741b604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d602081101561092c57600080fd5b50518110610976576040805162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f75676820746f6b656e203160701b604482015290519081900360640190fd5b60025461098d906001600160a01b03163384610c97565b6003546109a4906001600160a01b03163383610c97565b5050565b600454431180156109ba575060055443105b6109fa576040805162461bcd60e51b815260206004820152600c60248201526b6e6f742069666f2074696d6560a01b604482015290519081900360640190fd5b60008111610a42576040805162461bcd60e51b815260206004820152601060248201526f06e656564205f616d6f756e74203e20360841b604482015290519081900360640190fd5b600254610a5a906001600160a01b0316333084610cee565b33600090815260096020526040902054610ab157600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916331790555b33600090815260096020526040902054610acb9082610d4e565b33600090815260096020526040902055600854610ae89082610d4e565b60085560408051828152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a250565b6003546001600160a01b031681565b600a8181548110610b4057fe5b6000918252602090912001546001600160a01b0316905081565b6008546001600160a01b0382166000908152600960205260408120549091610b9291620f42409161042891829064e8d4a51000610bb3565b92915050565b60075481565b600a5490565b6001546001600160a01b031681565b600082610bc257506000610b92565b82820282848281610bcf57fe5b0414610c0c5760405162461bcd60e51b815260040180806020018281038252602181526020018061113d6021913960400191505060405180910390fd5b9392505050565b6000610c0c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610da8565b6000610c0c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e4a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ce9908490610ea4565b505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610d48908590610ea4565b50505050565b600082820183811015610c0c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610e345760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610df9578181015183820152602001610de1565b50505050905090810190601f168015610e265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610e4057fe5b0495945050505050565b60008184841115610e9c5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610df9578181015183820152602001610de1565b505050900390565b6060610ef9826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f559092919063ffffffff16565b805190915015610ce957808060200190516020811015610f1857600080fd5b5051610ce95760405162461bcd60e51b815260040180806020018281038252602a815260200180611113602a913960400191505060405180910390fd5b6060610f648484600085610f6c565b949350505050565b6060610f77856110d9565b610fc8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106110075780518252601f199092019160209182019101610fe8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611069576040519150601f19603f3d011682016040523d82523d6000602084013e61106e565b606091505b50915091508115611082579150610f649050565b8051156110925780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610df9578181015183820152602001610de1565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061045457505015159291505056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212200c56ca58fc24041fe7814048bc89d6da758670b1e3442d4ee92385e6ee663eae64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1257 CODESIZE SUB DUP1 PUSH2 0x1257 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP9 DUP11 AND SWAP9 DUP3 AND SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP8 SSTORE PUSH1 0x4 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1193 DUP1 PUSH2 0xC4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87E97BC6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB810FB43 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB810FB43 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xB920ADE2 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xE1AF9A95 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xFC00358E EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x32B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x87E97BC6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x9C0A7669 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x9F1B5248 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xB7813607 EQ PUSH2 0x2D0 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x4225C32F GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4225C32F EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x64CE9FFF EQ PUSH2 0x228 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x83C6323 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x27D1B1A2 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2F5105F8 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x45E JUMP JUMPDEST PUSH2 0x1AF PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x139 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x20C PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x731 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x20C PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x139 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x139 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x20C PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x61646D696E3A207775743F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD NUMBER LT PUSH2 0x3E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x6E6F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD GT PUSH2 0x3FD JUMPI POP PUSH1 0x0 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x42E PUSH3 0xF4240 PUSH2 0x428 DUP5 PUSH1 0x6 SLOAD PUSH2 0xBB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x454 SWAP1 DUP3 PUSH2 0xC55 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x61646D696E3A207775743F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD NUMBER LT PUSH2 0x4E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x6E6F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x543 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x5 SLOAD NUMBER GT PUSH2 0x591 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F7420686172766573742074696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6861766520796F75207061727469636970617465643F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1B9BDD1A1A5B99C81D1BC81A185C9D995CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x653 CALLER PUSH2 0x731 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x660 CALLER PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x67A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0xC97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x2 SLOAD PUSH2 0x697 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xC97 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 PUSH2 0x74A DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 POP PUSH2 0x768 PUSH3 0xF4240 PUSH2 0x428 DUP4 PUSH1 0x7 SLOAD PUSH2 0xBB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x459 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x79E SWAP3 SWAP2 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x61646D696E3A207775743F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x857 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 LT PUSH2 0x8B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x6E6F7420656E6F75676820746F6B656E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x916 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x6E6F7420656E6F75676820746F6B656E2031 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x98D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x9A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xC97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x9BA JUMPI POP PUSH1 0x5 SLOAD NUMBER LT JUMPDEST PUSH2 0x9FA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6E6F742069666F2074696D65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E656564205F616D6F756E74203E203 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xA5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0xCEE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAB1 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xACB SWAP1 DUP3 PUSH2 0xD4E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0xAE8 SWAP1 DUP3 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB40 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xB92 SWAP2 PUSH3 0xF4240 SWAP2 PUSH2 0x428 SWAP2 DUP3 SWAP1 PUSH5 0xE8D4A51000 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBC2 JUMPI POP PUSH1 0x0 PUSH2 0xB92 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xBCF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x113D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xCE9 SWAP1 DUP5 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD48 SWAP1 DUP6 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xE40 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xDF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEF9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF55 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xCE9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xCE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1113 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xF64 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF6C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF77 DUP6 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0xFC8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1007 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x106E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1082 JUMPI SWAP2 POP PUSH2 0xF64 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1092 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xDF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x454 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xC JUMP 0xCA PC 0xFC 0x24 DIV 0x1F 0xE7 DUP2 BLOCKHASH 0x48 0xBC DUP10 0xD6 0xDA PUSH22 0x8670B1E3442D4EE92385E6EE663EAE64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "25941:5273:0:-:0;;;27087:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27087:517:0;;;;;;;;;;;;;;;;;;;;;;;;;;;24915:1;25029:7;:22;;;27330:7;:18;;-1:-1:-1;;;;;27330:18:0;;;-1:-1:-1;;;;;;27330:18:0;;;;;;;27358:13;:30;;;;;;;;;;;;;;;27398:10;:24;;;;27432:8;:20;;;;27462:14;:32;;;;27504:13;:30;;;;27544:11;:15;;;;27569:28;;;;;;;;;;;25941:5273;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806387e97bc6116100ad578063b810fb4311610071578063b810fb43146102d8578063b920ade2146102f5578063e1af9a951461031b578063fc00358e14610323578063fc6f94681461032b5761012c565b806387e97bc6146102625780639c0a7669146102885780639f1b524814610290578063b6b55f25146102b3578063b7813607146102d05761012c565b80634225c32f116100f45780634225c32f146101d75780634641257d146101f457806348cd4cb1146101fc5780635fcbd2851461020457806364ce9fff146102285761012c565b8063083c6323146101315780631959a0021461014b5780631a39d8ef1461018a57806327d1b1a2146101925780632f5105f8146101b1575b600080fd5b610139610333565b60408051918252519081900360200190f35b6101716004803603602081101561016157600080fd5b50356001600160a01b0316610339565b6040805192835290151560208301528051918290030190f35b610139610355565b6101af600480360360208110156101a857600080fd5b503561035b565b005b610139600480360360208110156101c757600080fd5b50356001600160a01b03166103e8565b6101af600480360360208110156101ed57600080fd5b503561045e565b6101af6104eb565b6101396106fb565b61020c610701565b604080516001600160a01b039092168252519081900360200190f35b61024e6004803603602081101561023e57600080fd5b50356001600160a01b0316610710565b604080519115158252519081900360200190f35b6101396004803603602081101561027857600080fd5b50356001600160a01b0316610731565b6101396107a5565b6101af600480360360408110156102a657600080fd5b50803590602001356107ab565b6101af600480360360208110156102c957600080fd5b50356109a8565b61020c610b24565b61020c600480360360208110156102ee57600080fd5b5035610b33565b6101396004803603602081101561030b57600080fd5b50356001600160a01b0316610b5a565b610139610b98565b610139610b9e565b61020c610ba4565b60055481565b6009602052600090815260409020805460019091015460ff1682565b60085481565b6001546001600160a01b031633146103a8576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b60045443106103e3576040805162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015290519081900360640190fd5b600755565b6000600654600854116103fd57506000610459565b600061040883610b5a565b9050600061042e620f424061042884600654610bb390919063ffffffff16565b90610c13565b6001600160a01b0385166000908152600960205260409020549091506104549082610c55565b925050505b919050565b6001546001600160a01b031633146104ab576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b60045443106104e6576040805162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015290519081900360640190fd5b600655565b60026000541415610543576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556005544311610591576040805162461bcd60e51b815260206004820152601060248201526f6e6f7420686172766573742074696d6560801b604482015290519081900360640190fd5b336000908152600960205260409020546105eb576040805162461bcd60e51b81526020600482015260166024820152756861766520796f75207061727469636970617465643f60501b604482015290519081900360640190fd5b3360009081526009602052604090206001015460ff1615610648576040805162461bcd60e51b81526020600482015260126024820152711b9bdd1a1a5b99c81d1bc81a185c9d995cdd60721b604482015290519081900360640190fd5b600061065333610731565b90506000610660336103e8565b60035490915061067a906001600160a01b03163384610c97565b801561069757600254610697906001600160a01b03163383610c97565b336000818152600960209081526040918290206001908101805460ff19169091179055815185815290810184905281517f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954929181900390910190a250506001600055565b60045481565b6002546001600160a01b031681565b6001600160a01b031660009081526009602052604090206001015460ff1690565b6000600654600854111561077057600061074a83610b5a565b9050610768620f424061042883600754610bb390919063ffffffff16565b915050610459565b6006546007546001600160a01b03841660009081526009602052604090205461079e92916104289190610bb3565b9050610459565b60065481565b6001546001600160a01b031633146107f8576040805162461bcd60e51b815260206004820152600b60248201526a61646d696e3a207775743f60a81b604482015290519081900360640190fd5b600254604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561084357600080fd5b505afa158015610857573d6000803e3d6000fd5b505050506040513d602081101561086d57600080fd5b505182106108b7576040805162461bcd60e51b815260206004820152601260248201527106e6f7420656e6f75676820746f6b656e20360741b604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d602081101561092c57600080fd5b50518110610976576040805162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f75676820746f6b656e203160701b604482015290519081900360640190fd5b60025461098d906001600160a01b03163384610c97565b6003546109a4906001600160a01b03163383610c97565b5050565b600454431180156109ba575060055443105b6109fa576040805162461bcd60e51b815260206004820152600c60248201526b6e6f742069666f2074696d6560a01b604482015290519081900360640190fd5b60008111610a42576040805162461bcd60e51b815260206004820152601060248201526f06e656564205f616d6f756e74203e20360841b604482015290519081900360640190fd5b600254610a5a906001600160a01b0316333084610cee565b33600090815260096020526040902054610ab157600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916331790555b33600090815260096020526040902054610acb9082610d4e565b33600090815260096020526040902055600854610ae89082610d4e565b60085560408051828152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a250565b6003546001600160a01b031681565b600a8181548110610b4057fe5b6000918252602090912001546001600160a01b0316905081565b6008546001600160a01b0382166000908152600960205260408120549091610b9291620f42409161042891829064e8d4a51000610bb3565b92915050565b60075481565b600a5490565b6001546001600160a01b031681565b600082610bc257506000610b92565b82820282848281610bcf57fe5b0414610c0c5760405162461bcd60e51b815260040180806020018281038252602181526020018061113d6021913960400191505060405180910390fd5b9392505050565b6000610c0c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610da8565b6000610c0c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e4a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ce9908490610ea4565b505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610d48908590610ea4565b50505050565b600082820183811015610c0c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008183610e345760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610df9578181015183820152602001610de1565b50505050905090810190601f168015610e265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610e4057fe5b0495945050505050565b60008184841115610e9c5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610df9578181015183820152602001610de1565b505050900390565b6060610ef9826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f559092919063ffffffff16565b805190915015610ce957808060200190516020811015610f1857600080fd5b5051610ce95760405162461bcd60e51b815260040180806020018281038252602a815260200180611113602a913960400191505060405180910390fd5b6060610f648484600085610f6c565b949350505050565b6060610f77856110d9565b610fc8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106110075780518252601f199092019160209182019101610fe8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611069576040519150601f19603f3d011682016040523d82523d6000602084013e61106e565b606091505b50915091508115611082579150610f649050565b8051156110925780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610df9578181015183820152602001610de1565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061045457505015159291505056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212200c56ca58fc24041fe7814048bc89d6da758670b1e3442d4ee92385e6ee663eae64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87E97BC6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB810FB43 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB810FB43 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xB920ADE2 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xE1AF9A95 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xFC00358E EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x32B JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x87E97BC6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x9C0A7669 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x9F1B5248 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xB7813607 EQ PUSH2 0x2D0 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x4225C32F GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4225C32F EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x64CE9FFF EQ PUSH2 0x228 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x83C6323 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x27D1B1A2 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2F5105F8 EQ PUSH2 0x1B1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x45E JUMP JUMPDEST PUSH2 0x1AF PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x139 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x20C PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x731 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x20C PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x139 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x139 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x20C PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x61646D696E3A207775743F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD NUMBER LT PUSH2 0x3E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x6E6F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD GT PUSH2 0x3FD JUMPI POP PUSH1 0x0 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x42E PUSH3 0xF4240 PUSH2 0x428 DUP5 PUSH1 0x6 SLOAD PUSH2 0xBB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x454 SWAP1 DUP3 PUSH2 0xC55 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x61646D696E3A207775743F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD NUMBER LT PUSH2 0x4E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x6E6F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x543 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH1 0x5 SLOAD NUMBER GT PUSH2 0x591 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F7420686172766573742074696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6861766520796F75207061727469636970617465643F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1B9BDD1A1A5B99C81D1BC81A185C9D995CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x653 CALLER PUSH2 0x731 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x660 CALLER PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x67A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0xC97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x2 SLOAD PUSH2 0x697 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xC97 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 PUSH2 0x74A DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 POP PUSH2 0x768 PUSH3 0xF4240 PUSH2 0x428 DUP4 PUSH1 0x7 SLOAD PUSH2 0xBB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x459 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x79E SWAP3 SWAP2 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x61646D696E3A207775743F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x857 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 LT PUSH2 0x8B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x6E6F7420656E6F75676820746F6B656E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x916 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x6E6F7420656E6F75676820746F6B656E2031 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x98D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x9A4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xC97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x9BA JUMPI POP PUSH1 0x5 SLOAD NUMBER LT JUMPDEST PUSH2 0x9FA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6E6F742069666F2074696D65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E656564205F616D6F756E74203E203 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xA5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0xCEE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAB1 JUMPI PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xACB SWAP1 DUP3 PUSH2 0xD4E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0xAE8 SWAP1 DUP3 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB40 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xB92 SWAP2 PUSH3 0xF4240 SWAP2 PUSH2 0x428 SWAP2 DUP3 SWAP1 PUSH5 0xE8D4A51000 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBC2 JUMPI POP PUSH1 0x0 PUSH2 0xB92 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xBCF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x113D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xCE9 SWAP1 DUP5 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD48 SWAP1 DUP6 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0xE40 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xDF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEF9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF55 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xCE9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xCE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1113 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xF64 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF6C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF77 DUP6 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0xFC8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1007 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x106E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1082 JUMPI SWAP2 POP PUSH2 0xF64 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1092 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xDF9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x454 JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xC JUMP 0xCA PC 0xFC 0x24 DIV 0x1F 0xE7 DUP2 BLOCKHASH 0x48 0xBC DUP10 0xD6 0xDA PUSH22 0x8670B1E3442D4EE92385E6EE663EAE64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "25941:5273:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26478:23;;;:::i;:::-;;;;;;;;;;;;;;;;26805:44;;;;;;;;;;;;;;;;-1:-1:-1;26805:44:0;-1:-1:-1;;;;;26805:44:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;26748:26;;;:::i;27715:162::-;;;;;;;;;;;;;;;;-1:-1:-1;27715:162:0;;:::i;:::-;;30273:333;;;;;;;;;;;;;;;;-1:-1:-1;30273:333:0;-1:-1:-1;;;;;30273:333:0;;:::i;27883:164::-;;;;;;;;;;;;;;;;-1:-1:-1;27883:164:0;;:::i;28637:721::-;;;:::i;26409:25::-;;;:::i;26283:21::-;;;:::i;:::-;;;;-1:-1:-1;;;;;26283:21:0;;;;;;;;;;;;;;29364:111;;;;;;;;;;;;;;;;-1:-1:-1;29364:111:0;-1:-1:-1;;;;;29364:111:0;;:::i;:::-;;;;;;;;;;;;;;;;;;29780:432;;;;;;;;;;;;;;;;-1:-1:-1;29780:432:0;-1:-1:-1;;;;;29780:432:0;;:::i;26563:28::-;;;:::i;30724:488::-;;;;;;;;;;;;;;;;-1:-1:-1;30724:488:0;;;;;;;:::i;28053:578::-;;;;;;;;;;;;;;;;-1:-1:-1;28053:578:0;;:::i;26336:27::-;;;:::i;26876:28::-;;;;;;;;;;;;;;;;-1:-1:-1;26876:28:0;;:::i;29572:154::-;;;;;;;;;;;;;;;;-1:-1:-1;29572:154:0;-1:-1:-1;;;;;29572:154:0;;:::i;26650:29::-;;;:::i;30612:106::-;;;:::i;26225:27::-;;;:::i;26478:23::-;;;;:::o;26805:44::-;;;;;;;;;;;;;;;;;;;;;:::o;26748:26::-;;;;:::o;27715:162::-;27663:12;;-1:-1:-1;;;;;27663:12:0;27649:10;:26;27641:50;;;;;-1:-1:-1;;;27641:50:0;;;;;;;;;;;;-1:-1:-1;;;27641:50:0;;;;;;;;;;;;;;;27814:10:::1;;27799:12;:25;27791:40;;;::::0;;-1:-1:-1;;;27791:40:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;27791:40:0;;;;;;;;;;;;;::::1;;27841:14;:29:::0;27715:162::o;30273:333::-;30337:7;30375:13;;30360:11;;:28;30356:67;;-1:-1:-1;30411:1:0;30404:8;;30356:67;30432:18;30453:24;30471:5;30453:17;:24::i;:::-;30432:45;;30487:17;30507:38;30541:3;30507:29;30525:10;30507:13;;:17;;:29;;;;:::i;:::-;:33;;:38::i;:::-;-1:-1:-1;;;;;30562:15:0;;;;;;:8;:15;;;;;:22;30487:58;;-1:-1:-1;30562:37:0;;30487:58;30562:26;:37::i;:::-;30555:44;;;;30273:333;;;;:::o;27883:164::-;27663:12;;-1:-1:-1;;;;;27663:12:0;27649:10;:26;27641:50;;;;;-1:-1:-1;;;27641:50:0;;;;;;;;;;;;-1:-1:-1;;;27641:50:0;;;;;;;;;;;;;;;27983:10:::1;;27968:12;:25;27960:40;;;::::0;;-1:-1:-1;;;27960:40:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;27960:40:0;;;;;;;;;;;;;::::1;;28010:13;:30:::0;27883:164::o;28637:721::-;24958:1;25546:7;;:19;;25538:63;;;;;-1:-1:-1;;;25538:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24958:1;25676:7;:18;28709:8:::1;::::0;28694:12:::1;:23;28686:52;;;::::0;;-1:-1:-1;;;28686:52:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;28686:52:0;;;;;;;;;;;;;::::1;;28765:10;28786:1;28756:20:::0;;;:8:::1;:20;::::0;;;;:27;28748:66:::1;;;::::0;;-1:-1:-1;;;28748:66:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;28748:66:0;;;;;;;;;;;;;::::1;;28842:10;28833:20;::::0;;;:8:::1;:20;::::0;;;;:28:::1;;::::0;::::1;;28832:29;28824:60;;;::::0;;-1:-1:-1;;;28824:60:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;28824:60:0;;;;;;;;;;;;;::::1;;28894:27;28924:29;28942:10;28924:17;:29::i;:::-;28894:59;;28963:28;28994:30;29013:10;28994:18;:30::i;:::-;29034:13;::::0;28963:61;;-1:-1:-1;29034:68:0::1;::::0;-1:-1:-1;;;;;29034:13:0::1;29069:10;29082:19:::0;29034:26:::1;:68::i;:::-;29116:24:::0;;29112:118:::1;;29156:7;::::0;:63:::1;::::0;-1:-1:-1;;;;;29156:7:0::1;29185:10;29198:20:::0;29156::::1;:63::i;:::-;29248:10;29239:20;::::0;;;:8:::1;:20;::::0;;;;;;;;29270:4:::1;29239:28:::0;;::::1;:35:::0;;-1:-1:-1;;29239:35:0::1;::::0;;::::1;::::0;;29289:62;;;;;;;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;-1:-1:-1::0;;24915:1:0;25849:7;:22;28637:721::o;26409:25::-;;;;:::o;26283:21::-;;;-1:-1:-1;;;;;26283:21:0;;:::o;29364:111::-;-1:-1:-1;;;;;29445:15:0;29422:4;29445:15;;;:8;:15;;;;;:23;;;;;;29364:111::o;29780:432::-;29843:7;29880:13;;29866:11;;:27;29862:344;;;29909:18;29930:24;29948:5;29930:17;:24::i;:::-;29909:45;;29975:39;30010:3;29975:30;29994:10;29975:14;;:18;;:30;;;;:::i;:39::-;29968:46;;;;;29862:344;30181:13;;30161:14;;-1:-1:-1;;;;;30134:15:0;;;;;;:8;:15;;;;;:22;:61;;30181:13;30134:42;;:22;:26;:42::i;:61::-;30111:84;;;;26563:28;;;;:::o;30724:488::-;27663:12;;-1:-1:-1;;;;;27663:12:0;27649:10;:26;27641:50;;;;;-1:-1:-1;;;27641:50:0;;;;;;;;;;;;-1:-1:-1;;;27641:50:0;;;;;;;;;;;;;;;30868:7:::1;::::0;:32:::1;::::0;;-1:-1:-1;;;30868:32:0;;30894:4:::1;30868:32;::::0;::::1;::::0;;;-1:-1:-1;;;;;30868:7:0;;::::1;::::0;:17:::1;::::0;:32;;;;;::::1;::::0;;;;;;;;;:7;:32;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;30868:32:0;30856:44;::::1;30835:109;;;::::0;;-1:-1:-1;;;30835:109:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;30835:109:0;;;;;;;;;;;;;::::1;;30990:13;::::0;:38:::1;::::0;;-1:-1:-1;;;30990:38:0;;31022:4:::1;30990:38;::::0;::::1;::::0;;;-1:-1:-1;;;;;30990:13:0;;::::1;::::0;:23:::1;::::0;:38;;;;;::::1;::::0;;;;;;;;;:13;:38;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;30990:38:0;30975:53;::::1;30954:118;;;::::0;;-1:-1:-1;;;30954:118:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;30954:118:0;;;;;;;;;;;;;::::1;;31082:7;::::0;:52:::1;::::0;-1:-1:-1;;;;;31082:7:0::1;31111:10;31124:9:::0;31082:20:::1;:52::i;:::-;31144:13;::::0;:61:::1;::::0;-1:-1:-1;;;;;31144:13:0::1;31179:10;31192:12:::0;31144:26:::1;:61::i;:::-;30724:488:::0;;:::o;28053:578::-;28140:10;;28125:12;:25;:52;;;;;28169:8;;28154:12;:23;28125:52;28104:111;;;;;-1:-1:-1;;;28104:111:0;;;;;;;;;;;;-1:-1:-1;;;28104:111:0;;;;;;;;;;;;;;;28243:1;28233:7;:11;28225:40;;;;;-1:-1:-1;;;28225:40:0;;;;;;;;;;;;-1:-1:-1;;;28225:40:0;;;;;;;;;;;;;;;28275:7;;:69;;-1:-1:-1;;;;;28275:7:0;28308:10;28329:4;28336:7;28275:24;:69::i;:::-;28367:10;28358:20;;;;:8;:20;;;;;:27;28354:100;;28406:11;:37;;;;;;;-1:-1:-1;28406:37:0;;;;;;;;-1:-1:-1;;;;;;28406:37:0;28431:10;28406:37;;;28354:100;28502:10;28493:20;;;;:8;:20;;;;;:27;:40;;28525:7;28493:31;:40::i;:::-;28472:10;28463:20;;;;:8;:20;;;;;:70;28557:11;;:24;;28573:7;28557:15;:24::i;:::-;28543:11;:38;28596:28;;;;;;;;28604:10;;28596:28;;;;;;;;;;28053:578;:::o;26336:27::-;;;-1:-1:-1;;;;;26336:27:0;;:::o;26876:28::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26876:28:0;;-1:-1:-1;26876:28:0;:::o;29572:154::-;29698:11;;-1:-1:-1;;;;;29661:15:0;;29635:7;29661:15;;;:8;:15;;;;;:22;29635:7;;29661:58;;29715:3;;29661:49;;;;29688:4;29661:26;:32::i;:58::-;29654:65;29572:154;-1:-1:-1;;29572:154:0:o;26650:29::-;;;;:::o;30612:106::-;30693:11;:18;30612:106;:::o;26225:27::-;;;-1:-1:-1;;;;;26225:27:0;;:::o;5594:459::-;5652:7;5893:6;5889:45;;-1:-1:-1;5922:1:0;5915:8;;5889:45;5956:5;;;5960:1;5956;:5;:1;5979:5;;;;;:10;5971:56;;;;-1:-1:-1;;;5971:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6045:1;5594:459;-1:-1:-1;;;5594:459:0:o;6515:130::-;6573:7;6599:39;6603:1;6606;6599:39;;;;;;;;;;;;;;;;;:3;:39::i;4705:134::-;4763:7;4789:43;4793:1;4796;4789:43;;;;;;;;;;;;;;;;;:3;:43::i;19575:239::-;19739:58;;;-1:-1:-1;;;;;19739:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19739:58:0;-1:-1:-1;;;19739:58:0;;;19687:120;;19720:5;;19687:19;:120::i;:::-;19575:239;;;:::o;19820:275::-;20010:68;;;-1:-1:-1;;;;;20010:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20010:68:0;-1:-1:-1;;;20010:68:0;;;19958:130;;19991:5;;19958:19;:130::i;:::-;19820:275;;;;:::o;4258:176::-;4316:7;4347:5;;;4370:6;;;;4362:46;;;;;-1:-1:-1;;;4362:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;7127:302;7243:7;7277:12;7270:5;7262:28;;;;-1:-1:-1;;;7262:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7300:9;7316:1;7312;:5;;;;;;;7127:302;-1:-1:-1;;;;;7127:302:0:o;5130:217::-;5246:7;5281:12;5273:6;;;;5265:29;;;;-1:-1:-1;;;5265:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5316:5:0;;;5130:217::o;22373:867::-;22792:23;22830:115;22875:4;22830:115;;;;;;;;;;;;;;;;;22838:5;-1:-1:-1;;;;;22830:27:0;;;:115;;;;;:::i;:::-;22959:17;;22792:153;;-1:-1:-1;22959:21:0;22955:279;;23128:10;23117:30;;;;;;;;;;;;;;;-1:-1:-1;23117:30:0;23092:131;;;;-1:-1:-1;;;23092:131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16349:224;16482:12;16513:53;16536:6;16544:4;16550:1;16553:12;16513:22;:53::i;:::-;16506:60;16349:224;-1:-1:-1;;;;16349:224:0:o;17918:1006::-;18086:12;18118:18;18129:6;18118:10;:18::i;:::-;18110:60;;;;;-1:-1:-1;;;18110:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;18241:12;18255:23;18294:6;-1:-1:-1;;;;;18294:11:0;18313:8;18323:4;18294:34;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18294:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18240:88;;;;18342:7;18338:580;;;18372:10;-1:-1:-1;18365:17:0;;-1:-1:-1;18365:17:0;18338:580;18483:17;;:21;18479:429;;18741:10;18735:17;18801:15;18788:10;18784:2;18780:19;18773:44;18690:145;18873:20;;-1:-1:-1;;;18873:20:0;;;;;;;;;;;;;;;;;18880:12;;18873:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13177:642;13237:4;13722:20;;13555:66;13769:23;;;;;;:42;;-1:-1:-1;;13796:15:0;;;13177:642;-1:-1:-1;;13177:642:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "899800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressList(uint256)": "1992",
								"adminAddress()": "1147",
								"deposit(uint256)": "infinite",
								"endBlock()": "1022",
								"finalWithdraw(uint256,uint256)": "infinite",
								"getAddressListLength()": "1086",
								"getOfferingAmount(address)": "infinite",
								"getRefundingAmount(address)": "infinite",
								"getUserAllocation(address)": "infinite",
								"harvest()": "infinite",
								"hasHarvest(address)": "1271",
								"lpToken()": "1126",
								"offeringAmount()": "1064",
								"offeringToken()": "1148",
								"raisingAmount()": "1043",
								"setOfferingAmount(uint256)": "21941",
								"setRaisingAmount(uint256)": "21874",
								"startBlock()": "1065",
								"totalAmount()": "1066",
								"userInfo(address)": "2015"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25941,
									"end": 31214,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27087,
									"end": 27604,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24915,
									"end": 24916,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25029,
									"end": 25036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25029,
									"end": 25051,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25029,
									"end": 25051,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25029,
									"end": 25051,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27337,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27330,
									"end": 27348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27371,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 27358,
									"end": 27388,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27398,
									"end": 27408,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27398,
									"end": 27422,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 27398,
									"end": 27422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27398,
									"end": 27422,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 27398,
									"end": 27422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27432,
									"end": 27440,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27432,
									"end": 27452,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 27432,
									"end": 27452,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27432,
									"end": 27452,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 27432,
									"end": 27452,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27462,
									"end": 27476,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 27462,
									"end": 27494,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27462,
									"end": 27494,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27462,
									"end": 27494,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27462,
									"end": 27494,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27504,
									"end": 27517,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27504,
									"end": 27534,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 27504,
									"end": 27534,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27504,
									"end": 27534,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 27504,
									"end": 27534,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27544,
									"end": 27555,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27544,
									"end": 27559,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27544,
									"end": 27559,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27544,
									"end": 27559,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27544,
									"end": 27559,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27569,
									"end": 27597,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25941,
									"end": 31214,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c56ca58fc24041fe7814048bc89d6da758670b1e3442d4ee92385e6ee663eae64736f6c634300060c0033",
									".code": [
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "87E97BC6"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "B810FB43"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "B810FB43"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "B920ADE2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "E1AF9A95"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "FC00358E"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "FC6F9468"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "87E97BC6"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "9C0A7669"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "9F1B5248"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "B7813607"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "4225C32F"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "4225C32F"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "4641257D"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "5FCBD285"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "64CE9FFF"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "83C6323"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "1A39D8EF"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "27D1B1A2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "2F5105F8"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 31214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27649,
											"end": 27659,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27649,
											"end": 27675,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646D696E3A207775743F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27814,
											"end": 27824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27814,
											"end": 27824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27799,
											"end": 27811,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27799,
											"end": 27824,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27791,
											"end": 27831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27841,
											"end": 27855,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27841,
											"end": 27870,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27715,
											"end": 27877,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30337,
											"end": 30344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30375,
											"end": 30388,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30375,
											"end": 30388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30360,
											"end": 30371,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30360,
											"end": 30371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30360,
											"end": 30388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30356,
											"end": 30423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 30356,
											"end": 30423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30411,
											"end": 30412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30404,
											"end": 30412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30404,
											"end": 30412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30356,
											"end": 30423,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 30356,
											"end": 30423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30432,
											"end": 30450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30453,
											"end": 30477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 30471,
											"end": 30476,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30453,
											"end": 30470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30453,
											"end": 30477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30453,
											"end": 30477,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 30453,
											"end": 30477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30432,
											"end": 30477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30432,
											"end": 30477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30507,
											"end": 30545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 30541,
											"end": 30544,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 30525,
											"end": 30535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30520,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30507,
											"end": 30520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 30507,
											"end": 30524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 30507,
											"end": 30536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30507,
											"end": 30540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 30507,
											"end": 30545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30507,
											"end": 30545,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 30507,
											"end": 30545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30570,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30577,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30562,
											"end": 30599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30562,
											"end": 30599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30562,
											"end": 30588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30562,
											"end": 30599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30562,
											"end": 30599,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30562,
											"end": 30599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30555,
											"end": 30599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30273,
											"end": 30606,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27649,
											"end": 27659,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27649,
											"end": 27675,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646D696E3A207775743F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27983,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27983,
											"end": 27993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 27980,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27968,
											"end": 27993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27960,
											"end": 28000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28010,
											"end": 28023,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28010,
											"end": 28040,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 28047,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 24959,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25546,
											"end": 25553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25546,
											"end": 25553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25546,
											"end": 25565,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25546,
											"end": 25565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25538,
											"end": 25601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 24959,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25676,
											"end": 25683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25676,
											"end": 25694,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28709,
											"end": 28717,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28709,
											"end": 28717,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28694,
											"end": 28706,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 28694,
											"end": 28717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F7420686172766573742074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28686,
											"end": 28738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28765,
											"end": 28775,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 28787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28764,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28776,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6861766520796F75207061727469636970617465643F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28748,
											"end": 28814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28842,
											"end": 28852,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28841,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28853,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28861,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28833,
											"end": 28861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28833,
											"end": 28861,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28833,
											"end": 28861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD1A1A5B99C81D1BC81A185C9D995CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 28824,
											"end": 28884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28894,
											"end": 28921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28924,
											"end": 28953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28942,
											"end": 28952,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28924,
											"end": 28941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28924,
											"end": 28953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28924,
											"end": 28953,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28924,
											"end": 28953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28894,
											"end": 28953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28894,
											"end": 28953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28963,
											"end": 28991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29013,
											"end": 29023,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28994,
											"end": 29012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29047,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29034,
											"end": 29047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28963,
											"end": 29024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28963,
											"end": 29024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29034,
											"end": 29102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29034,
											"end": 29102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29034,
											"end": 29047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29069,
											"end": 29079,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29082,
											"end": 29101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29034,
											"end": 29102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29034,
											"end": 29102,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 29034,
											"end": 29102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29112,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29112,
											"end": 29230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29156,
											"end": 29163,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29156,
											"end": 29163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29156,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29156,
											"end": 29219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29156,
											"end": 29163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29185,
											"end": 29195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29198,
											"end": 29218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29156,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29156,
											"end": 29219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29156,
											"end": 29219,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29156,
											"end": 29219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29258,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29247,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29270,
											"end": 29274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29239,
											"end": 29267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29239,
											"end": 29274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "PUSH",
											"source": 0,
											"value": "71BAB65CED2E5750775A0613BE067DF48EF06CF92A496EBF7663AE0660924954"
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29289,
											"end": 29351,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24915,
											"end": 24916,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25849,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25849,
											"end": 25871,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28637,
											"end": 29358,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26409,
											"end": 26434,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26283,
											"end": 26304,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29422,
											"end": 29426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29453,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29445,
											"end": 29468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29468,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29445,
											"end": 29468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29445,
											"end": 29468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29364,
											"end": 29475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 29780,
											"end": 30212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29880,
											"end": 29893,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29880,
											"end": 29893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29866,
											"end": 29877,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29866,
											"end": 29877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29866,
											"end": 29893,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29862,
											"end": 30206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29862,
											"end": 30206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29862,
											"end": 30206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29930,
											"end": 29954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29948,
											"end": 29953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29930,
											"end": 29947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29930,
											"end": 29954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29930,
											"end": 29954,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29930,
											"end": 29954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 30014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30010,
											"end": 30013,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 29975,
											"end": 30005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 29994,
											"end": 30004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 29989,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29975,
											"end": 29989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 29993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 29975,
											"end": 29993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 30005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 30005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 30005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29975,
											"end": 30005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 30005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29975,
											"end": 30014,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 29975,
											"end": 30014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29968,
											"end": 30014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29968,
											"end": 30014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29968,
											"end": 30014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29968,
											"end": 30014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29968,
											"end": 30014,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29862,
											"end": 30206,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29862,
											"end": 30206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30181,
											"end": 30194,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30181,
											"end": 30194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30161,
											"end": 30175,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30161,
											"end": 30175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30142,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 30134,
											"end": 30195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30181,
											"end": 30194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 30134,
											"end": 30176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30134,
											"end": 30160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 30134,
											"end": 30176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30134,
											"end": 30195,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 30134,
											"end": 30195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30111,
											"end": 30195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30111,
											"end": 30195,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26563,
											"end": 26591,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27663,
											"end": 27675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27649,
											"end": 27659,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27649,
											"end": 27675,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646D696E3A207775743F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27641,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 30898,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30885,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30868,
											"end": 30885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30875,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30868,
											"end": 30900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30900,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F7420656E6F75676820746F6B656E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 30835,
											"end": 30944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31022,
											"end": 31026,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31013,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30990,
											"end": 31013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31003,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30990,
											"end": 31028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30975,
											"end": 31028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30975,
											"end": 31028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F7420656E6F75676820746F6B656E2031"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 30954,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31082,
											"end": 31089,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31082,
											"end": 31089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31082,
											"end": 31134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31082,
											"end": 31134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31082,
											"end": 31089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31111,
											"end": 31121,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31124,
											"end": 31133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31082,
											"end": 31102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31082,
											"end": 31134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31082,
											"end": 31134,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31082,
											"end": 31134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31157,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31144,
											"end": 31157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31144,
											"end": 31205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31144,
											"end": 31157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31189,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31192,
											"end": 31204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31144,
											"end": 31205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31144,
											"end": 31205,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31144,
											"end": 31205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30724,
											"end": 31212,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28140,
											"end": 28150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28140,
											"end": 28150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28137,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28150,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28177,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28169,
											"end": 28177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28154,
											"end": 28166,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 28154,
											"end": 28177,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28125,
											"end": 28177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F742069666F2074696D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28104,
											"end": 28215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28233,
											"end": 28240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28233,
											"end": 28244,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E656564205F616D6F756E74203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28225,
											"end": 28265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28282,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28275,
											"end": 28282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28275,
											"end": 28344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28275,
											"end": 28282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28308,
											"end": 28318,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28333,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28336,
											"end": 28343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28275,
											"end": 28344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28275,
											"end": 28344,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28275,
											"end": 28344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28367,
											"end": 28377,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28366,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28378,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28354,
											"end": 28454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28417,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "PUSH",
											"source": 0,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28431,
											"end": 28441,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28443,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28454,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28354,
											"end": 28454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28512,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28501,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28513,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28493,
											"end": 28533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28525,
											"end": 28532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28493,
											"end": 28524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28493,
											"end": 28533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28493,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28493,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28472,
											"end": 28482,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28471,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28483,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28463,
											"end": 28533,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28568,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28557,
											"end": 28568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28557,
											"end": 28581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28573,
											"end": 28580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28557,
											"end": 28581,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28557,
											"end": 28581,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28557,
											"end": 28581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28543,
											"end": 28554,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28543,
											"end": 28581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28614,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28604,
											"end": 28614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28596,
											"end": 28624,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28053,
											"end": 28631,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26336,
											"end": 26363,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26876,
											"end": 26904,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29709,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29698,
											"end": 29709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29669,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29676,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29635,
											"end": 29642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 29661,
											"end": 29719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29715,
											"end": 29718,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 29715,
											"end": 29718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 29661,
											"end": 29710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29661,
											"end": 29710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29688,
											"end": 29692,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 29661,
											"end": 29687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 29661,
											"end": 29693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29661,
											"end": 29719,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 29661,
											"end": 29719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29719,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29572,
											"end": 29726,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26650,
											"end": 26679,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30693,
											"end": 30704,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 30693,
											"end": 30711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30612,
											"end": 30718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26225,
											"end": 26252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5594,
											"end": 6053,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5594,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5889,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5889,
											"end": 5934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5915,
											"end": 5923,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5889,
											"end": 5934,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5889,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5956,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5979,
											"end": 5989,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH data",
											"source": 0,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5971,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6045,
											"end": 6046,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 6053,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5594,
											"end": 6053,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6515,
											"end": 6645,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6515,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6599,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6599,
											"end": 6638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4705,
											"end": 4839,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4705,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4789,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4789,
											"end": 4832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19575,
											"end": 19814,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19575,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19739,
											"end": 19797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 19687,
											"end": 19807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19720,
											"end": 19725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19720,
											"end": 19725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 19687,
											"end": 19807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19687,
											"end": 19807,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 19687,
											"end": 19807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19575,
											"end": 19814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19575,
											"end": 19814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19575,
											"end": 19814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19575,
											"end": 19814,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20010,
											"end": 20078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19958,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19958,
											"end": 20088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 19996,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 19996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19958,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 19958,
											"end": 20088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19958,
											"end": 20088,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19958,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19820,
											"end": 20095,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4258,
											"end": 4434,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4258,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4408,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7429,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7127,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7317,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7429,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7127,
											"end": 7429,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5265,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5316,
											"end": 5321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5347,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22373,
											"end": 23240,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 22373,
											"end": 23240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22792,
											"end": 22815,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22875,
											"end": 22879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22838,
											"end": 22843,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22830,
											"end": 22857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22830,
											"end": 22857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 22830,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22959,
											"end": 22976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22792,
											"end": 22945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22792,
											"end": 22945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22959,
											"end": 22980,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22955,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 22955,
											"end": 23234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23128,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23117,
											"end": 23147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH data",
											"source": 0,
											"value": "21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23092,
											"end": 23223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16349,
											"end": 16573,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16349,
											"end": 16573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16482,
											"end": 16494,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16513,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16536,
											"end": 16542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16544,
											"end": 16548,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16565,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16513,
											"end": 16566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16513,
											"end": 16566,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16513,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16506,
											"end": 16566,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16349,
											"end": 16573,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16349,
											"end": 16573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17918,
											"end": 18924,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17918,
											"end": 18924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18086,
											"end": 18098,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18118,
											"end": 18136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18129,
											"end": 18135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18118,
											"end": 18128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18118,
											"end": 18136,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18118,
											"end": 18136,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18118,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18110,
											"end": 18170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18241,
											"end": 18253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18255,
											"end": 18278,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18294,
											"end": 18300,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18294,
											"end": 18305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18313,
											"end": 18321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18323,
											"end": 18327,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18294,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18240,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18240,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18240,
											"end": 18328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18240,
											"end": 18328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18342,
											"end": 18349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 18338,
											"end": 18918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18372,
											"end": 18382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18365,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18365,
											"end": 18382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18365,
											"end": 18382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18338,
											"end": 18918,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 18338,
											"end": 18918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18483,
											"end": 18504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18479,
											"end": 18908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 18479,
											"end": 18908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18741,
											"end": 18751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18735,
											"end": 18752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18801,
											"end": 18816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18788,
											"end": 18798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18780,
											"end": 18799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18773,
											"end": 18817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18690,
											"end": 18835,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 18690,
											"end": 18835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18880,
											"end": 18892,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18880,
											"end": 18892,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18873,
											"end": 18893,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13819,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 13177,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13237,
											"end": 13241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13742,
											"name": "EXTCODEHASH",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13621,
											"name": "PUSH",
											"source": 0,
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 13769,
											"end": 13792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13792,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13769,
											"end": 13811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13177,
											"end": 13819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addressList(uint256)": "b810fb43",
							"adminAddress()": "fc6f9468",
							"deposit(uint256)": "b6b55f25",
							"endBlock()": "083c6323",
							"finalWithdraw(uint256,uint256)": "9f1b5248",
							"getAddressListLength()": "fc00358e",
							"getOfferingAmount(address)": "87e97bc6",
							"getRefundingAmount(address)": "2f5105f8",
							"getUserAllocation(address)": "b920ade2",
							"harvest()": "4641257d",
							"hasHarvest(address)": "64ce9fff",
							"lpToken()": "5fcbd285",
							"offeringAmount()": "e1af9a95",
							"offeringToken()": "b7813607",
							"raisingAmount()": "9c0a7669",
							"setOfferingAmount(uint256)": "27d1b1a2",
							"setRaisingAmount(uint256)": "4225c32f",
							"startBlock()": "48cd4cb1",
							"totalAmount()": "1a39d8ef",
							"userInfo(address)": "1959a002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_offeringToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_offeringAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_raisingAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offeringAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"excessAmount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_offerAmount\",\"type\":\"uint256\"}],\"name\":\"finalWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getOfferingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRefundingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasHarvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offeringAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offeringToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"raisingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerAmount\",\"type\":\"uint256\"}],\"name\":\"setOfferingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raisingAmount\",\"type\":\"uint256\"}],\"name\":\"setRaisingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"IFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 919,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 964,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "adminAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "lpToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IBEP20)497"
							},
							{
								"astId": 968,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "offeringToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IBEP20)497"
							},
							{
								"astId": 970,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "startBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 972,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "endBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 974,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "raisingAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 976,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "offeringAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 978,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "totalAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 982,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "userInfo",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(UserInfo)962_storage)"
							},
							{
								"astId": 985,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
								"label": "addressList",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)497": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)962_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IFO.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)962_storage"
							},
							"t_struct(UserInfo)962_storage": {
								"encoding": "inplace",
								"label": "struct IFO.UserInfo",
								"members": [
									{
										"astId": 959,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 961,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:IFO",
										"label": "claimed",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPancakeProfile": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								}
							],
							"name": "addNftAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addTeam",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_newTeamId",
									"type": "uint256"
								}
							],
							"name": "changeTeam",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "claimFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "createProfile",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamId",
									"type": "uint256"
								}
							],
							"name": "getTeamProfile",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "getUserProfile",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "getUserStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_campaignId",
									"type": "uint256"
								}
							],
							"name": "increaseTeamPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_campaignId",
									"type": "uint256"
								}
							],
							"name": "increaseUserPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_campaignId",
									"type": "uint256"
								}
							],
							"name": "increaseUserPointsMultiple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamId",
									"type": "uint256"
								}
							],
							"name": "makeTeamJoinable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamId",
									"type": "uint256"
								}
							],
							"name": "makeTeamNotJoinable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauseProfile",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "reactivateProfile",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								}
							],
							"name": "removeTeamPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								}
							],
							"name": "removeUserPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								}
							],
							"name": "removeUserPointsMultiple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renameTeam",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateNumberCake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateProfile",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addNftAddress(address)": {
								"details": "To add a NFT contract address for users to set their profile. Callable only by owner admins."
							},
							"addTeam()": {
								"details": "Add a new teamId Callable only by owner admins."
							},
							"changeTeam(address,uint256)": {
								"details": "Function to change team. Callable only by special admins."
							},
							"claimFee(uint256)": {
								"details": "Claim CAKE to burn later. Callable only by owner admins."
							},
							"getTeamProfile(uint256)": {
								"details": "Check a team's profile"
							},
							"getUserProfile(address)": {
								"details": "Check the user's profile for a given address"
							},
							"getUserStatus(address)": {
								"details": "Check the user's status for a given address"
							},
							"increaseTeamPoints(uint256,uint256,uint256)": {
								"details": "To increase the number of points for a team. Callable only by point admins"
							},
							"increaseUserPoints(address,uint256,uint256)": {
								"details": "To increase the number of points for a user. Callable only by point admins"
							},
							"increaseUserPointsMultiple(address[],uint256,uint256)": {
								"details": "To increase the number of points for a set of users. Callable only by point admins"
							},
							"makeTeamJoinable(uint256)": {
								"details": "Make a team joinable again. Callable only by owner admins."
							},
							"makeTeamNotJoinable(uint256)": {
								"details": "Make a team not joinable. Callable only by owner admins."
							},
							"pauseProfile()": {
								"details": "To pause user profile. It releases the NFT. Callable only by registered users."
							},
							"reactivateProfile(address,uint256)": {
								"details": "To reactivate user profile. Callable only by registered users."
							},
							"removeTeamPoints(uint256,uint256)": {
								"details": "To remove the number of points for a team. Callable only by point admins"
							},
							"removeUserPoints(address,uint256)": {
								"details": "To remove the number of points for a user. Callable only by point admins"
							},
							"removeUserPointsMultiple(address[],uint256)": {
								"details": "To remove a set number of points for a set of users."
							},
							"renameTeam()": {
								"details": "Rename a team Callable only by owner admins."
							},
							"updateNumberCake()": {
								"details": "Update the number of CAKE to register Callable only by owner admins."
							},
							"updateProfile()": {
								"details": "To update user profile. Callable only by registered users."
							}
						},
						"title": "IPancakeProfile.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addNftAddress(address)": "5da3c240",
							"addTeam()": "0284a8d0",
							"changeTeam(address,uint256)": "e5020a62",
							"claimFee(uint256)": "f667526a",
							"createProfile(uint256,address,uint256)": "fd825f58",
							"getTeamProfile(uint256)": "aee2f47f",
							"getUserProfile(address)": "987ee156",
							"getUserStatus(address)": "ea0d5dcd",
							"increaseTeamPoints(uint256,uint256,uint256)": "1e47a476",
							"increaseUserPoints(address,uint256,uint256)": "1bdc17f6",
							"increaseUserPointsMultiple(address[],uint256,uint256)": "e2fa2ff3",
							"makeTeamJoinable(uint256)": "ebc4ffc7",
							"makeTeamNotJoinable(uint256)": "218188d7",
							"pauseProfile()": "c1694a2f",
							"reactivateProfile(address,uint256)": "a40601ee",
							"removeTeamPoints(uint256,uint256)": "d1d0954c",
							"removeUserPoints(address,uint256)": "da83fe4a",
							"removeUserPointsMultiple(address[],uint256)": "a56bd1de",
							"renameTeam()": "a31567d3",
							"updateNumberCake()": "61cc1e8a",
							"updateProfile()": "5c7c842a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"name\":\"addNftAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newTeamId\",\"type\":\"uint256\"}],\"name\":\"changeTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"createProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getTeamProfile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserProfile\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"increaseTeamPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"increaseUserPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"increaseUserPointsMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"makeTeamJoinable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"makeTeamNotJoinable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"reactivateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"}],\"name\":\"removeTeamPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"}],\"name\":\"removeUserPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"}],\"name\":\"removeUserPointsMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renameTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateNumberCake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addNftAddress(address)\":{\"details\":\"To add a NFT contract address for users to set their profile. Callable only by owner admins.\"},\"addTeam()\":{\"details\":\"Add a new teamId Callable only by owner admins.\"},\"changeTeam(address,uint256)\":{\"details\":\"Function to change team. Callable only by special admins.\"},\"claimFee(uint256)\":{\"details\":\"Claim CAKE to burn later. Callable only by owner admins.\"},\"getTeamProfile(uint256)\":{\"details\":\"Check a team's profile\"},\"getUserProfile(address)\":{\"details\":\"Check the user's profile for a given address\"},\"getUserStatus(address)\":{\"details\":\"Check the user's status for a given address\"},\"increaseTeamPoints(uint256,uint256,uint256)\":{\"details\":\"To increase the number of points for a team. Callable only by point admins\"},\"increaseUserPoints(address,uint256,uint256)\":{\"details\":\"To increase the number of points for a user. Callable only by point admins\"},\"increaseUserPointsMultiple(address[],uint256,uint256)\":{\"details\":\"To increase the number of points for a set of users. Callable only by point admins\"},\"makeTeamJoinable(uint256)\":{\"details\":\"Make a team joinable again. Callable only by owner admins.\"},\"makeTeamNotJoinable(uint256)\":{\"details\":\"Make a team not joinable. Callable only by owner admins.\"},\"pauseProfile()\":{\"details\":\"To pause user profile. It releases the NFT. Callable only by registered users.\"},\"reactivateProfile(address,uint256)\":{\"details\":\"To reactivate user profile. Callable only by registered users.\"},\"removeTeamPoints(uint256,uint256)\":{\"details\":\"To remove the number of points for a team. Callable only by point admins\"},\"removeUserPoints(address,uint256)\":{\"details\":\"To remove the number of points for a user. Callable only by point admins\"},\"removeUserPointsMultiple(address[],uint256)\":{\"details\":\"To remove a set number of points for a set of users.\"},\"renameTeam()\":{\"details\":\"Rename a team Callable only by owner admins.\"},\"updateNumberCake()\":{\"details\":\"Update the number of CAKE to register Callable only by owner admins.\"},\"updateProfile()\":{\"details\":\"To update user profile. Callable only by registered users.\"}},\"title\":\"IPancakeProfile.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"IPancakeProfile\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PointCenterIFO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pancakeProfileAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_maxViewLength",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "thresholdToClaim",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "campaignId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "numberPoints",
									"type": "uint256"
								}
							],
							"name": "IFOAdd",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_thresholdToClaim",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_campaignId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_numberPoints",
									"type": "uint256"
								}
							],
							"name": "addIFOAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "checkClaimStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_contractAddresses",
									"type": "address[]"
								}
							],
							"name": "checkClaimStatuses",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "",
									"type": "bool[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contractAddress",
									"type": "address"
								}
							],
							"name": "getPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "ifos",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "thresholdToClaim",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "campaignId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numberPoints",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxViewLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newMaxViewLength",
									"type": "uint256"
								}
							],
							"name": "updateMaxViewLength",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "It is a contract for users to collect points for IFOs they participated in.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "PointCenterIFO.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35405:40039  contract PointCenterIFO is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35909:36097  constructor(address _pancakeProfileAddress, uint256 _maxViewLength) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1952:1969  address msgSender */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1972:1984  _msgSender() */\n  tag_6\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1972:1982  _msgSender */\n  tag_7\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1972:1984  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1994:2000  _owner */\n  0x00\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1994:2012  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2027:2070  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1994:2012  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2027:2070  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":1994:2000  _owner */\n  dup3\n  swap1\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2027:2070  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35994:36008  pancakeProfile */\n  0x01\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35994:36050  pancakeProfile = IPancakeProfile(_pancakeProfileAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36060:36073  maxViewLength */\n  0x02\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36060:36090  maxViewLength = _maxViewLength */\n  sstore\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35405:40039  contract PointCenterIFO is Ownable {... */\n  jump(tag_9)\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":714:818  function _msgSender() internal view virtual returns (address payable) {... */\ntag_7:\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":801:811  msg.sender */\n  caller\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":714:818  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35405:40039  contract PointCenterIFO is Ownable {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35405:40039  contract PointCenterIFO is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa789fa30\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xa789fa30\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc105fa39\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xee204abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf6fed429\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x2b253913\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3154782f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x740bd4ac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37461:38011  function addIFOAddress(... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      add\n      calldataload\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35518:35554  mapping(address => IFOs) public ifos */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_19\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2776:2921  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_14\n      tag_21\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38388:38983  function checkClaimStatuses(... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_27\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_28:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_28)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2153:2230  function owner() public view returns (address) {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38017:38142  function updateMaxViewLength(uint256 _newMaxViewLength) external onlyOwner {... */\n    tag_8:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38148:38382  function checkClaimStatus(address _userAddress, address _contractAddress)... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_38\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36103:37455  function getPoints(address _contractAddress) external {... */\n    tag_10:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3070:3344  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_44\n      jump\t// in\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35483:35511  uint256 public maxViewLength */\n    tag_12:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37461:38011  function addIFOAddress(... */\n    tag_16:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      tag_48\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2377  _msgSender */\n      tag_49\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      jump\t// in\n    tag_48:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2363  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2379  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2349:2416  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_50\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_50:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37716:37859  IFOs({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      dup2\n      mstore\n      dup3\n      dup5\n      add\n      dup6\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37691:37713  ifos[_contractAddress] */\n      dup10\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37691:37695  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37691:37713  ifos[_contractAddress] */\n      dup6\n      mstore\n      dup7\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37691:37859  ifos[_contractAddress] = IFOs({... */\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      mload\n      0x02\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37875:38004  IFOAdd(... */\n      dup3\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37796:37807  _campaignId */\n      dup6\n      swap4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37875:38004  IFOAdd(... */\n      0xc13d7e8dc4239b494c7af2a1fcb43c88a89af1833e5afc01239fa2a0ed1dd74a\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37461:38011  function addIFOAddress(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35518:35554  mapping(address => IFOs) public ifos */\n    tag_19:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2776:2921  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      tag_53\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2377  _msgSender */\n      tag_49\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2363  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2379  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2349:2416  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_54:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2882:2883  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2866:2872  _owner */\n      dup1\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2845:2885  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2866:2872  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2845:2885  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2882:2883  0 */\n      dup4\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2845:2885  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2912:2913  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2895:2914  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2776:2921  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38388:38983  function checkClaimStatuses(... */\n    tag_27:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38520:38533  bool[] memory */\n      0x60\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38545:38568  bool[] memory responses */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38582:38600  _contractAddresses */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38582:38607  _contractAddresses.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38571:38608  new bool[](_contractAddresses.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_58\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_58:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38545:38608  bool[] memory responses = new bool[](_contractAddresses.length) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38669:38682  maxViewLength */\n      sload(0x02)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38640:38658  _contractAddresses */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38640:38665  _contractAddresses.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38640:38682  _contractAddresses.length <= maxViewLength */\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38619:38739  require(... */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4c656e677468206d757374206265203c3d206d6178566965774c656e67746800\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_59:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38755:38764  uint256 i */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38750:38950  for (uint256 i = 0; i < _contractAddresses.length; i++) {... */\n    tag_60:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38774:38792  _contractAddresses */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38774:38799  _contractAddresses.length */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38770:38771  i */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38770:38799  i < _contractAddresses.length */\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38750:38950  for (uint256 i = 0; i < _contractAddresses.length; i++) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38820:38831  bool status */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38850:38904  _checkClaimStatus(_userAddress, _contractAddresses[i]) */\n      tag_63\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38868:38880  _userAddress */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38882:38900  _contractAddresses */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38901:38902  i */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38882:38903  _contractAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_64\n      jumpi\n      invalid\n    tag_64:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38850:38867  _checkClaimStatus */\n      tag_65\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38850:38904  _checkClaimStatus(_userAddress, _contractAddresses[i]) */\n      jump\t// in\n    tag_63:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38820:38904  bool status =... */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38933:38939  status */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38918:38927  responses */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38928:38929  i */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38918:38930  responses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38918:38939  responses[i] = status */\n      swap2\n      iszero\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38918:38930  responses[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38918:38939  responses[i] = status */\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38801:38804  i++ */\n      0x01\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38750:38950  for (uint256 i = 0; i < _contractAddresses.length; i++) {... */\n      jump(tag_60)\n    tag_61:\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38967:38976  responses */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38388:38983  function checkClaimStatuses(... */\n    tag_56:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2153:2230  function owner() public view returns (address) {... */\n    tag_32:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2191:2198  address */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2217:2223  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2153:2230  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38017:38142  function updateMaxViewLength(uint256 _newMaxViewLength) external onlyOwner {... */\n    tag_35:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      tag_69\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2377  _msgSender */\n      tag_49\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2363  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2379  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2349:2416  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_70\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_70:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38102:38115  maxViewLength */\n      0x02\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38102:38135  maxViewLength = _newMaxViewLength */\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38017:38142  function updateMaxViewLength(uint256 _newMaxViewLength) external onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38148:38382  function checkClaimStatus(address _userAddress, address _contractAddress)... */\n    tag_38:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38269:38273  bool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38289:38300  bool status */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38303:38352  _checkClaimStatus(_userAddress, _contractAddress) */\n      tag_73\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38321:38333  _userAddress */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38335:38351  _contractAddress */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38303:38320  _checkClaimStatus */\n      tag_65\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38303:38352  _checkClaimStatus(_userAddress, _contractAddress) */\n      jump\t// in\n    tag_73:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38289:38352  bool status = _checkClaimStatus(_userAddress, _contractAddress) */\n      swap5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38148:38382  function checkClaimStatus(address _userAddress, address _contractAddress)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36103:37455  function getPoints(address _contractAddress) external {... */\n    tag_41:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36167:36188  address senderAddress */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36191:36203  _msgSender() */\n      tag_75\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36191:36201  _msgSender */\n      tag_49\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36191:36203  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36272:36294  ifos[_contractAddress] */\n      dup4\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36308:36309  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36272:36294  ifos[_contractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36272:36276  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36272:36294  ifos[_contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36272:36305  ifos[_contractAddress].campaignId */\n      0x01\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36167:36203  address senderAddress = _msgSender() */\n      swap1\n      swap2\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36272:36309  ifos[_contractAddress].campaignId > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36271:36371  (ifos[_contractAddress].campaignId > 0) &&... */\n      tag_76\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36331:36353  ifos[_contractAddress] */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36369:36370  0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36331:36353  ifos[_contractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36331:36335  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36331:36353  ifos[_contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36331:36366  ifos[_contractAddress].numberPoints */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36331:36370  ifos[_contractAddress].numberPoints > 0 */\n      iszero\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36271:36371  (ifos[_contractAddress].campaignId > 0) &&... */\n    tag_76:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36250:36406  require(... */\n      tag_77\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xba, 0x1b9bdd081d985b1a59)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36477:36498  _users[senderAddress] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36477:36483  _users */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36477:36498  _users[senderAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36477:36516  _users[senderAddress][_contractAddress] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36476:36516  !_users[senderAddress][_contractAddress] */\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36455:36566  require(... */\n      tag_78\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x68617320636c61696d656420666f7220746869732049464f0000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_78:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36647  pancakeProfile */\n      sload(0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36676  pancakeProfile.getUserStatus(senderAddress) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xea0d5dcd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36613:36630  bool isUserActive */\n      0x00\n      swap4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36647  pancakeProfile */\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36661  pancakeProfile.getUserStatus */\n      0xea0d5dcd\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36676  pancakeProfile.getUserStatus(senderAddress) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36647  pancakeProfile */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36633:36676  pancakeProfile.getUserStatus(senderAddress) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36686:36721  require(isUserActive, \"not active\") */\n      tag_83\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x6e6f7420616374697665)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_83:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36768:36782  IFO currentIfo */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36789:36805  _contractAddress */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36768:36806  IFO currentIfo = IFO(_contractAddress) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36817:36835  uint256 amountUser */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36845:36864  bool hasUserClaimed */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36932:36942  currentIfo */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36932:36951  currentIfo.userInfo */\n      and\n      0x1959a002\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36952:36965  senderAddress */\n      dup7\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36932:36966  currentIfo.userInfo(senderAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36977:37019  require(hasUserClaimed, \"has not claimed\") */\n      tag_88\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x1a185cc81b9bdd0818db185a5b5959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37063:37085  ifos[_contractAddress] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37063:37067  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37063:37085  ifos[_contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37063:37102  ifos[_contractAddress].thresholdToClaim */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37050:37102  amountUser > ifos[_contractAddress].thresholdToClaim */\n      dup3\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37029:37137  require(... */\n      tag_89\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x09\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xba, 0x1d1bdbc81cdb585b1b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37201  _users[senderAddress] */\n      dup1\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37186  _users */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37201  _users[senderAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37219  _users[senderAddress][_contractAddress] */\n      dup13\n      dup8\n      and\n      dup6\n      mstore\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37226  _users[senderAddress][_contractAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37222:37226  true */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37226  _users[senderAddress][_contractAddress] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37296  pancakeProfile */\n      dup1\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37356:37360  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37356:37378  ifos[_contractAddress] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37356:37391  ifos[_contractAddress].numberPoints */\n      0x02\n      dup2\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37405:37438  ifos[_contractAddress].campaignId */\n      swap2\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37448  pancakeProfile.increaseUserPoints(... */\n      dup3\n      mload\n      shl(0xe1, 0x0dee0bfb)\n      dup2\n      mstore\n      swap5\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x24\n      dup5\n      add\n      mstore\n      0x44\n      dup4\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      swap3\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37296  pancakeProfile */\n      swap3\n      swap1\n      swap4\n      and\n      swap3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37315  pancakeProfile.increaseUserPoints */\n      0x1bdc17f6\n      swap3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37448  pancakeProfile.increaseUserPoints(... */\n      0x64\n      dup1\n      dup4\n      add\n      swap4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37201  _users[senderAddress] */\n      swap3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37448  pancakeProfile.increaseUserPoints(... */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37180:37201  _users[senderAddress] */\n      dup4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37296  pancakeProfile */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":37282:37448  pancakeProfile.increaseUserPoints(... */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":36103:37455  function getPoints(address _contractAddress) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3070:3344  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      tag_94\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2377  _msgSender */\n      tag_49\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2367:2379  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2363  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2357:2379  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":2349:2416  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3171:3193  newOwner != address(0) */\n      dup2\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3150:3257  require(... */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3293:3299  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3272:3310  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3293:3299  _owner */\n      swap3\n      and\n      swap2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3272:3310  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3320:3326  _owner */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3320:3337  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":3070:3344  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":35483:35511  uint256 public maxViewLength */\n    tag_46:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":714:818  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_49:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":801:811  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":714:818  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":38989:40037  function _checkClaimStatus(address _userAddress, address _contractAddress)... */\n    tag_65:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39110:39114  bool */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39130:39144  IFO currentIfo */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39151:39167  _contractAddress */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39130:39168  IFO currentIfo = IFO(_contractAddress) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39179:39197  uint256 amountUser */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39207:39226  bool hasUserClaimed */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39294:39304  currentIfo */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39294:39313  currentIfo.userInfo */\n      and\n      0x1959a002\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39314:39326  _userAddress */\n      dup8\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39294:39327  currentIfo.userInfo(_userAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39356:39371  !hasUserClaimed */\n      dup1\n      iszero\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39355:39442  (!hasUserClaimed) ||... */\n      tag_104\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39402:39424  ifos[_contractAddress] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39402:39406  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39402:39424  ifos[_contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39402:39441  ifos[_contractAddress].thresholdToClaim */\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39389:39441  amountUser < ifos[_contractAddress].thresholdToClaim */\n      dup3\n      lt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39355:39442  (!hasUserClaimed) ||... */\n    tag_104:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39338:40031  if (... */\n      iszero\n      tag_105\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39553:39558  false */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39546:39558  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_56)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39338:40031  if (... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39579:39599  _users[_userAddress] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39579:39585  _users */\n      0x04\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39579:39599  _users[_userAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39579:39617  _users[_userAddress][_contractAddress] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39575:40031  if (_users[_userAddress][_contractAddress]) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39712:39717  false */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39705:39717  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_56)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39575:40031  if (_users[_userAddress][_contractAddress]) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39818:39840  ifos[_contractAddress] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39818:39822  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39818:39840  ifos[_contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39854:39855  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39818:39851  ifos[_contractAddress].campaignId */\n      swap1\n      dup2\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39818:39855  ifos[_contractAddress].campaignId < 1 */\n      lt\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39817:39913  (ifos[_contractAddress].campaignId < 1) ||... */\n      tag_109\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39873:39895  ifos[_contractAddress] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39873:39877  ifos */\n      0x03\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39873:39895  ifos[_contractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39873:39908  ifos[_contractAddress].numberPoints */\n      0x02\n      add\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39911:39912  1 */\n      0x01\n      gt\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39817:39913  (ifos[_contractAddress].campaignId < 1) ||... */\n    tag_109:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39734:40031  if (... */\n      iszero\n      tag_110\n      jumpi\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39945:39950  false */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39938:39950  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_56)\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":39734:40031  if (... */\n    tag_110:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":40016:40020  true */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":40009:40020  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_56)\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\n    auxdata: 0xa26469706673582212207e26344071e3f3faa790542505557487a5d0a27bf4642ed27f4ce033d126ca2d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610d77380380610d778339818101604052604081101561003357600080fd5b50805160209091015160006100466100b9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b0393909316929092179091556002556100bd565b3390565b610cab806100cc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a789fa3011610066578063a789fa3014610250578063c105fa391461026d578063ee204abb146102af578063f2fde38b146102d5578063f6fed429146102fb5761009e565b80632b253913146100a35780633154782f146100dd578063715018a614610121578063740bd4ac146101295780638da5cb5b1461022c575b600080fd5b6100db600480360360808110156100b957600080fd5b506001600160a01b038135169060208101359060408101359060600135610315565b005b610103600480360360208110156100f357600080fd5b50356001600160a01b03166103f0565b60408051938452602084019290925282820152519081900360600190f35b6100db610411565b6101dc6004803603604081101561013f57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561016a57600080fd5b82018360208201111561017c57600080fd5b8035906020019184602083028401116401000000008311171561019e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506104b3945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610218578181015183820152602001610200565b505050509050019250505060405180910390f35b6102346105b0565b604080516001600160a01b039092168252519081900360200190f35b6100db6004803603602081101561026657600080fd5b50356105bf565b61029b6004803603604081101561028357600080fd5b506001600160a01b038135811691602001351661061c565b604080519115158252519081900360200190f35b6100db600480360360208110156102c557600080fd5b50356001600160a01b0316610631565b6100db600480360360208110156102eb57600080fd5b50356001600160a01b03166109cf565b610303610ac7565b60408051918252519081900360200190f35b61031d610acd565b6000546001600160a01b0390811691161461036d576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b6040805160608101825284815260208082018581528284018581526001600160a01b0389166000818152600385528690209451855591516001850155516002909301929092558251868152908101849052825185937fc13d7e8dc4239b494c7af2a1fcb43c88a89af1833e5afc01239fa2a0ed1dd74a928290030190a350505050565b60036020526000908152604090208054600182015460029092015490919083565b610419610acd565b6000546001600160a01b03908116911614610469576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b606080825167ffffffffffffffff811180156104ce57600080fd5b506040519080825280602002602001820160405280156104f8578160200160208202803683370190505b50905060025483511115610553576040805162461bcd60e51b815260206004820152601f60248201527f4c656e677468206d757374206265203c3d206d6178566965774c656e67746800604482015290519081900360640190fd5b60005b83518110156105a657600061057e8686848151811061057157fe5b6020026020010151610ad1565b90508083838151811061058d57fe5b9115156020928302919091019091015250600101610556565b5090505b92915050565b6000546001600160a01b031690565b6105c7610acd565b6000546001600160a01b03908116911614610617576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b600255565b6000806106298484610ad1565b949350505050565b600061063b610acd565b6001600160a01b0383166000908152600360205260409020600101549091501580159061068257506001600160a01b03821660009081526003602052604090206002015415155b6106bf576040805162461bcd60e51b81526020600482015260096024820152681b9bdd081d985b1a5960ba1b604482015290519081900360640190fd5b6001600160a01b0380821660009081526004602090815260408083209386168352929052205460ff161561073a576040805162461bcd60e51b815260206004820152601860248201527f68617320636c61696d656420666f7220746869732049464f0000000000000000604482015290519081900360640190fd5b6001546040805163ea0d5dcd60e01b81526001600160a01b0384811660048301529151600093929092169163ea0d5dcd91602480820192602092909190829003018186803b15801561078b57600080fd5b505afa15801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b50519050806107f8576040805162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b604482015290519081900360640190fd5b6000839050600080826001600160a01b0316631959a002866040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d604081101561087657600080fd5b5080516020909101519092509050806108c8576040805162461bcd60e51b815260206004820152600f60248201526e1a185cc81b9bdd0818db185a5b5959608a1b604482015290519081900360640190fd5b6001600160a01b0386166000908152600360205260409020548211610920576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cdb585b1b60ba1b604482015290519081900360640190fd5b6001600160a01b0380861660008181526004602081815260408084208c871685528252808420805460ff191660019081179091558054600390935281852060028101549101548251630dee0bfb60e11b8152948501969096526024840152604483019490945292519290931692631bdc17f6926064808301939282900301818387803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b50505050505050505050565b6109d7610acd565b6000546001600160a01b03908116911614610a27576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b6001600160a01b038116610a6c5760405162461bcd60e51b8152600401808060200182810382526026815260200180610c306026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60025481565b3390565b600080829050600080826001600160a01b0316631959a002876040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b158015610b2657600080fd5b505afa158015610b3a573d6000803e3d6000fd5b505050506040513d6040811015610b5057600080fd5b5080516020909101519092509050801580610b8257506001600160a01b03851660009081526003602052604090205482105b15610b9357600093505050506105aa565b6001600160a01b0380871660009081526004602090815260408083209389168352929052205460ff1615610bcd57600093505050506105aa565b6001600160a01b03851660009081526003602052604090206001908101541080610c1257506001600160a01b0385166000908152600360205260409020600201546001115b15610c2357600093505050506105aa565b600193505050506105aa56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212207e26344071e3f3faa790542505557487a5d0a27bf4642ed27f4ce033d126ca2d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD77 CODESIZE SUB DUP1 PUSH2 0xD77 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x0 PUSH2 0x46 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE PUSH2 0xBD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0xCAB DUP1 PUSH2 0xCC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA789FA30 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA789FA30 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xC105FA39 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xEE204ABB EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF6FED429 EQ PUSH2 0x2FB JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x2B253913 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3154782F EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x740BD4AC EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4B3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x631 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x303 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x36D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP6 SWAP4 PUSH32 0xC13D7E8DC4239B494C7AF2A1FCB43C88A89AF1833E5AFC01239FA2A0ED1DD74A SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x419 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x469 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 SLOAD DUP4 MLOAD GT ISZERO PUSH2 0x553 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C656E677468206D757374206265203C3D206D6178566965774C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 PUSH2 0x57E DUP7 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x571 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x58D JUMPI INVALID JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x556 JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x617 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x629 DUP5 DUP5 PUSH2 0xAD1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x682 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1B9BDD081D985B1A59 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x68617320636C61696D656420666F7220746869732049464F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEA0D5DCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0xEA0D5DCD SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x7F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6E6F7420616374697665 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1959A002 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP1 PUSH2 0x8C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A185CC81B9BDD0818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT PUSH2 0x920 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1D1BDBC81CDB585B1B PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP13 DUP8 AND DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 ADD SLOAD DUP3 MLOAD PUSH4 0xDEE0BFB PUSH1 0xE1 SHL DUP2 MSTORE SWAP5 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0x1BDC17F6 SWAP3 PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC30 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1959A002 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xB82 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD LT DUP1 PUSH2 0xC12 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 GT JUMPDEST ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A26469706673582212207E26 CALLVALUE BLOCKHASH PUSH18 0xE3F3FAA790542505557487A5D0A27BF4642E 0xD2 PUSH32 0x4CE033D126CA2D64736F6C634300060C00330000000000000000000000000000 ",
							"sourceMap": "35405:4634:0:-:0;;;35909:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35909:188:0;;;;;;;1952:17;1972:12;:10;:12::i;:::-;1994:6;:18;;-1:-1:-1;;;;;;1994:18:0;-1:-1:-1;;;;;1994:18:0;;;;;;;2027:43;;1994:18;;-1:-1:-1;1994:18:0;2027:43;;1994:6;;2027:43;-1:-1:-1;35994:14:0;:56;;-1:-1:-1;;;;;;35994:56:0;-1:-1:-1;;;;;35994:56:0;;;;;;;;;;;36060:13;:30;35405:4634;;714:104;801:10;714:104;:::o;35405:4634::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a789fa3011610066578063a789fa3014610250578063c105fa391461026d578063ee204abb146102af578063f2fde38b146102d5578063f6fed429146102fb5761009e565b80632b253913146100a35780633154782f146100dd578063715018a614610121578063740bd4ac146101295780638da5cb5b1461022c575b600080fd5b6100db600480360360808110156100b957600080fd5b506001600160a01b038135169060208101359060408101359060600135610315565b005b610103600480360360208110156100f357600080fd5b50356001600160a01b03166103f0565b60408051938452602084019290925282820152519081900360600190f35b6100db610411565b6101dc6004803603604081101561013f57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561016a57600080fd5b82018360208201111561017c57600080fd5b8035906020019184602083028401116401000000008311171561019e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506104b3945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610218578181015183820152602001610200565b505050509050019250505060405180910390f35b6102346105b0565b604080516001600160a01b039092168252519081900360200190f35b6100db6004803603602081101561026657600080fd5b50356105bf565b61029b6004803603604081101561028357600080fd5b506001600160a01b038135811691602001351661061c565b604080519115158252519081900360200190f35b6100db600480360360208110156102c557600080fd5b50356001600160a01b0316610631565b6100db600480360360208110156102eb57600080fd5b50356001600160a01b03166109cf565b610303610ac7565b60408051918252519081900360200190f35b61031d610acd565b6000546001600160a01b0390811691161461036d576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b6040805160608101825284815260208082018581528284018581526001600160a01b0389166000818152600385528690209451855591516001850155516002909301929092558251868152908101849052825185937fc13d7e8dc4239b494c7af2a1fcb43c88a89af1833e5afc01239fa2a0ed1dd74a928290030190a350505050565b60036020526000908152604090208054600182015460029092015490919083565b610419610acd565b6000546001600160a01b03908116911614610469576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b606080825167ffffffffffffffff811180156104ce57600080fd5b506040519080825280602002602001820160405280156104f8578160200160208202803683370190505b50905060025483511115610553576040805162461bcd60e51b815260206004820152601f60248201527f4c656e677468206d757374206265203c3d206d6178566965774c656e67746800604482015290519081900360640190fd5b60005b83518110156105a657600061057e8686848151811061057157fe5b6020026020010151610ad1565b90508083838151811061058d57fe5b9115156020928302919091019091015250600101610556565b5090505b92915050565b6000546001600160a01b031690565b6105c7610acd565b6000546001600160a01b03908116911614610617576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b600255565b6000806106298484610ad1565b949350505050565b600061063b610acd565b6001600160a01b0383166000908152600360205260409020600101549091501580159061068257506001600160a01b03821660009081526003602052604090206002015415155b6106bf576040805162461bcd60e51b81526020600482015260096024820152681b9bdd081d985b1a5960ba1b604482015290519081900360640190fd5b6001600160a01b0380821660009081526004602090815260408083209386168352929052205460ff161561073a576040805162461bcd60e51b815260206004820152601860248201527f68617320636c61696d656420666f7220746869732049464f0000000000000000604482015290519081900360640190fd5b6001546040805163ea0d5dcd60e01b81526001600160a01b0384811660048301529151600093929092169163ea0d5dcd91602480820192602092909190829003018186803b15801561078b57600080fd5b505afa15801561079f573d6000803e3d6000fd5b505050506040513d60208110156107b557600080fd5b50519050806107f8576040805162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b604482015290519081900360640190fd5b6000839050600080826001600160a01b0316631959a002866040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d604081101561087657600080fd5b5080516020909101519092509050806108c8576040805162461bcd60e51b815260206004820152600f60248201526e1a185cc81b9bdd0818db185a5b5959608a1b604482015290519081900360640190fd5b6001600160a01b0386166000908152600360205260409020548211610920576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cdb585b1b60ba1b604482015290519081900360640190fd5b6001600160a01b0380861660008181526004602081815260408084208c871685528252808420805460ff191660019081179091558054600390935281852060028101549101548251630dee0bfb60e11b8152948501969096526024840152604483019490945292519290931692631bdc17f6926064808301939282900301818387803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b50505050505050505050565b6109d7610acd565b6000546001600160a01b03908116911614610a27576040805162461bcd60e51b81526020600482018190526024820152600080516020610c56833981519152604482015290519081900360640190fd5b6001600160a01b038116610a6c5760405162461bcd60e51b8152600401808060200182810382526026815260200180610c306026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60025481565b3390565b600080829050600080826001600160a01b0316631959a002876040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b158015610b2657600080fd5b505afa158015610b3a573d6000803e3d6000fd5b505050506040513d6040811015610b5057600080fd5b5080516020909101519092509050801580610b8257506001600160a01b03851660009081526003602052604090205482105b15610b9357600093505050506105aa565b6001600160a01b0380871660009081526004602090815260408083209389168352929052205460ff1615610bcd57600093505050506105aa565b6001600160a01b03851660009081526003602052604090206001908101541080610c1257506001600160a01b0385166000908152600360205260409020600201546001115b15610c2357600093505050506105aa565b600193505050506105aa56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212207e26344071e3f3faa790542505557487a5d0a27bf4642ed27f4ce033d126ca2d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA789FA30 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA789FA30 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xC105FA39 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xEE204ABB EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF6FED429 EQ PUSH2 0x2FB JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x2B253913 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x3154782F EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x740BD4AC EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4B3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x200 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x631 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x303 PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x36D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP6 SWAP4 PUSH32 0xC13D7E8DC4239B494C7AF2A1FCB43C88A89AF1833E5AFC01239FA2A0ED1DD74A SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x419 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x469 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x2 SLOAD DUP4 MLOAD GT ISZERO PUSH2 0x553 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C656E677468206D757374206265203C3D206D6178566965774C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 PUSH2 0x57E DUP7 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x571 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x58D JUMPI INVALID JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x556 JUMP JUMPDEST POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x617 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x629 DUP5 DUP5 PUSH2 0xAD1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x682 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1B9BDD081D985B1A59 PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x68617320636C61696D656420666F7220746869732049464F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xEA0D5DCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0xEA0D5DCD SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x7F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6E6F7420616374697665 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1959A002 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x876 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP1 PUSH2 0x8C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A185CC81B9BDD0818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT PUSH2 0x920 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x1D1BDBC81CDB585B1B PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP13 DUP8 AND DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 ADD SLOAD DUP3 MLOAD PUSH4 0xDEE0BFB PUSH1 0xE1 SHL DUP2 MSTORE SWAP5 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP4 AND SWAP3 PUSH4 0x1BDC17F6 SWAP3 PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC56 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC30 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1959A002 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xB82 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCD JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD LT DUP1 PUSH2 0xC12 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 GT JUMPDEST ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x5AA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A26469706673582212207E26 CALLVALUE BLOCKHASH PUSH18 0xE3F3FAA790542505557487A5D0A27BF4642E 0xD2 PUSH32 0x4CE033D126CA2D64736F6C634300060C00330000000000000000000000000000 ",
							"sourceMap": "35405:4634:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37461:550;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;37461:550:0;;;;;;;;;;;;;;;;;;:::i;:::-;;35518:36;;;;;;;;;;;;;;;;-1:-1:-1;35518:36:0;-1:-1:-1;;;;;35518:36:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:145;;;:::i;38388:595::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;38388:595:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38388:595:0;;-1:-1:-1;38388:595:0;;-1:-1:-1;;;;;38388:595:0:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:77;;;:::i;:::-;;;;-1:-1:-1;;;;;2153:77:0;;;;;;;;;;;;;;38017:125;;;;;;;;;;;;;;;;-1:-1:-1;38017:125:0;;:::i;38148:234::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;38148:234:0;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;36103:1352;;;;;;;;;;;;;;;;-1:-1:-1;36103:1352:0;-1:-1:-1;;;;;36103:1352:0;;:::i;3070:274::-;;;;;;;;;;;;;;;;-1:-1:-1;3070:274:0;-1:-1:-1;;;;;3070:274:0;;:::i;35483:28::-;;;:::i;:::-;;;;;;;;;;;;;;;;37461:550;2367:12;:10;:12::i;:::-;2357:6;;-1:-1:-1;;;;;2357:6:0;;;:22;;;2349:67;;;;;-1:-1:-1;;;2349:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2349:67:0;;;;;;;;;;;;;;;37716:143:::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;37691:22:0;::::1;-1:-1:-1::0;37691:22:0;;;:4:::1;:22:::0;;;;;:168;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;37875:129;;;;;;;::::1;::::0;;;;;37796:11;;37875:129:::1;::::0;;;;;;::::1;37461:550:::0;;;;:::o;35518:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2776:145::-;2367:12;:10;:12::i;:::-;2357:6;;-1:-1:-1;;;;;2357:6:0;;;:22;;;2349:67;;;;;-1:-1:-1;;;2349:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2349:67:0;;;;;;;;;;;;;;;2882:1:::1;2866:6:::0;;2845:40:::1;::::0;-1:-1:-1;;;;;2866:6:0;;::::1;::::0;2845:40:::1;::::0;2882:1;;2845:40:::1;2912:1;2895:19:::0;;-1:-1:-1;;;;;;2895:19:0::1;::::0;;2776:145::o;38388:595::-;38520:13;38545:23;38582:18;:25;38571:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38571:37:0;;38545:63;;38669:13;;38640:18;:25;:42;;38619:120;;;;;-1:-1:-1;;;38619:120:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;38755:9;38750:200;38774:18;:25;38770:1;:29;38750:200;;;38820:11;38850:54;38868:12;38882:18;38901:1;38882:21;;;;;;;;;;;;;;38850:17;:54::i;:::-;38820:84;;38933:6;38918:9;38928:1;38918:12;;;;;;;;:21;;;:12;;;;;;;;;;;:21;-1:-1:-1;38801:3:0;;38750:200;;;-1:-1:-1;38967:9:0;-1:-1:-1;38388:595:0;;;;;:::o;2153:77::-;2191:7;2217:6;-1:-1:-1;;;;;2217:6:0;2153:77;:::o;38017:125::-;2367:12;:10;:12::i;:::-;2357:6;;-1:-1:-1;;;;;2357:6:0;;;:22;;;2349:67;;;;;-1:-1:-1;;;2349:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2349:67:0;;;;;;;;;;;;;;;38102:13:::1;:33:::0;38017:125::o;38148:234::-;38269:4;38289:11;38303:49;38321:12;38335:16;38303:17;:49::i;:::-;38289:63;38148:234;-1:-1:-1;;;;38148:234:0:o;36103:1352::-;36167:21;36191:12;:10;:12::i;:::-;-1:-1:-1;;;;;36272:22:0;;36308:1;36272:22;;;:4;:22;;;;;:33;;;36167:36;;-1:-1:-1;36272:37:0;;;;36271:100;;-1:-1:-1;;;;;;36331:22:0;;36369:1;36331:22;;;:4;:22;;;;;:35;;;:39;;36271:100;36250:156;;;;;-1:-1:-1;;;36250:156:0;;;;;;;;;;;;-1:-1:-1;;;36250:156:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;36477:21:0;;;;;;;:6;:21;;;;;;;;:39;;;;;;;;;;;;36476:40;36455:111;;;;;-1:-1:-1;;;36455:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;36633:14;;:43;;;-1:-1:-1;;;36633:43:0;;-1:-1:-1;;;;;36633:43:0;;;;;;;;;36613:17;;36633:14;;;;;:28;;:43;;;;;;;;;;;;;;;:14;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36633:43:0;;-1:-1:-1;36633:43:0;36686:35;;;;;-1:-1:-1;;;36686:35:0;;;;;;;;;;;;-1:-1:-1;;;36686:35:0;;;;;;;;;;;;;;;36768:14;36789:16;36768:38;;36817:18;36845:19;36932:10;-1:-1:-1;;;;;36932:19:0;;36952:13;36932:34;;;;;;;;;;;;;-1:-1:-1;;;;;36932:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36932:34:0;;;;;;;;;-1:-1:-1;36932:34:0;-1:-1:-1;36932:34:0;36977:42;;;;;-1:-1:-1;;;36977:42:0;;;;;;;;;;;;-1:-1:-1;;;36977:42:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;37063:22:0;;;;;;:4;:22;;;;;:39;37050:52;;37029:108;;;;;-1:-1:-1;;;37029:108:0;;;;;;;;;;;;-1:-1:-1;;;37029:108:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;37180:21:0;;;;;;;:6;:21;;;;;;;;:39;;;;;;;;;;:46;;-1:-1:-1;;37180:46:0;37222:4;37180:46;;;;;;37282:14;;37356:4;:22;;;;;;:35;;;;37405:33;;;37282:166;;-1:-1:-1;;;37282:166:0;;;;;;;;;;;;;;;;;;;;;;:14;;;;;:33;;:166;;;;;37180:21;37282:166;;;;;37180:21;37282:14;:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36103:1352;;;;;;:::o;3070:274::-;2367:12;:10;:12::i;:::-;2357:6;;-1:-1:-1;;;;;2357:6:0;;;:22;;;2349:67;;;;;-1:-1:-1;;;2349:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2349:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;3171:22:0;::::1;3150:107;;;;-1:-1:-1::0;;;3150:107:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3293:6;::::0;;3272:38:::1;::::0;-1:-1:-1;;;;;3272:38:0;;::::1;::::0;3293:6;::::1;::::0;3272:38:::1;::::0;::::1;3320:6;:17:::0;;-1:-1:-1;;;;;;3320:17:0::1;-1:-1:-1::0;;;;;3320:17:0;;;::::1;::::0;;;::::1;::::0;;3070:274::o;35483:28::-;;;;:::o;714:104::-;801:10;714:104;:::o;38989:1048::-;39110:4;39130:14;39151:16;39130:38;;39179:18;39207:19;39294:10;-1:-1:-1;;;;;39294:19:0;;39314:12;39294:33;;;;;;;;;;;;;-1:-1:-1;;;;;39294:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39294:33:0;;;;;;;;;-1:-1:-1;39294:33:0;-1:-1:-1;39356:15:0;;;39355:87;;-1:-1:-1;;;;;;39402:22:0;;;;;;:4;:22;;;;;:39;39389:52;;39355:87;39338:693;;;39553:5;39546:12;;;;;;;39338:693;-1:-1:-1;;;;;39579:20:0;;;;;;;:6;:20;;;;;;;;:38;;;;;;;;;;;;39575:456;;;39712:5;39705:12;;;;;;;39575:456;-1:-1:-1;;;;;39818:22:0;;;;;;:4;:22;;;;;39854:1;39818:33;;;;:37;;39817:96;;-1:-1:-1;;;;;;39873:22:0;;;;;;:4;:22;;;;;:35;;;39911:1;-1:-1:-1;39817:96:0;39734:297;;;39945:5;39938:12;;;;;;;39734:297;40016:4;40009:11;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "648600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addIFOAddress(address,uint256,uint256,uint256)": "infinite",
								"checkClaimStatus(address,address)": "infinite",
								"checkClaimStatuses(address,address[])": "infinite",
								"getPoints(address)": "infinite",
								"ifos(address)": "2819",
								"maxViewLength()": "1086",
								"owner()": "1126",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateMaxViewLength(uint256)": "infinite"
							},
							"internal": {
								"_checkClaimStatus(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 35909,
									"end": 36097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1952,
									"end": 1969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1972,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1972,
									"end": 1982,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1972,
									"end": 1984,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1972,
									"end": 1984,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1972,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2027,
									"end": 2070,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2027,
									"end": 2070,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2027,
									"end": 2070,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2027,
									"end": 2070,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2000,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2000,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2027,
									"end": 2070,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 35994,
									"end": 36008,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 35994,
									"end": 36050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 36060,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 36060,
									"end": 36090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 714,
									"end": 818,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 714,
									"end": 818,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 801,
									"end": 811,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 714,
									"end": 818,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 714,
									"end": 818,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35405,
									"end": 40039,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e26344071e3f3faa790542505557487a5d0a27bf4642ed27f4ce033d126ca2d64736f6c634300060c0033",
									".code": [
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "A789FA30"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "A789FA30"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "C105FA39"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "EE204ABB"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "F6FED429"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "2B253913"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "3154782F"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "740BD4AC"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35405,
											"end": 40039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37716,
											"end": 37859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37695,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37691,
											"end": 37859,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37796,
											"end": 37807,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37796,
											"end": 37807,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "PUSH",
											"source": 0,
											"value": "C13D7E8DC4239B494C7AF2A1FCB43C88A89AF1833E5AFC01239FA2A0ED1DD74A"
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37875,
											"end": 38004,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37461,
											"end": 38011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35518,
											"end": 35554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2885,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2921,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38520,
											"end": 38533,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38545,
											"end": 38568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38582,
											"end": 38600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38582,
											"end": 38607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38571,
											"end": 38608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38545,
											"end": 38608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38545,
											"end": 38608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38669,
											"end": 38682,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38669,
											"end": 38682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38640,
											"end": 38658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38640,
											"end": 38665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38640,
											"end": 38682,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38640,
											"end": 38682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "4C656E677468206D757374206265203C3D206D6178566965774C656E67746800"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 38619,
											"end": 38739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38755,
											"end": 38764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38770,
											"end": 38771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38770,
											"end": 38799,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38820,
											"end": 38831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38850,
											"end": 38904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 38868,
											"end": 38880,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38900,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38901,
											"end": 38902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38882,
											"end": 38903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38850,
											"end": 38867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38850,
											"end": 38904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38850,
											"end": 38904,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 38850,
											"end": 38904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38820,
											"end": 38904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38820,
											"end": 38904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38933,
											"end": 38939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38928,
											"end": 38929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38918,
											"end": 38939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38801,
											"end": 38804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38801,
											"end": 38804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38750,
											"end": 38950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38967,
											"end": 38976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2230,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38102,
											"end": 38115,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38102,
											"end": 38135,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38017,
											"end": 38142,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38269,
											"end": 38273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38289,
											"end": 38300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38321,
											"end": 38333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38335,
											"end": 38351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38303,
											"end": 38352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38303,
											"end": 38352,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38303,
											"end": 38352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38289,
											"end": 38352,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38148,
											"end": 38382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36167,
											"end": 36188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36191,
											"end": 36203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 36191,
											"end": 36201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 36191,
											"end": 36203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36191,
											"end": 36203,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 36191,
											"end": 36203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36308,
											"end": 36309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36276,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36305,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36272,
											"end": 36305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36167,
											"end": 36203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36167,
											"end": 36203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36272,
											"end": 36309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36309,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36272,
											"end": 36309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36271,
											"end": 36371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 36271,
											"end": 36371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36369,
											"end": 36370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36353,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36366,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36331,
											"end": 36366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36331,
											"end": 36370,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36271,
											"end": 36371,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 36271,
											"end": 36371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDD081D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 36250,
											"end": 36406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 36477,
											"end": 36516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "68617320636C61696D656420666F7220746869732049464F0000000000000000"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36455,
											"end": 36566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA0D5DCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36613,
											"end": 36630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36613,
											"end": 36630,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36661,
											"name": "PUSH",
											"source": 0,
											"value": "EA0D5DCD"
										},
										{
											"begin": 36633,
											"end": 36661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36647,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36633,
											"end": 36676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F7420616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36686,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36768,
											"end": 36782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36789,
											"end": 36805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36768,
											"end": 36806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36768,
											"end": 36806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36817,
											"end": 36835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36845,
											"end": 36864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36932,
											"end": 36951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36951,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 36952,
											"end": 36965,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36932,
											"end": 36966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A185CC81B9BDD0818DB185A5B5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 36977,
											"end": 37019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37067,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37050,
											"end": 37102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37050,
											"end": 37102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1BDBC81CDB585B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 37029,
											"end": 37137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37186,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37222,
											"end": 37226,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37226,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37360,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37356,
											"end": 37378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37378,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37378,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37356,
											"end": 37391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37356,
											"end": 37391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37405,
											"end": 37438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37405,
											"end": 37438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37405,
											"end": 37438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DEE0BFB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37315,
											"name": "PUSH",
											"source": 0,
											"value": "1BDC17F6"
										},
										{
											"begin": 37282,
											"end": 37315,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37296,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37282,
											"end": 37448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36103,
											"end": 37455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2349,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3150,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3310,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3337,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3344,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 714,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 811,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 714,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 818,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38989,
											"end": 40037,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 38989,
											"end": 40037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39110,
											"end": 39114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39130,
											"end": 39144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39130,
											"end": 39168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39130,
											"end": 39168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39179,
											"end": 39197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39207,
											"end": 39226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39294,
											"end": 39313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39313,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 39314,
											"end": 39326,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39294,
											"end": 39327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39356,
											"end": 39371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39356,
											"end": 39371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39356,
											"end": 39371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39355,
											"end": 39442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 39355,
											"end": 39442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39406,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39424,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39402,
											"end": 39441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39389,
											"end": 39441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39389,
											"end": 39441,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39355,
											"end": 39442,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 39355,
											"end": 39442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39338,
											"end": 40031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39338,
											"end": 40031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 39338,
											"end": 40031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39553,
											"end": 39558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 39546,
											"end": 39558,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39338,
											"end": 40031,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 39338,
											"end": 40031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39579,
											"end": 39617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39575,
											"end": 40031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39575,
											"end": 40031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 39575,
											"end": 40031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39712,
											"end": 39717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 39705,
											"end": 39717,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39575,
											"end": 40031,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 39575,
											"end": 40031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39822,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39854,
											"end": 39855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39818,
											"end": 39851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39855,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39818,
											"end": 39855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39817,
											"end": 39913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 39817,
											"end": 39913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39877,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39908,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39873,
											"end": 39908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39873,
											"end": 39908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39911,
											"end": 39912,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39817,
											"end": 39913,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 39817,
											"end": 39913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39734,
											"end": 40031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39734,
											"end": 40031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 39734,
											"end": 40031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39945,
											"end": 39950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 39938,
											"end": 39950,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39734,
											"end": 40031,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 39734,
											"end": 40031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40016,
											"end": 40020,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40009,
											"end": 40020,
											"name": "JUMP",
											"source": 0
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addIFOAddress(address,uint256,uint256,uint256)": "2b253913",
							"checkClaimStatus(address,address)": "c105fa39",
							"checkClaimStatuses(address,address[])": "740bd4ac",
							"getPoints(address)": "ee204abb",
							"ifos(address)": "3154782f",
							"maxViewLength()": "f6fed429",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateMaxViewLength(uint256)": "a789fa30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pancakeProfileAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxViewLength\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thresholdToClaim\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberPoints\",\"type\":\"uint256\"}],\"name\":\"IFOAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdToClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numberPoints\",\"type\":\"uint256\"}],\"name\":\"addIFOAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"checkClaimStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_contractAddresses\",\"type\":\"address[]\"}],\"name\":\"checkClaimStatuses\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ifos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"thresholdToClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxViewLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxViewLength\",\"type\":\"uint256\"}],\"name\":\"updateMaxViewLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It is a contract for users to collect points for IFOs they participated in.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PointCenterIFO.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"PointCenterIFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1637,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
								"label": "pancakeProfile",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IPancakeProfile)1631"
							},
							{
								"astId": 1639,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
								"label": "maxViewLength",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1643,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
								"label": "ifos",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(IFOs)1666_storage)"
							},
							{
								"astId": 1649,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
								"label": "_users",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IPancakeProfile)1631": {
								"encoding": "inplace",
								"label": "contract IPancakeProfile",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(IFOs)1666_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PointCenterIFO.IFOs)",
								"numberOfBytes": "32",
								"value": "t_struct(IFOs)1666_storage"
							},
							"t_struct(IFOs)1666_storage": {
								"encoding": "inplace",
								"label": "struct PointCenterIFO.IFOs",
								"members": [
									{
										"astId": 1661,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
										"label": "thresholdToClaim",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1663,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
										"label": "campaignId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1665,
										"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:PointCenterIFO",
										"label": "numberPoints",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 919,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19487:23242  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":19487:23242  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207808134843dc0f01738e034b4022bf404f21825b650b42276472a1b6d8a9ea1364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207808134843dc0f01738e034b4022bf404f21825b650b42276472a1b6d8a9ea1364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x8134843DC0F01738E034B4022BF404F21825B650B42276472 LOG1 0xB6 0xD8 0xA9 0xEA SGT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "19487:3755:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207808134843dc0f01738e034b4022bf404f21825b650b42276472a1b6d8a9ea1364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x8134843DC0F01738E034B4022BF404F21825B650B42276472 LOG1 0xB6 0xD8 0xA9 0xEA SGT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "19487:3755:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19487,
									"end": 23242,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207808134843dc0f01738e034b4022bf404f21825b650b42276472a1b6d8a9ea1364736f6c634300060c0033",
									".code": [
										{
											"begin": 19487,
											"end": 23242,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19487,
											"end": 23242,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4006:9199  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":4006:9199  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201404e00d55c999c4e66e3d398d3f8617cbefbdac33783415641a26b802516cb564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201404e00d55c999c4e66e3d398d3f8617cbefbdac33783415641a26b802516cb564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ DIV 0xE0 0xD SSTORE 0xC9 SWAP10 0xC4 0xE6 PUSH15 0x3D398D3F8617CBEFBDAC3378341564 BYTE 0x26 0xB8 MUL MLOAD PUSH13 0xB564736F6C634300060C003300 ",
							"sourceMap": "4006:5193:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201404e00d55c999c4e66e3d398d3f8617cbefbdac33783415641a26b802516cb564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ DIV 0xE0 0xD SSTORE 0xC9 SWAP10 0xC4 0xE6 PUSH15 0x3D398D3F8617CBEFBDAC3378341564 BYTE 0x26 0xB8 MUL MLOAD PUSH13 0xB564736F6C634300060C003300 ",
							"sourceMap": "4006:5193:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4006,
									"end": 9199,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201404e00d55c999c4e66e3d398d3f8617cbefbdac33783415641a26b802516cb564736f6c634300060c0033",
									".code": [
										{
											"begin": 4006,
											"end": 9199,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 9199,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol\":{\"keccak256\":\"0x806164583863a7ec9e1b0228bfaded1dc68e0b137bd550ecce2817ea6f739f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b87bb8254187012a85dedd01944a5cef85de76ecb19d6dad2e911b0f1e69191\",\"dweb:/ipfs/QmSHmUqfAVhJJThW6H4tpwxhHYgy3uTff2iKFtF9DdAyXP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/contracts/pointCenterIfo.sol",
					"exportedSymbols": {
						"Address": [
							700
						],
						"Context": [
							22
						],
						"IBEP20": [
							497
						],
						"IFO": [
							1461
						],
						"IPancakeProfile": [
							1631
						],
						"Ownable": [
							129
						],
						"PointCenterIFO": [
							1996
						],
						"ReentrancyGuard": [
							948
						],
						"SafeBEP20": [
							909
						],
						"SafeMath": [
							397
						]
					},
					"id": 1997,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "149:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "784:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "801:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "801:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "794:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:17:0"
									},
									"scope": 22,
									"src": "714:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "889:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "899:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "899:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1039:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1039:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "1032:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "875:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "875:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:14:0"
									},
									"scope": 22,
									"src": "824:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1997,
							"src": "682:374:0"
						},
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1111:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 25,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1668:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 26,
									"nodeType": "InheritanceSpecifier",
									"src": "1668:7:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "1144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 129,
									"src": "1682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 34,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 34,
												"src": "1747:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 34,
												"src": "1786:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1737:79:0"
									},
									"src": "1711:106:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1942:135:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 55,
														"src": "1952:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 38,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1952:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1972:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1952:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 43,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1994:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 44,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "2003:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1994:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1994:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2056:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 48,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2048:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2048:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 52,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2060:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 47,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2027:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2027:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "EmitStatement",
												"src": "2022:48:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1823:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1930:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1942:0:0"
									},
									"scope": 129,
									"src": "1919:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "2200:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "2217:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 61,
												"id": 63,
												"nodeType": "Return",
												"src": "2210:13:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2083:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 65,
												"src": "2191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2190:9:0"
									},
									"scope": 129,
									"src": "2153:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "2339:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "2357:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 70,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "2367:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2367:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2357:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2381:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2349:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2349:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2349:67:0"
											},
											{
												"id": 76,
												"nodeType": "PlaceholderStatement",
												"src": "2426:1:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "2236:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 78,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:2:0"
									},
									"src": "2318:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2830:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 85,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2866:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2882:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2874:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 86,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2874:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2874:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 84,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2845:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "EmitStatement",
												"src": "2840:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "2895:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2912:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 93,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2904:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2895:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2895:19:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2440:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 82,
											"modifierName": {
												"argumentTypes": null,
												"id": 81,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "2820:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2820:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2802:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2830:0:0"
									},
									"scope": 129,
									"src": "2776:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3140:204:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "3171:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3191:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3183:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 110,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3183:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3183:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3171:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3207:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3150:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "3150:107:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 119,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3301:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 118,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "3272:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "EmitStatement",
												"src": "3267:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3320:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 124,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3329:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3320:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "3320:17:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2927:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 106,
											"modifierName": {
												"argumentTypes": null,
												"id": 105,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "3130:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3130:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "3097:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3096:18:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3140:0:0"
									},
									"scope": 129,
									"src": "3070:274:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1997,
							"src": "1639:1707:0"
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3416:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "3442:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 397,
							"linearizedBaseContracts": [
								397
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "4325:109:0",
										"statements": [
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 156,
														"src": "4335:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 143,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "4347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "4351:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4335:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 148,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "4370:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4370:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4378:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4362:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "4362:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "4426:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 155,
												"nodeType": "Return",
												"src": "4419:8:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4029:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "4271:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "4282:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4270:22:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "4316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4315:9:0"
									},
									"scope": 397,
									"src": "4258:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "4772:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 168,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4793:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4796:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 167,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															202
														],
														"referencedDeclaration": 202,
														"src": "4789:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4789:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "4782:50:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "4440:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "4718:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "4729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4717:22:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 174,
												"src": "4763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4762:9:0"
									},
									"scope": 397,
									"src": "4705:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5255:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "5273:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "5278:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 190,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5281:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5265:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5265:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "5265:29:0"
											},
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 201,
														"src": "5304:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 195,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "5316:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 196,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "5320:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5304:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 199,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "5339:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 200,
												"nodeType": "Return",
												"src": "5332:8:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4845:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5152:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5171:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5190:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5142:80:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5245:9:0"
									},
									"scope": 397,
									"src": "5130:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "5661:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "5893:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5898:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5893:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 218,
												"nodeType": "IfStatement",
												"src": "5889:45:0",
												"trueBody": {
													"id": 217,
													"nodeType": "Block",
													"src": "5901:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5922:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 211,
															"id": 216,
															"nodeType": "Return",
															"src": "5915:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "5944:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5944:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "5956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5944:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5983:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5979:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "5988:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5979:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5991:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5971:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "5971:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "6045:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 235,
												"nodeType": "Return",
												"src": "6038:8:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5353:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "5607:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "5618:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5606:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "5652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5651:9:0"
									},
									"scope": 397,
									"src": "5594:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "6582:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 248,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "6603:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "6606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6609:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															254,
															282
														],
														"referencedDeclaration": 282,
														"src": "6599:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6599:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "6592:46:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "6059:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6528:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6539:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6527:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "6573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6572:9:0"
									},
									"scope": 397,
									"src": "6515:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "7252:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "7270:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7274:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 270,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "7277:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7262:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "7262:28:0"
											},
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 281,
														"src": "7300:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 275,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "7312:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "7316:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7300:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 279,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 274,
													"src": "7421:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 265,
												"id": 280,
												"nodeType": "Return",
												"src": "7414:8:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "6651:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "7149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "7168:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "7187:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7139:80:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "7243:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7242:9:0"
									},
									"scope": 397,
									"src": "7127:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "7947:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 293,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7968:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 294,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7971:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7974:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 292,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															299,
															323
														],
														"referencedDeclaration": 323,
														"src": "7964:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7964:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 297,
												"nodeType": "Return",
												"src": "7957:44:0"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "7435:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 299,
												"src": "7893:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 299,
												"src": "7904:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7892:22:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 299,
												"src": "7938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7937:9:0"
									},
									"scope": 397,
									"src": "7880:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "8604:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 312,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8622:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8627:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "8630:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8614:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "8614:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 318,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "8660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 319,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "8664:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 321,
												"nodeType": "Return",
												"src": "8653:12:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "8014:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "8501:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "8520:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "8539:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8539:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8491:80:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "8595:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8594:9:0"
									},
									"scope": 397,
									"src": "8479:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "8747:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 332,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "8757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 333,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "8761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 334,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "8765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 337,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "8773:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8761:13:0",
														"trueExpression": {
															"argumentTypes": null,
															"id": 336,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "8769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8757:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "8757:17:0"
											}
										]
									},
									"documentation": null,
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "8691:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "8702:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8690:22:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 342,
												"src": "8736:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8735:11:0"
									},
									"scope": 397,
									"src": "8678:103:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "8955:242:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 349,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "8969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8973:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "8969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 385,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "9153:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9158:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9153:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 393,
													"nodeType": "IfStatement",
													"src": "9149:42:0",
													"trueBody": {
														"id": 392,
														"nodeType": "Block",
														"src": "9161:30:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 388,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "9175:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9179:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9175:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 391,
																"nodeType": "ExpressionStatement",
																"src": "9175:5:0"
															}
														]
													}
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "8965:226:0",
												"trueBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "8976:167:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 352,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "8990:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 353,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "8994:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8990:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 355,
															"nodeType": "ExpressionStatement",
															"src": "8990:5:0"
														},
														{
															"assignments": [
																357
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 357,
																	"mutability": "mutable",
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 384,
																	"src": "9009:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9009:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 363,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 358,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "9021:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9025:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "9021:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9029:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9021:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9009:21:0"
														},
														{
															"body": {
																"id": 382,
																"nodeType": "Block",
																"src": "9058:75:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 367,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "9076:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 368,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 357,
																				"src": "9080:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9076:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 370,
																		"nodeType": "ExpressionStatement",
																		"src": "9076:5:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 371,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 357,
																				"src": "9099:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 376,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 374,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 372,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 344,
																									"src": "9104:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 373,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 357,
																									"src": "9108:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9104:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 375,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 357,
																								"src": "9112:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9104:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 377,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9103:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9117:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "9103:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9099:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 381,
																		"nodeType": "ExpressionStatement",
																		"src": "9099:19:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "9051:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 365,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "9055:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 383,
															"nodeType": "WhileStatement",
															"src": "9044:89:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "8910:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8909:11:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "8944:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8943:11:0"
									},
									"scope": 397,
									"src": "8896:301:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1997,
							"src": "4006:5193:0"
						},
						{
							"id": 398,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9274:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "9323:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9414:2:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 404,
												"src": "9440:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9439:9:0"
									},
									"scope": 497,
									"src": "9394:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "9455:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9528:2:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 410,
												"src": "9554:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 407,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9554:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9553:7:0"
									},
									"scope": 497,
									"src": "9511:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "9567:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9636:2:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 416,
												"src": "9662:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9661:15:0"
									},
									"scope": 497,
									"src": "9621:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "9683:47:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9748:2:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "9774:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9773:15:0"
									},
									"scope": 497,
									"src": "9735:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "9795:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9869:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "9895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9894:9:0"
									},
									"scope": 497,
									"src": "9852:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "9910:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "10006:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10005:17:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "10046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10045:9:0"
									},
									"scope": 497,
									"src": "9987:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "10061:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "10293:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "10312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10292:35:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "10362:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10362:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10361:6:0"
									},
									"scope": 497,
									"src": "10275:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "10374:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 456,
												"src": "10662:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 456,
												"src": "10678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10661:33:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 456,
												"src": "10742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10741:9:0"
									},
									"scope": 497,
									"src": "10643:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "10757:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "11421:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "11438:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11420:33:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "11472:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11472:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11471:6:0"
									},
									"scope": 497,
									"src": "11404:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "11484:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 478,
												"src": "11816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 478,
												"src": "11840:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 478,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11806:81:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 478,
												"src": "11906:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11906:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11905:6:0"
									},
									"scope": 497,
									"src": "11785:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "11918:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 487,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "12096:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "12118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "12138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12095:57:0"
									},
									"src": "12081:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "12159:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 496,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 496,
												"src": "12336:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 496,
												"src": "12367:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 496,
												"src": "12400:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12326:93:0"
									},
									"src": "12312:108:0"
								}
							],
							"scope": 1997,
							"src": "9300:3122:0"
						},
						{
							"id": 498,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "12492:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 499,
								"nodeType": "StructuredDocumentation",
								"src": "12517:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 700,
							"linearizedBaseContracts": [
								700
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "13243:576:0",
										"statements": [
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 524,
														"src": "13495:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 507,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13495:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "13495:16:0"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 524,
														"src": "13521:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 510,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13555:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13521:100:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13696:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13710:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "13734:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "13722:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13722:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "13710:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 502,
														"isOffset": false,
														"isSlot": false,
														"src": "13734:7:0",
														"valueSize": 1
													},
													{
														"declaration": 508,
														"isOffset": false,
														"isSlot": false,
														"src": "13710:8:0",
														"valueSize": 1
													}
												],
												"id": 514,
												"nodeType": "InlineAssembly",
												"src": "13687:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 515,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "13769:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 516,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "13781:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "13769:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 518,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "13796:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13808:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "13796:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13769:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 522,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13768:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 506,
												"id": 523,
												"nodeType": "Return",
												"src": "13761:51:0"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "12607:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "13197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13196:17:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "13237:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13237:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13236:6:0"
									},
									"scope": 700,
									"src": "13177:642:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "14807:386:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "14846:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$700",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$700",
																				"typeString": "library Address"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14838:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14838:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14838:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14838:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 539,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "14863:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14838:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14883:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14817:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "14817:107:0"
											},
											{
												"assignments": [
													545,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 558,
														"src": "15013:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15013:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 552,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15061:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 546,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "15031:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15031:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "15053:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15031:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15031:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15012:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 554,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "15095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15116:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15074:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "15074:112:0"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "13825:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 559,
												"src": "14755:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14755:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 559,
												"src": "14782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14754:43:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14807:0:0"
									},
									"scope": 700,
									"src": "14736:457:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "16043:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "16073:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "16081:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16087:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 569,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															576,
															596
														],
														"referencedDeclaration": 596,
														"src": "16060:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16060:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 574,
												"nodeType": "Return",
												"src": "16053:67:0"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "15199:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "15956:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "15972:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15972:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15955:35:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "16025:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16025:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16024:14:0"
									},
									"scope": 700,
									"src": "15934:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "16496:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 589,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "16536:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 590,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "16544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16550:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "16553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 588,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "16513:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16513:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 587,
												"id": 594,
												"nodeType": "Return",
												"src": "16506:60:0"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "16133:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "16380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "16404:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16404:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "16431:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16431:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16370:93:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "16482:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16482:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16481:14:0"
									},
									"scope": 700,
									"src": "16349:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "17078:201:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 609,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "17146:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "17170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 611,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "17192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17215:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 608,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															616,
															649
														],
														"referencedDeclaration": 649,
														"src": "17107:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17107:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 607,
												"id": 614,
												"nodeType": "Return",
												"src": "17088:184:0"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "16579:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "16975:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "16999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "17026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16965:80:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "17064:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17064:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17063:14:0"
									},
									"scope": 700,
									"src": "16935:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "17706:206:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 633,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "17745:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$700",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$700",
																				"typeString": "library Address"
																			}
																		],
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17737:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 631,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17737:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17737:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17737:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "17762:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17737:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17781:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17716:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "17716:115:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 642,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "17871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "17879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 644,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "17885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 645,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "17892:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 641,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "17848:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17848:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 629,
												"id": 647,
												"nodeType": "Return",
												"src": "17841:64:0"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "17285:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "17567:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "17591:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "17618:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "17641:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 624,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17557:116:0"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "17692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17691:14:0"
									},
									"scope": 700,
									"src": "17527:385:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "18100:824:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "18129:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "18118:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18118:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18138:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18110:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "18110:60:0"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 698,
														"src": "18241:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 698,
														"src": "18255:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "18323:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 673,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "18294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "18294:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 675,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "18313:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "18294:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18294:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18240:88:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 680,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 670,
													"src": "18342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "18399:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 684,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "18483:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "18483:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18503:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18483:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 694,
																"nodeType": "Block",
																"src": "18855:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 691,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "18880:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 690,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "18873:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18873:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 693,
																		"nodeType": "ExpressionStatement",
																		"src": "18873:20:0"
																	}
																]
															},
															"id": 695,
															"nodeType": "IfStatement",
															"src": "18479:429:0",
															"trueBody": {
																"id": 689,
																"nodeType": "Block",
																"src": "18506:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "18690:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18712:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18741:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18735:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18735:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18716:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18784:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18788:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18780:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18780:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18801:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18773:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18773:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18773:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 672,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18741:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 672,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18788:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 688,
																		"nodeType": "InlineAssembly",
																		"src": "18681:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "18338:580:0",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "18351:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 681,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "18372:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 661,
															"id": 682,
															"nodeType": "Return",
															"src": "18365:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "17959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "17983:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17983:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "18010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "18036:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18036:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17949:119:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "18086:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18086:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18085:14:0"
									},
									"scope": 700,
									"src": "17918:1006:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1997,
							"src": "12585:6341:0"
						},
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19004:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "19029:457:0",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 909,
							"linearizedBaseContracts": [
								909
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 705,
									"libraryName": {
										"contractScope": null,
										"id": 703,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 397,
										"src": "19517:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$397",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19511:27:0",
									"typeName": {
										"id": 704,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19530:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 708,
									"libraryName": {
										"contractScope": null,
										"id": 706,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 700,
										"src": "19549:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$700",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "19543:26:0",
									"typeName": {
										"id": 707,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19561:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "19677:137:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 718,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "19720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "19762:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$497",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "19762:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19762:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 724,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "19787:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "19791:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 719,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "19739:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "19739:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19739:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 717,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "19687:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19687:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "19687:120:0"
											}
										]
									},
									"documentation": null,
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "19606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 709,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "19606:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "19628:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "19648:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19596:71:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19677:0:0"
									},
									"scope": 909,
									"src": "19575:239:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "19948:147:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 742,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "19991:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 745,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 732,
																			"src": "20033:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$497",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 478,
																		"src": "20033:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20033:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 748,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "20062:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 749,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "20068:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 750,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "20072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 743,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "20010:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "20010:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20010:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 741,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "19958:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19958:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "19958:130:0"
											}
										]
									},
									"documentation": null,
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 755,
												"src": "19855:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 731,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "19855:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 755,
												"src": "19877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 755,
												"src": "19899:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 755,
												"src": "19919:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19845:93:0"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19948:0:0"
									},
									"scope": 909,
									"src": "19820:275:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "20461:584:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "20763:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20772:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20763:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 769,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20762:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 774,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "20803:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$909",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$909",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 773,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20795:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 772,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20795:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20795:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 776,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "20810:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 770,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "20779:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$497",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 456,
																				"src": "20779:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20779:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20822:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20779:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20778:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20762:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20838:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20741:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "20741:163:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 786,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "20947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 789,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 758,
																			"src": "20989:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$497",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 466,
																		"src": "20989:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20989:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 792,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "21013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 793,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "21022:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 787,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "20966:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "20966:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20966:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 785,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "20914:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20914:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "20914:124:0"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "20101:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 798,
												"src": "20385:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 757,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "20385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 798,
												"src": "20407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 798,
												"src": "20432:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20375:76:0"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20461:0:0"
									},
									"scope": 909,
									"src": "20355:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "21167:305:0",
										"statements": [
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 833,
														"src": "21177:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "21256:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 813,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "21236:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$909",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$909",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 811,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21228:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21228:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 815,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "21243:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 809,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "21212:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$497",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 456,
																"src": "21212:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21212:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "21212:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21212:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21177:85:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 822,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "21305:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 825,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "21364:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$497",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 466,
																		"src": "21364:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "21364:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 828,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "21404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 829,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "21429:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "21324:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "21324:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21324:131:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 821,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "21272:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21272:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "21272:193:0"
											}
										]
									},
									"documentation": null,
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "21091:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 799,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "21091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "21113:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "21138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21081:76:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21167:0:0"
									},
									"scope": 909,
									"src": "21051:421:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "21594:396:0",
										"statements": [
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 870,
														"src": "21604:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 854,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "21700:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21723:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 849,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "21663:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$909",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$909",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21655:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 847,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21655:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21655:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 851,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "21670:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 845,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "21639:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$497",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 456,
																"src": "21639:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21639:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "21639:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21639:141:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21604:176:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 859,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "21823:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 862,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "21882:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$497",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 466,
																		"src": "21882:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "21882:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 865,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "21922:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 866,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "21947:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 860,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "21842:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "21842:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21842:131:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 858,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "21790:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21790:193:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "21790:193:0"
											}
										]
									},
									"documentation": null,
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "21518:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 835,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "21518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "21540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "21565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21508:76:0"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21594:0:0"
									},
									"scope": 909,
									"src": "21478:512:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "22443:797:0",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 907,
														"src": "22792:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 879,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "22792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 886,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "22875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22897:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 883,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "22838:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$497",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$497",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22830:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 881,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22830:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22830:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 596,
														"src": "22830:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22830:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22792:153:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 890,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "22959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "22959:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22979:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22959:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 906,
												"nodeType": "IfStatement",
												"src": "22955:279:0",
												"trueBody": {
													"id": 905,
													"nodeType": "Block",
													"src": "22982:252:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 897,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 880,
																				"src": "23128:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 899,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "23141:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 898,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "23141:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 900,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "23140:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 895,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "23117:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "23117:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23117:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23165:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 894,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "23092:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23092:131:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 904,
															"nodeType": "ExpressionStatement",
															"src": "23092:131:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "21996:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "22402:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 873,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "22402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 908,
												"src": "22416:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 875,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22401:33:0"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22443:0:0"
									},
									"scope": 909,
									"src": "22373:867:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1997,
							"src": "19487:3755:0"
						},
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23320:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 911,
								"nodeType": "StructuredDocumentation",
								"src": "23345:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 948,
							"linearizedBaseContracts": [
								948
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 914,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 948,
									"src": "24875:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 912,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24875:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24915:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 917,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 948,
									"src": "24922:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 915,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24922:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24958:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 919,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 948,
									"src": "24966:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 918,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24966:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "25019:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 922,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "25029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 923,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "25039:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25029:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "25029:22:0"
											}
										]
									},
									"documentation": null,
									"id": 927,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25007:2:0"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25019:0:0"
									},
									"scope": 948,
									"src": "24996:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "25457:421:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 931,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "25546:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 932,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "25557:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25546:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25567:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "25538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25538:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "25538:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 937,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "25676:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 938,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "25686:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25676:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "25676:18:0"
											},
											{
												"id": 941,
												"nodeType": "PlaceholderStatement",
												"src": "25705:1:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 942,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "25849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 943,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "25859:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25849:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "25849:22:0"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "25064:364:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 947,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25454:2:0"
									},
									"src": "25433:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1997,
							"src": "24096:1784:0"
						},
						{
							"id": 949,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "25916:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 950,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 948,
										"src": "25957:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$948",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "25957:15:0"
								}
							],
							"contractDependencies": [
								948
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1461,
							"linearizedBaseContracts": [
								1461,
								948
							],
							"name": "IFO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 954,
									"libraryName": {
										"contractScope": null,
										"id": 952,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 397,
										"src": "25985:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$397",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25979:27:0",
									"typeName": {
										"id": 953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25998:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 957,
									"libraryName": {
										"contractScope": null,
										"id": 955,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 909,
										"src": "26017:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$909",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "26011:27:0",
									"typeName": {
										"contractScope": null,
										"id": 956,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 497,
										"src": "26031:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$497",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "IFO.UserInfo",
									"id": 962,
									"members": [
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 962,
											"src": "26096:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 958,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26096:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 961,
											"mutability": "mutable",
											"name": "claimed",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 962,
											"src": "26162:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 960,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "26162:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "26070:128:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc6f9468",
									"id": 964,
									"mutability": "mutable",
									"name": "adminAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26225:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "26225:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fcbd285",
									"id": 966,
									"mutability": "mutable",
									"name": "lpToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26283:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$497",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 965,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 497,
										"src": "26283:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$497",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b7813607",
									"id": 968,
									"mutability": "mutable",
									"name": "offeringToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26336:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$497",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 967,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 497,
										"src": "26336:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$497",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 970,
									"mutability": "mutable",
									"name": "startBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26409:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26409:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "083c6323",
									"id": 972,
									"mutability": "mutable",
									"name": "endBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26478:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c0a7669",
									"id": 974,
									"mutability": "mutable",
									"name": "raisingAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26563:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26563:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1af9a95",
									"id": 976,
									"mutability": "mutable",
									"name": "offeringAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26650:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 975,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26650:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 978,
									"mutability": "mutable",
									"name": "totalAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26748:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 977,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26748:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 982,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26805:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
										"typeString": "mapping(address => struct IFO.UserInfo)"
									},
									"typeName": {
										"id": 981,
										"keyType": {
											"id": 979,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26813:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26805:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
											"typeString": "mapping(address => struct IFO.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 980,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 962,
											"src": "26824:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$962_storage_ptr",
												"typeString": "struct IFO.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b810fb43",
									"id": 985,
									"mutability": "mutable",
									"name": "addressList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1461,
									"src": "26876:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 983,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26876:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 984,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "26876:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 991,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 991,
												"src": "26925:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 991,
												"src": "26947:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26924:38:0"
									},
									"src": "26911:52:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 999,
									"name": "Harvest",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 999,
												"src": "26992:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "offeringAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 999,
												"src": "27022:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "excessAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 999,
												"src": "27054:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26982:98:0"
									},
									"src": "26969:112:0"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "27320:284:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1016,
														"name": "lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "27330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$497",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1017,
														"name": "_lpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "27340:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$497",
															"typeString": "contract IBEP20"
														}
													},
													"src": "27330:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "27330:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1020,
														"name": "offeringToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "27358:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$497",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1021,
														"name": "_offeringToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "27374:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$497",
															"typeString": "contract IBEP20"
														}
													},
													"src": "27358:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "27358:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1024,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "27398:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1025,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "27411:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27398:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "27398:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1028,
														"name": "endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "27432:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1029,
														"name": "_endBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "27443:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27432:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "27432:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1032,
														"name": "offeringAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "27462:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1033,
														"name": "_offeringAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "27479:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27462:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "27462:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1036,
														"name": "raisingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "27504:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1037,
														"name": "_raisingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "27520:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27504:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "27504:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1040,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "27544:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27558:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27544:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "27544:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1044,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "27569:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1045,
														"name": "_adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "27584:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27569:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "27569:28:0"
											}
										]
									},
									"documentation": null,
									"id": 1049,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "_lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1000,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "27108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_offeringToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27133:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$497",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1002,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 497,
													"src": "27133:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$497",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27164:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27193:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "_offeringAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27220:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_raisingAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27253:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "_adminAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "27285:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27098:214:0"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27320:0:0"
									},
									"scope": 1461,
									"src": "27087:517:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "27631:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1052,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "27649:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "27649:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1054,
																"name": "adminAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "27663:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "27649:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "61646d696e3a207775743f",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27677:13:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
																"typeString": "literal_string \"admin: wut?\""
															},
															"value": "admin: wut?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab213c35f672435e67628857c3c923a20212362eb6524982747a411911be3aa6",
																"typeString": "literal_string \"admin: wut?\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27641:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "27641:50:0"
											},
											{
												"id": 1059,
												"nodeType": "PlaceholderStatement",
												"src": "27701:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1061,
									"name": "onlyAdmin",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27628:2:0"
									},
									"src": "27610:99:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "27781:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1069,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "27799:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "27799:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1071,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "27814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27799:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27826:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
																"typeString": "literal_string \"no\""
															},
															"value": "no"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
																"typeString": "literal_string \"no\""
															}
														],
														"id": 1068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27791:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "27791:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1076,
														"name": "offeringAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "27841:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1077,
														"name": "_offerAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "27858:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27841:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "27841:29:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "27d1b1a2",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1066,
											"modifierName": {
												"argumentTypes": null,
												"id": 1065,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1061,
												"src": "27771:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "27771:9:0"
										}
									],
									"name": "setOfferingAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "_offerAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "27742:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27741:22:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27781:0:0"
									},
									"scope": 1461,
									"src": "27715:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "27950:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1089,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "27968:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "27968:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1091,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "27983:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27968:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27995:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
																"typeString": "literal_string \"no\""
															},
															"value": "no"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
																"typeString": "literal_string \"no\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27960:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "27960:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1096,
														"name": "raisingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "28010:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1097,
														"name": "_raisingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "28026:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28010:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "28010:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4225c32f",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1086,
											"modifierName": {
												"argumentTypes": null,
												"id": 1085,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1061,
												"src": "27940:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "27940:9:0"
										}
									],
									"name": "setRaisingAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "_raisingAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1101,
												"src": "27909:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27908:24:0"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27950:0:0"
									},
									"scope": 1461,
									"src": "27883:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "28094:537:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1107,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "28125:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "28125:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1109,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "28140:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28125:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1111,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "28154:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "28154:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1113,
																	"name": "endBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "28169:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28154:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "28125:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f742069666f2074696d65",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28191:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a4840e7ccb7213798d4002ea7771daed682b9b9e9fb2db139f67510b481f929",
																"typeString": "literal_string \"not ifo time\""
															},
															"value": "not ifo time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a4840e7ccb7213798d4002ea7771daed682b9b9e9fb2db139f67510b481f929",
																"typeString": "literal_string \"not ifo time\""
															}
														],
														"id": 1106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28104:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "28104:111:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1120,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "28233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28243:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28233:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e656564205f616d6f756e74203e2030",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28246:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0634c571cfff4481f4881511276968b8455379ad59aef2248edc6967df40338b",
																"typeString": "literal_string \"need _amount > 0\""
															},
															"value": "need _amount > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0634c571cfff4481f4881511276968b8455379ad59aef2248edc6967df40338b",
																"typeString": "literal_string \"need _amount > 0\""
															}
														],
														"id": 1119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28225:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "28225:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1131,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "28308:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "28308:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28300:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28300:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28300:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1136,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "28329:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IFO_$1461",
																		"typeString": "contract IFO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IFO_$1461",
																		"typeString": "contract IFO"
																	}
																],
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28321:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28321:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1138,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "28336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1126,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "28275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "28275:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$497_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28275:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "28275:69:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1141,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "28358:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																	"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																}
															},
															"id": 1144,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1142,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "28367:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "28367:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28358:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																"typeString": "struct IFO.UserInfo storage ref"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 959,
														"src": "28358:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28389:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28358:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "28354:100:0",
												"trueBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "28392:62:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1153,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "28431:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "28431:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28423:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28423:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28423:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1148,
																		"name": "addressList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "28406:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "28406:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28406:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "28406:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1160,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "28463:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																	"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																}
															},
															"id": 1163,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1161,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "28472:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "28472:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28463:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																"typeString": "struct IFO.UserInfo storage ref"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 959,
														"src": "28463:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1171,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "28525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1165,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "28493:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																			"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																		}
																	},
																	"id": 1168,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1166,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "28502:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "28502:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28493:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																		"typeString": "struct IFO.UserInfo storage ref"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 959,
																"src": "28493:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 157,
															"src": "28493:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28493:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28463:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "28463:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1175,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "28543:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1178,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "28573:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1176,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "28557:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 157,
															"src": "28557:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28557:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28543:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "28543:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1183,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "28604:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28604:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1185,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "28616:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "28596:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28596:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "EmitStatement",
												"src": "28591:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6b55f25",
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1189,
												"src": "28070:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28069:17:0"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28094:0:0"
									},
									"scope": 1461,
									"src": "28053:578:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "28676:682:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "28694:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "28694:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1197,
																"name": "endBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "28709:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28694:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420686172766573742074696d65",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28719:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7627d3c4136bde061ed3e8a555e6bb3f6eb5bc941bce1a71c57d82fc25e1046",
																"typeString": "literal_string \"not harvest time\""
															},
															"value": "not harvest time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7627d3c4136bde061ed3e8a555e6bb3f6eb5bc941bce1a71c57d82fc25e1046",
																"typeString": "literal_string \"not harvest time\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28686:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "28686:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1203,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "28756:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																			"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																		}
																	},
																	"id": 1206,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1204,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "28765:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "28765:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28756:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																		"typeString": "struct IFO.UserInfo storage ref"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 959,
																"src": "28756:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28786:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28756:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6861766520796f75207061727469636970617465643f",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28789:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ba818e9e4701da4ae411cce38fcc33102294d7def1c9c7916890a969dba8973",
																"typeString": "literal_string \"have you participated?\""
															},
															"value": "have you participated?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ba818e9e4701da4ae411cce38fcc33102294d7def1c9c7916890a969dba8973",
																"typeString": "literal_string \"have you participated?\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28748:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "28748:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "28832:29:0",
															"subExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1214,
																		"name": "userInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "28833:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																			"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																		}
																	},
																	"id": 1217,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1215,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "28842:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "28842:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28833:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																		"typeString": "struct IFO.UserInfo storage ref"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 961,
																"src": "28833:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7468696e6720746f2068617276657374",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28863:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f49a10d65252256b677ca57d7cb62770cd0628c5720abe64e1a14ce1849498db",
																"typeString": "literal_string \"nothing to harvest\""
															},
															"value": "nothing to harvest"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f49a10d65252256b677ca57d7cb62770cd0628c5720abe64e1a14ce1849498db",
																"typeString": "literal_string \"nothing to harvest\""
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28824:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "28824:60:0"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "offeringTokenAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1279,
														"src": "28894:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "28942:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "28942:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1225,
														"name": "getOfferingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "28924:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28924:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28894:59:0"
											},
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "refundingTokenAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1279,
														"src": "28963:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1236,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1233,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "29013:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "29013:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1232,
														"name": "getRefundingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "28994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28994:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28963:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "29069:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "29069:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1240,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29061:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1245,
															"name": "offeringTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "29082:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1237,
															"name": "offeringToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "29034:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "29034:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$497_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29034:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "29034:68:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1248,
														"name": "refundingTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "29116:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29139:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29116:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "29112:118:0",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "29142:88:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1256,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "29185:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "29185:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29177:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1254,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29177:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29177:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1259,
																		"name": "refundingTokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "29198:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1251,
																		"name": "lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "29156:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$497",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "29156:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$497_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29156:63:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1261,
															"nodeType": "ExpressionStatement",
															"src": "29156:63:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1264,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "29239:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																	"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																}
															},
															"id": 1267,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1265,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "29248:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "29248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29239:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																"typeString": "struct IFO.UserInfo storage ref"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 961,
														"src": "29239:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29270:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "29239:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "29239:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "29297:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "29297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1275,
															"name": "offeringTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "29309:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1276,
															"name": "refundingTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "29330:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1272,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "29289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29289:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "29284:67:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4641257d",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1192,
											"modifierName": {
												"argumentTypes": null,
												"id": 1191,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 947,
												"src": "28663:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28663:12:0"
										}
									],
									"name": "harvest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28653:2:0"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28676:0:0"
									},
									"scope": 1461,
									"src": "28637:721:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "29428:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1287,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "29445:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
															}
														},
														"id": 1289,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1288,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "29454:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29445:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$962_storage",
															"typeString": "struct IFO.UserInfo storage ref"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "claimed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 961,
													"src": "29445:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1291,
												"nodeType": "Return",
												"src": "29438:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "64ce9fff",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasHarvest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1293,
												"src": "29384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29383:15:0"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1293,
												"src": "29422:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29422:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29421:6:0"
									},
									"scope": 1461,
									"src": "29364:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "29644:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "316536",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29715:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1308,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "29698:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653132",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29688:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			},
																			"value": "1e12"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000_by_1",
																				"typeString": "int_const 1000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1300,
																					"name": "userInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 982,
																					"src": "29661:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																						"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																					}
																				},
																				"id": 1302,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1301,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1295,
																					"src": "29670:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "29661:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																					"typeString": "struct IFO.UserInfo storage ref"
																				}
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 959,
																			"src": "29661:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 237,
																		"src": "29661:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29661:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 254,
																"src": "29661:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29661:49:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 254,
														"src": "29661:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29661:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1313,
												"nodeType": "Return",
												"src": "29654:65:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b920ade2",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAllocation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1315,
												"src": "29599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29598:15:0"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1315,
												"src": "29635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29634:9:0"
									},
									"scope": 1461,
									"src": "29572:154:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "29852:360:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1322,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "29866:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1323,
														"name": "raisingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "29880:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29866:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "30031:175:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1348,
																		"name": "raisingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "30181:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1345,
																				"name": "offeringAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "30161:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1340,
																						"name": "userInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "30134:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																							"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																						}
																					},
																					"id": 1342,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1341,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1317,
																						"src": "30143:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "30134:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																						"typeString": "struct IFO.UserInfo storage ref"
																					}
																				},
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 959,
																				"src": "30134:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 237,
																			"src": "30134:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30134:42:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 254,
																	"src": "30134:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30134:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1321,
															"id": 1350,
															"nodeType": "Return",
															"src": "30111:84:0"
														}
													]
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "29862:344:0",
												"trueBody": {
													"id": 1339,
													"nodeType": "Block",
													"src": "29895:130:0",
													"statements": [
														{
															"assignments": [
																1326
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1326,
																	"mutability": "mutable",
																	"name": "allocation",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1339,
																	"src": "29909:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1325,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29909:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1330,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1328,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "29948:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1327,
																	"name": "getUserAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "29930:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29930:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29909:45:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "316536",
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30010:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		},
																		"value": "1e6"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000_by_1",
																			"typeString": "int_const 1000000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1333,
																				"name": "allocation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1326,
																				"src": "29994:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1331,
																				"name": "offeringAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "29975:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 237,
																			"src": "29975:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29975:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 254,
																	"src": "29975:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29975:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1321,
															"id": 1338,
															"nodeType": "Return",
															"src": "29968:46:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "87e97bc6",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOfferingAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1354,
												"src": "29807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29806:15:0"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1354,
												"src": "29843:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29842:9:0"
									},
									"scope": 1461,
									"src": "29780:432:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "30346:260:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1361,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "30360:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1362,
														"name": "raisingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "30375:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30360:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "30356:67:0",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "30390:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30411:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1360,
															"id": 1365,
															"nodeType": "Return",
															"src": "30404:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "allocation",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1392,
														"src": "30432:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1373,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1371,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "30471:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1370,
														"name": "getUserAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "30453:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30453:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30432:45:0"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "payAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1392,
														"src": "30487:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1383,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "316536",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30541:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1e6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1378,
																	"name": "allocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "30525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1376,
																	"name": "raisingAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "30507:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "30507:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30507:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 254,
														"src": "30507:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30507:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30487:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1389,
															"name": "payAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "30589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1384,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "30562:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$962_storage_$",
																		"typeString": "mapping(address => struct IFO.UserInfo storage ref)"
																	}
																},
																"id": 1386,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1385,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "30571:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30562:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$962_storage",
																	"typeString": "struct IFO.UserInfo storage ref"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 959,
															"src": "30562:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 174,
														"src": "30562:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30562:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1391,
												"nodeType": "Return",
												"src": "30555:44:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2f5105f8",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRefundingAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1393,
												"src": "30301:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30300:15:0"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1393,
												"src": "30337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30336:9:0"
									},
									"scope": 1461,
									"src": "30273:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "30676:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1398,
														"name": "addressList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "30693:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "30693:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1400,
												"nodeType": "Return",
												"src": "30686:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fc00358e",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressListLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30641:2:0"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1402,
												"src": "30667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30666:9:0"
									},
									"scope": 1461,
									"src": "30612:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "30825:387:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1412,
																"name": "_lpAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "30856:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1417,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "30894:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IFO_$1461",
																					"typeString": "contract IFO"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IFO_$1461",
																					"typeString": "contract IFO"
																				}
																			],
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "30886:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "30886:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30886:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1413,
																		"name": "lpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "30868:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$497",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 436,
																	"src": "30868:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30868:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30856:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f75676820746f6b656e2030",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30914:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0b7543b33aff914540a5d8abd6b765210e7c92168719bb826a7851cc814cab4",
																"typeString": "literal_string \"not enough token 0\""
															},
															"value": "not enough token 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0b7543b33aff914540a5d8abd6b765210e7c92168719bb826a7851cc814cab4",
																"typeString": "literal_string \"not enough token 0\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30835:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "30835:109:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1425,
																"name": "_offerAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "30975:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1430,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "31022:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IFO_$1461",
																					"typeString": "contract IFO"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IFO_$1461",
																					"typeString": "contract IFO"
																				}
																			],
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31014:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1428,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "31014:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31014:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1426,
																		"name": "offeringToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "30990:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$497",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 436,
																	"src": "30990:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30990:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30975:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f75676820746f6b656e2031",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31042:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_128811cb79e122aa6f361b68093ce850f9e9335e55262fc3230db5a295688524",
																"typeString": "literal_string \"not enough token 1\""
															},
															"value": "not enough token 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_128811cb79e122aa6f361b68093ce850f9e9335e55262fc3230db5a295688524",
																"typeString": "literal_string \"not enough token 1\""
															}
														],
														"id": 1424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30954:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "30954:118:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1442,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "31111:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "31111:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31103:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31103:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31103:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1445,
															"name": "_lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "31124:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1437,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "31082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "31082:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$497_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31082:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "31082:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1453,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "31179:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "31179:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31171:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1451,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31171:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1456,
															"name": "_offerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "31192:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1448,
															"name": "offeringToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "31144:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$497",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "31144:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$497_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$497_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31144:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "31144:61:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9f1b5248",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1409,
											"modifierName": {
												"argumentTypes": null,
												"id": 1408,
												"name": "onlyAdmin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1061,
												"src": "30811:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30811:9:0"
										}
									],
									"name": "finalWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_lpAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1460,
												"src": "30747:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "_offerAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1460,
												"src": "30766:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30746:41:0"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30825:0:0"
									},
									"scope": 1461,
									"src": "30724:488:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1997,
							"src": "25941:5273:0"
						},
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31267:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "31292:31:0",
								"text": "@title IPancakeProfile."
							},
							"fullyImplemented": false,
							"id": 1631,
							"linearizedBaseContracts": [
								1631
							],
							"name": "IPancakeProfile",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fd825f58",
									"id": 1472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createProfile",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "_teamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1472,
												"src": "31388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1472,
												"src": "31413:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1472,
												"src": "31442:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31378:86:0"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31473:0:0"
									},
									"scope": 1631,
									"src": "31356:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "31480:109:0",
										"text": " @dev To pause user profile. It releases the NFT.\n Callable only by registered users."
									},
									"functionSelector": "c1694a2f",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pauseProfile",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31615:2:0"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31626:0:0"
									},
									"scope": 1631,
									"src": "31594:33:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "31633:89:0",
										"text": " @dev To update user profile.\n Callable only by registered users."
									},
									"functionSelector": "5c7c842a",
									"id": 1480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfile",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31749:2:0"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31760:0:0"
									},
									"scope": 1631,
									"src": "31727:34:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "31767:93:0",
										"text": " @dev To reactivate user profile.\n Callable only by registered users."
									},
									"functionSelector": "a40601ee",
									"id": 1488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reactivateProfile",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1488,
												"src": "31892:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1488,
												"src": "31913:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31891:39:0"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31939:0:0"
									},
									"scope": 1631,
									"src": "31865:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "31946:105:0",
										"text": " @dev To increase the number of points for a user.\n Callable only by point admins"
									},
									"functionSelector": "1bdc17f6",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseUserPoints",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "32093:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "32123:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_campaignId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1498,
												"src": "32154:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32083:96:0"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32188:0:0"
									},
									"scope": 1631,
									"src": "32056:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "32195:113:0",
										"text": " @dev To increase the number of points for a set of users.\n Callable only by point admins"
									},
									"functionSelector": "e2fa2ff3",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseUserPointsMultiple",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1509,
												"src": "32358:33:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1500,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "32358:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1501,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "32358:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1509,
												"src": "32401:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "_campaignId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1509,
												"src": "32432:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32348:109:0"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32466:0:0"
									},
									"scope": 1631,
									"src": "32313:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "32473:105:0",
										"text": " @dev To increase the number of points for a team.\n Callable only by point admins"
									},
									"functionSelector": "1e47a476",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseTeamPoints",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_teamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1519,
												"src": "32621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1519,
												"src": "32646:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "_campaignId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1519,
												"src": "32677:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32611:91:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32711:0:0"
									},
									"scope": 1631,
									"src": "32584:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "32718:103:0",
										"text": " @dev To remove the number of points for a user.\n Callable only by point admins"
									},
									"functionSelector": "da83fe4a",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeUserPoints",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1527,
												"src": "32852:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1527,
												"src": "32874:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32851:45:0"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32913:0:0"
									},
									"scope": 1631,
									"src": "32826:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "32920:76:0",
										"text": " @dev To remove a set number of points for a set of users."
									},
									"functionSelector": "a56bd1de",
									"id": 1536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeUserPointsMultiple",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1536,
												"src": "33044:33:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1529,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "33044:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1530,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "33044:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1536,
												"src": "33087:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33034:80:0"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33123:0:0"
									},
									"scope": 1631,
									"src": "33001:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "33130:103:0",
										"text": " @dev To remove the number of points for a team.\n Callable only by point admins"
									},
									"functionSelector": "d1d0954c",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTeamPoints",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "_teamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "33265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "33282:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33264:40:0"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33313:0:0"
									},
									"scope": 1631,
									"src": "33239:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "33320:123:0",
										"text": " @dev To add a NFT contract address for users to set their profile.\n Callable only by owner admins."
									},
									"functionSelector": "5da3c240",
									"id": 1550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addNftAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1550,
												"src": "33471:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33470:21:0"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33500:0:0"
									},
									"scope": 1631,
									"src": "33448:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "33507:78:0",
										"text": " @dev Add a new teamId\n Callable only by owner admins."
									},
									"functionSelector": "0284a8d0",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTeam",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33606:2:0"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33617:0:0"
									},
									"scope": 1631,
									"src": "33590:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "33624:88:0",
										"text": " @dev Function to change team.\n Callable only by special admins."
									},
									"functionSelector": "e5020a62",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTeam",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "33737:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "_newTeamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "33759:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33736:42:0"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33787:0:0"
									},
									"scope": 1631,
									"src": "33717:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "33794:87:0",
										"text": " @dev Claim CAKE to burn later.\n Callable only by owner admins."
									},
									"functionSelector": "f667526a",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "33904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33903:17:0"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33929:0:0"
									},
									"scope": 1631,
									"src": "33886:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "33936:89:0",
										"text": " @dev Make a team joinable again.\n Callable only by owner admins."
									},
									"functionSelector": "ebc4ffc7",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeTeamJoinable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_teamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "34056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34055:17:0"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34081:0:0"
									},
									"scope": 1631,
									"src": "34030:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "34088:87:0",
										"text": " @dev Make a team not joinable.\n Callable only by owner admins."
									},
									"functionSelector": "218188d7",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "makeTeamNotJoinable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "_teamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1580,
												"src": "34209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34208:17:0"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34234:0:0"
									},
									"scope": 1631,
									"src": "34180:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "34241:75:0",
										"text": " @dev Rename a team\n Callable only by owner admins."
									},
									"functionSelector": "a31567d3",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renameTeam",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34340:2:0"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34351:0:0"
									},
									"scope": 1631,
									"src": "34321:31:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "34358:99:0",
										"text": " @dev Update the number of CAKE to register\n Callable only by owner admins."
									},
									"functionSelector": "61cc1e8a",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateNumberCake",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34487:2:0"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34498:0:0"
									},
									"scope": 1631,
									"src": "34462:37:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "34505:68:0",
										"text": " @dev Check the user's profile for a given address"
									},
									"functionSelector": "987ee156",
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserProfile",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34602:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34601:22:0"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34705:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34726:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34768:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "34789:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34670:133:0"
									},
									"scope": 1631,
									"src": "34578:226:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "34810:67:0",
										"text": " @dev Check the user's status for a given address"
									},
									"functionSelector": "ea0d5dcd",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStatus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "34905:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34904:22:0"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "34950:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34949:6:0"
									},
									"scope": 1631,
									"src": "34882:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "34962:46:0",
										"text": " @dev Check a team's profile"
									},
									"functionSelector": "aee2f47f",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamProfile",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_teamId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "35037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35036:17:0"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "35114:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35114:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "35141:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35141:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "35168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "35189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1630,
												"src": "35210:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35210:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35100:124:0"
									},
									"scope": 1631,
									"src": "35013:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1997,
							"src": "31324:3903:0"
						},
						{
							"id": 1632,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "35268:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1634,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 129,
										"src": "35432:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$129",
											"typeString": "contract Ownable"
										}
									},
									"id": 1635,
									"nodeType": "InheritanceSpecifier",
									"src": "35432:7:0"
								}
							],
							"contractDependencies": [
								22,
								129
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1633,
								"nodeType": "StructuredDocumentation",
								"src": "35294:110:0",
								"text": "@title PointCenterIFO.\n@dev It is a contract for users to collect points\nfor IFOs they participated in."
							},
							"fullyImplemented": true,
							"id": 1996,
							"linearizedBaseContracts": [
								1996,
								129,
								22
							],
							"name": "PointCenterIFO",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1637,
									"mutability": "mutable",
									"name": "pancakeProfile",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1996,
									"src": "35446:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
										"typeString": "contract IPancakeProfile"
									},
									"typeName": {
										"contractScope": null,
										"id": 1636,
										"name": "IPancakeProfile",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1631,
										"src": "35446:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
											"typeString": "contract IPancakeProfile"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "f6fed429",
									"id": 1639,
									"mutability": "mutable",
									"name": "maxViewLength",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1996,
									"src": "35483:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1638,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "35483:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3154782f",
									"id": 1643,
									"mutability": "mutable",
									"name": "ifos",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1996,
									"src": "35518:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
										"typeString": "mapping(address => struct PointCenterIFO.IFOs)"
									},
									"typeName": {
										"id": 1642,
										"keyType": {
											"id": 1640,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35526:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "35518:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
											"typeString": "mapping(address => struct PointCenterIFO.IFOs)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1641,
											"name": "IFOs",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1666,
											"src": "35537:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_IFOs_$1666_storage_ptr",
												"typeString": "struct PointCenterIFO.IFOs"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1649,
									"mutability": "mutable",
									"name": "_users",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1996,
									"src": "35560:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1648,
										"keyType": {
											"id": 1644,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35568:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "35560:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1647,
											"keyType": {
												"id": 1645,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "35587:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "35579:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1646,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "35598:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1659,
									"name": "IFOAdd",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "35648:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": false,
												"mutability": "mutable",
												"name": "thresholdToClaim",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "35689:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"indexed": true,
												"mutability": "mutable",
												"name": "campaignId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "35723:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"indexed": false,
												"mutability": "mutable",
												"name": "numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1659,
												"src": "35759:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35638:147:0"
									},
									"src": "35626:160:0"
								},
								{
									"canonicalName": "PointCenterIFO.IFOs",
									"id": 1666,
									"members": [
										{
											"constant": false,
											"id": 1661,
											"mutability": "mutable",
											"name": "thresholdToClaim",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1666,
											"src": "35814:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1660,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "35814:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1663,
											"mutability": "mutable",
											"name": "campaignId",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1666,
											"src": "35848:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1662,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "35848:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1665,
											"mutability": "mutable",
											"name": "numberPoints",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1666,
											"src": "35876:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1664,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "35876:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "IFOs",
									"nodeType": "StructDefinition",
									"scope": 1996,
									"src": "35792:111:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "35984:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1673,
														"name": "pancakeProfile",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "35994:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
															"typeString": "contract IPancakeProfile"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1675,
																"name": "_pancakeProfileAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "36027:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1674,
															"name": "IPancakeProfile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "36011:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPancakeProfile_$1631_$",
																"typeString": "type(contract IPancakeProfile)"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36011:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
															"typeString": "contract IPancakeProfile"
														}
													},
													"src": "35994:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
														"typeString": "contract IPancakeProfile"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "35994:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1679,
														"name": "maxViewLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "36060:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1680,
														"name": "_maxViewLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "36076:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36060:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "36060:30:0"
											}
										]
									},
									"documentation": null,
									"id": 1684,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_pancakeProfileAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1684,
												"src": "35921:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "_maxViewLength",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1684,
												"src": "35953:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35920:56:0"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35984:0:0"
									},
									"scope": 1996,
									"src": "35909:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "36157:1298:0",
										"statements": [
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "senderAddress",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1793,
														"src": "36167:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36167:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1691,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "36191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36191:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36167:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1695,
																					"name": "ifos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1643,
																					"src": "36272:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																						"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																					}
																				},
																				"id": 1697,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1696,
																					"name": "_contractAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "36277:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36272:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																					"typeString": "struct PointCenterIFO.IFOs storage ref"
																				}
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "campaignId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1663,
																			"src": "36272:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36308:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36272:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1701,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36271:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1702,
																					"name": "ifos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1643,
																					"src": "36331:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																						"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																					}
																				},
																				"id": 1704,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1703,
																					"name": "_contractAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "36336:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36331:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																					"typeString": "struct PointCenterIFO.IFOs storage ref"
																				}
																			},
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "numberPoints",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1665,
																			"src": "36331:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36369:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36331:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "36330:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "36271:100:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f742076616c6964",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36385:11:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c06c9ed76f6f2394d0dbe69a89dd228ae6ba2cc86efaa2051ea92ed069a800a",
																"typeString": "literal_string \"not valid\""
															},
															"value": "not valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c06c9ed76f6f2394d0dbe69a89dd228ae6ba2cc86efaa2051ea92ed069a800a",
																"typeString": "literal_string \"not valid\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36250:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36250:156:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "36250:156:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "36476:40:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1714,
																		"name": "_users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "36477:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 1716,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1715,
																		"name": "senderAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "36484:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "36477:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1718,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1717,
																	"name": "_contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "36499:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36477:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "68617320636c61696d656420666f7220746869732049464f",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36530:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed1dc04ac8cf2981f8a60865eb896efce83a7e6cf7c773bd25e37cf3c51f60cb",
																"typeString": "literal_string \"has claimed for this IFO\""
															},
															"value": "has claimed for this IFO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed1dc04ac8cf2981f8a60865eb896efce83a7e6cf7c773bd25e37cf3c51f60cb",
																"typeString": "literal_string \"has claimed for this IFO\""
															}
														],
														"id": 1713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36455:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "36455:111:0"
											},
											{
												"assignments": [
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "isUserActive",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1793,
														"src": "36613:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1723,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "36613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1727,
															"name": "senderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "36662:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1725,
															"name": "pancakeProfile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "36633:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
																"typeString": "contract IPancakeProfile"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getUserStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1614,
														"src": "36633:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36633:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36613:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1731,
															"name": "isUserActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "36694:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420616374697665",
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36708:12:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
																"typeString": "literal_string \"not active\""
															},
															"value": "not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
																"typeString": "literal_string \"not active\""
															}
														],
														"id": 1730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36686:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "36686:35:0"
											},
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "currentIfo",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1793,
														"src": "36768:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFO_$1461",
															"typeString": "contract IFO"
														},
														"typeName": {
															"contractScope": null,
															"id": 1735,
															"name": "IFO",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1461,
															"src": "36768:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFO_$1461",
																"typeString": "contract IFO"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1740,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1738,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "36789:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1737,
														"name": "IFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "36785:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFO_$1461_$",
															"typeString": "type(contract IFO)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36785:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFO_$1461",
														"typeString": "contract IFO"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36768:38:0"
											},
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "amountUser",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1793,
														"src": "36817:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "36817:18:0"
											},
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "hasUserClaimed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1793,
														"src": "36845:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1744,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "36845:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1746,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "36845:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 1747,
																"name": "amountUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "36902:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1748,
																"name": "hasUserClaimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "36914:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1749,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "36901:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1752,
																"name": "senderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "36952:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1750,
																"name": "currentIfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "36932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFO_$1461",
																	"typeString": "contract IFO"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "userInfo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 982,
															"src": "36932:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_bool_$",
																"typeString": "function (address) view external returns (uint256,bool)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36932:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "36901:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "36901:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1757,
															"name": "hasUserClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "36985:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "686173206e6f7420636c61696d6564",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37001:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdbdd72bcb0eb8ae8935d12a469e199f8b8a7689ac6fcc9ac538b1ad9f2aa2d3",
																"typeString": "literal_string \"has not claimed\""
															},
															"value": "has not claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdbdd72bcb0eb8ae8935d12a469e199f8b8a7689ac6fcc9ac538b1ad9f2aa2d3",
																"typeString": "literal_string \"has not claimed\""
															}
														],
														"id": 1756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36977:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "36977:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1762,
																"name": "amountUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "37050:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1763,
																		"name": "ifos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "37063:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																			"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																		}
																	},
																	"id": 1765,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1764,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "37068:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "37063:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																		"typeString": "struct PointCenterIFO.IFOs storage ref"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "thresholdToClaim",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1661,
																"src": "37063:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37050:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "746f6f20736d616c6c",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37116:11:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c1e63f1ec6b7efe3b4a5a169303257e5be7d2052b3cca7eb4edd5a089cc12ce",
																"typeString": "literal_string \"too small\""
															},
															"value": "too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c1e63f1ec6b7efe3b4a5a169303257e5be7d2052b3cca7eb4edd5a089cc12ce",
																"typeString": "literal_string \"too small\""
															}
														],
														"id": 1761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "37029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37029:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "37029:108:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1771,
																"name": "_users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "37180:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1774,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1772,
																"name": "senderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "37187:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "37180:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1775,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1773,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "37202:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37180:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37222:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "37180:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "37180:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1782,
															"name": "senderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "37329:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1783,
																	"name": "ifos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "37356:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																		"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																	}
																},
																"id": 1785,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1784,
																	"name": "_contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "37361:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "37356:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																	"typeString": "struct PointCenterIFO.IFOs storage ref"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberPoints",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1665,
															"src": "37356:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1787,
																	"name": "ifos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "37405:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																		"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																	}
																},
																"id": 1789,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1788,
																	"name": "_contractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "37410:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "37405:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																	"typeString": "struct PointCenterIFO.IFOs storage ref"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "campaignId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1663,
															"src": "37405:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1779,
															"name": "pancakeProfile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "37282:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeProfile_$1631",
																"typeString": "contract IPancakeProfile"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increaseUserPoints",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1498,
														"src": "37282:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256) external"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37282:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "37282:166:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ee204abb",
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoints",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1794,
												"src": "36122:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36121:26:0"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36157:0:0"
									},
									"scope": 1996,
									"src": "36103:1352:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "37638:373:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1807,
															"name": "ifos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "37691:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
															}
														},
														"id": 1809,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1808,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "37696:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37691:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IFOs_$1666_storage",
															"typeString": "struct PointCenterIFO.IFOs storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1811,
																"name": "_thresholdToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "37753:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1812,
																"name": "_campaignId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1800,
																"src": "37796:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1813,
																"name": "_numberPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "37835:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1810,
															"name": "IFOs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "37716:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_IFOs_$1666_storage_ptr_$",
																"typeString": "type(struct PointCenterIFO.IFOs storage pointer)"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"thresholdToClaim",
															"campaignId",
															"numberPoints"
														],
														"nodeType": "FunctionCall",
														"src": "37716:143:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_IFOs_$1666_memory_ptr",
															"typeString": "struct PointCenterIFO.IFOs memory"
														}
													},
													"src": "37691:168:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IFOs_$1666_storage",
														"typeString": "struct PointCenterIFO.IFOs storage ref"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "37691:168:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1818,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "37895:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1819,
															"name": "_thresholdToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "37925:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1820,
															"name": "_campaignId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "37956:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1821,
															"name": "_numberPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "37981:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1817,
														"name": "IFOAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "37875:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37875:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1823,
												"nodeType": "EmitStatement",
												"src": "37870:134:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2b253913",
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1805,
											"modifierName": {
												"argumentTypes": null,
												"id": 1804,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "37628:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "37628:9:0"
										}
									],
									"name": "addIFOAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1825,
												"src": "37493:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "_thresholdToClaim",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1825,
												"src": "37527:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_campaignId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1825,
												"src": "37562:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "_numberPoints",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1825,
												"src": "37591:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37483:135:0"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37638:0:0"
									},
									"scope": 1996,
									"src": "37461:550:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "38092:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1832,
														"name": "maxViewLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "38102:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1833,
														"name": "_newMaxViewLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "38118:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38102:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "38102:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a789fa30",
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1830,
											"modifierName": {
												"argumentTypes": null,
												"id": 1829,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "38082:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "38082:9:0"
										}
									],
									"name": "updateMaxViewLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "_newMaxViewLength",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1837,
												"src": "38046:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38045:27:0"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38092:0:0"
									},
									"scope": 1996,
									"src": "38017:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "38279:103:0",
										"statements": [
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "status",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1855,
														"src": "38289:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1846,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "38289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1852,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1849,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "38321:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1850,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "38335:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1848,
														"name": "_checkClaimStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "38303:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
															"typeString": "function (address,address) view returns (bool)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38303:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38289:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1853,
													"name": "status",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1847,
													"src": "38369:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1854,
												"nodeType": "Return",
												"src": "38362:13:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "c105fa39",
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkClaimStatus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1856,
												"src": "38174:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1856,
												"src": "38196:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38173:48:0"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1856,
												"src": "38269:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38268:6:0"
									},
									"scope": 1996,
									"src": "38148:234:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "38535:448:0",
										"statements": [
											{
												"assignments": [
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1871,
														"mutability": "mutable",
														"name": "responses",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1917,
														"src": "38545:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1869,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "38545:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1870,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "38545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1878,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1875,
																"name": "_contractAddresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "38582:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "38582:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "38571:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bool[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1872,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "38575:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1873,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "38575:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38571:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38545:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1880,
																	"name": "_contractAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "38640:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "38640:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1882,
																"name": "maxViewLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "38669:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38640:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4c656e677468206d757374206265203c3d206d6178566965774c656e677468",
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38696:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f030a9909731aa7e447e41595b3453c5d851736ab23d3b7992584a358a287f3",
																"typeString": "literal_string \"Length must be <= maxViewLength\""
															},
															"value": "Length must be <= maxViewLength"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f030a9909731aa7e447e41595b3453c5d851736ab23d3b7992584a358a287f3",
																"typeString": "literal_string \"Length must be <= maxViewLength\""
															}
														],
														"id": 1879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38619:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "38619:120:0"
											},
											{
												"body": {
													"id": 1913,
													"nodeType": "Block",
													"src": "38806:144:0",
													"statements": [
														{
															"assignments": [
																1899
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1899,
																	"mutability": "mutable",
																	"name": "status",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1913,
																	"src": "38820:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1898,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "38820:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1906,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1901,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "38868:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1902,
																			"name": "_contractAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1861,
																			"src": "38882:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1904,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1903,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1888,
																			"src": "38901:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38882:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1900,
																	"name": "_checkClaimStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "38850:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38850:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "38820:84:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1907,
																		"name": "responses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "38918:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																			"typeString": "bool[] memory"
																		}
																	},
																	"id": 1909,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1908,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "38928:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1910,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "38933:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "38918:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1912,
															"nodeType": "ExpressionStatement",
															"src": "38918:21:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1891,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "38770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1892,
															"name": "_contractAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "38774:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "38774:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38770:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1914,
												"initializationExpression": {
													"assignments": [
														1888
													],
													"declarations": [
														{
															"constant": false,
															"id": 1888,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1914,
															"src": "38755:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1887,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38755:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1890,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38767:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "38755:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "38801:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1895,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "38801:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1897,
													"nodeType": "ExpressionStatement",
													"src": "38801:3:0"
												},
												"nodeType": "ForStatement",
												"src": "38750:200:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1915,
													"name": "responses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1871,
													"src": "38967:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1916,
												"nodeType": "Return",
												"src": "38960:16:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "740bd4ac",
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkClaimStatuses",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1918,
												"src": "38425:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "_contractAddresses",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1918,
												"src": "38455:35:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1859,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "38455:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1860,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "38455:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38415:81:0"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1918,
												"src": "38520:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1863,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "38520:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1864,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "38520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38519:15:0"
									},
									"scope": 1996,
									"src": "38388:595:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "39120:917:0",
										"statements": [
											{
												"assignments": [
													1928
												],
												"declarations": [
													{
														"constant": false,
														"id": 1928,
														"mutability": "mutable",
														"name": "currentIfo",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1994,
														"src": "39130:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFO_$1461",
															"typeString": "contract IFO"
														},
														"typeName": {
															"contractScope": null,
															"id": 1927,
															"name": "IFO",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1461,
															"src": "39130:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFO_$1461",
																"typeString": "contract IFO"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1932,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1930,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "39151:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1929,
														"name": "IFO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "39147:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFO_$1461_$",
															"typeString": "type(contract IFO)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39147:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFO_$1461",
														"typeString": "contract IFO"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39130:38:0"
											},
											{
												"assignments": [
													1934
												],
												"declarations": [
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "amountUser",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1994,
														"src": "39179:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "39179:18:0"
											},
											{
												"assignments": [
													1937
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "hasUserClaimed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1994,
														"src": "39207:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1936,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "39207:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1938,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "39207:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 1939,
																"name": "amountUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "39264:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1940,
																"name": "hasUserClaimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "39276:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1941,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "39263:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1944,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "39314:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1942,
																"name": "currentIfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "39294:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IFO_$1461",
																	"typeString": "contract IFO"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "userInfo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 982,
															"src": "39294:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_bool_$",
																"typeString": "function (address) view external returns (uint256,bool)"
															}
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39294:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "39263:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "39263:64:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "39356:15:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1948,
																	"name": "hasUserClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "39357:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1950,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39355:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1951,
																	"name": "amountUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "39389:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1952,
																			"name": "ifos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "39402:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																				"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																			}
																		},
																		"id": 1954,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1953,
																			"name": "_contractAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "39407:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "39402:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																			"typeString": "struct PointCenterIFO.IFOs storage ref"
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "thresholdToClaim",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1661,
																	"src": "39402:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39389:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39388:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39355:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1962,
																"name": "_users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "39579:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1964,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1963,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "39586:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "39579:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1966,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1965,
															"name": "_contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "39600:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39579:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1970,
																					"name": "ifos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1643,
																					"src": "39818:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																						"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																					}
																				},
																				"id": 1972,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1971,
																					"name": "_contractAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1922,
																					"src": "39823:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "39818:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																					"typeString": "struct PointCenterIFO.IFOs storage ref"
																				}
																			},
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "campaignId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1663,
																			"src": "39818:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39854:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "39818:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "39817:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1977,
																					"name": "ifos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1643,
																					"src": "39873:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_IFOs_$1666_storage_$",
																						"typeString": "mapping(address => struct PointCenterIFO.IFOs storage ref)"
																					}
																				},
																				"id": 1979,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1978,
																					"name": "_contractAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1922,
																					"src": "39878:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "39873:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_IFOs_$1666_storage",
																					"typeString": "struct PointCenterIFO.IFOs storage ref"
																				}
																			},
																			"id": 1980,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "numberPoints",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1665,
																			"src": "39873:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39911:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "39873:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1983,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "39872:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "39817:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1990,
															"nodeType": "Block",
															"src": "39967:64:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"hexValue": "74727565",
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40016:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"functionReturnParameters": 1926,
																	"id": 1989,
																	"nodeType": "Return",
																	"src": "40009:11:0"
																}
															]
														},
														"id": 1991,
														"nodeType": "IfStatement",
														"src": "39734:297:0",
														"trueBody": {
															"id": 1987,
															"nodeType": "Block",
															"src": "39924:37:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39945:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 1926,
																	"id": 1986,
																	"nodeType": "Return",
																	"src": "39938:12:0"
																}
															]
														}
													},
													"id": 1992,
													"nodeType": "IfStatement",
													"src": "39575:456:0",
													"trueBody": {
														"id": 1969,
														"nodeType": "Block",
														"src": "39619:109:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39712:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 1926,
																"id": 1968,
																"nodeType": "Return",
																"src": "39705:12:0"
															}
														]
													}
												},
												"id": 1993,
												"nodeType": "IfStatement",
												"src": "39338:693:0",
												"trueBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "39453:116:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39553:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1926,
															"id": 1960,
															"nodeType": "Return",
															"src": "39546:12:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkClaimStatus",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "_userAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1995,
												"src": "39016:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "_contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1995,
												"src": "39038:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39015:48:0"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1995,
												"src": "39110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39109:6:0"
									},
									"scope": 1996,
									"src": "38989:1048:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1997,
							"src": "35405:4634:0"
						}
					],
					"src": "149:39890:0"
				},
				"id": 0
			}
		}
	}
}