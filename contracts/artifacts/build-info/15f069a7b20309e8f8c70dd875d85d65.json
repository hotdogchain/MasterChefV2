{
	"id": "15f069a7b20309e8f8c70dd875d85d65",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol": {
				"content": "pragma solidity 0.6.6;\n\n/**\n * @title BlockhashStore\n * @notice This contract provides a way to access blockhashes older than\n *   the 256 block limit imposed by the BLOCKHASH opcode.\n *   You may assume that any blockhash stored by the contract is correct.\n */\ncontract BlockhashStore {\n\n  mapping(uint => bytes32) internal s_blockhashes;\n\n  /**\n   * @notice stores blockhash of a given block, assuming it is available through BLOCKHASH\n   * @param n the number of the block whose blockhash should be stored\n   */\n  function store(uint256 n) public {\n    bytes32 h = blockhash(n);\n    require(h != 0x0, \"blockhash(n) failed\");\n    s_blockhashes[n] = h;\n  }\n\n\n  /**\n   * @notice stores blockhash of the earliest block still available through BLOCKHASH.\n   */\n  function storeEarliest() external {\n    store(block.number - 256);\n  }\n\n  /**\n   * @notice stores blockhash after verifying blockheader of child/subsequent block\n   * @param n the number of the block whose blockhash should be stored\n   * @param header the rlp-encoded blockheader of block n+1. We verify its correctness by checking\n   *   that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash.\n   */\n  function storeVerifyHeader(uint256 n, bytes memory header) public {\n    require(keccak256(header) == s_blockhashes[n + 1], \"header has unknown blockhash\");\n\n    // At this point, we know that header is the correct blockheader for block n+1.\n\n    // The header is an rlp-encoded list. The head item of that list is the 32-byte blockhash of the parent block.\n    // Based on how rlp works, we know that blockheaders always have the following form:\n    // 0xf9____a0PARENTHASH...\n    //   ^ ^   ^\n    //   | |   |\n    //   | |   +--- PARENTHASH is 32 bytes. rlpenc(PARENTHASH) is 0xa || PARENTHASH.\n    //   | |\n    //   | +--- 2 bytes containing the sum of the lengths of the encoded list items\n    //   |\n    //   +--- 0xf9 because we have a list and (sum of lengths of encoded list items) fits exactly into two bytes.\n    //\n    // As a consequence, the PARENTHASH is always at offset 4 of the rlp-encoded block header.\n\n    bytes32 parentHash;\n    assembly {\n      parentHash := mload(add(header, 36)) // 36 = 32 byte offset for length prefix of ABI-encoded array\n                                           //    +  4 byte offset of PARENTHASH (see above)\n    }\n\n    s_blockhashes[n] = parentHash;\n  }\n\n  /**\n   * @notice gets a blockhash from the store. If no hash is known, this function reverts.\n   * @param n the number of the block whose blockhash should be returned\n   */\n  function getBlockhash(uint256 n) external view returns (bytes32) {\n    bytes32 h = s_blockhashes[n];\n    require(h != 0x0, \"blockhash not found in store\");\n    return h;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol": {
				"BlockhashStore": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "getBlockhash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "store",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "storeEarliest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "header",
									"type": "bytes"
								}
							],
							"name": "storeVerifyHeader",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"getBlockhash(uint256)": {
								"params": {
									"n": "the number of the block whose blockhash should be returned"
								}
							},
							"store(uint256)": {
								"params": {
									"n": "the number of the block whose blockhash should be stored"
								}
							},
							"storeVerifyHeader(uint256,bytes)": {
								"params": {
									"header": "the rlp-encoded blockheader of block n+1. We verify its correctness by checking  that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash.",
									"n": "the number of the block whose blockhash should be stored"
								}
							}
						},
						"title": "BlockhashStore"
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":262:2757  contract BlockhashStore {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":262:2757  contract BlockhashStore {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":262:2757  contract BlockhashStore {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":262:2757  contract BlockhashStore {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6057361d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x83b6d6b7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe9413d38\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfadff0e1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":517:657  function store(uint256 n) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_8:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":517:657  function store(uint256 n) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":761:831  function storeEarliest() external {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2582:2755  function getBlockhash(uint256 n) external view returns (bytes32) {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_13:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2582:2755  function getBlockhash(uint256 n) external view returns (bytes32) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n    tag_6:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_16:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_17:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_18:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_19:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":517:657  function store(uint256 n) public {... */\n    tag_9:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":556:565  bytes32 h */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":578:579  n */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":568:580  blockhash(n) */\n      blockhash\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":556:580  bytes32 h = blockhash(n) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":599:602  0x0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":594:602  h != 0x0 */\n      dup1\n      shl\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":594:595  h */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":594:602  h != 0x0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":586:626  require(h != 0x0, \"blockhash(n) failed\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x626c6f636b68617368286e29206661696c656400000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":651:652  h */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":632:645  s_blockhashes */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":632:648  s_blockhashes[n] */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":646:647  n */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":632:648  s_blockhashes[n] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":632:652  s_blockhashes[n] = h */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":517:657  function store(uint256 n) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":761:831  function storeEarliest() external {... */\n    tag_11:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":801:826  store(block.number - 256) */\n      tag_24\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":822:825  256 */\n      0x0100\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":807:819  block.number */\n      number\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":807:825  block.number - 256 */\n      sub\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":801:806  store */\n      tag_9\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":801:826  store(block.number - 256) */\n      jump\t// in\n    tag_24:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":761:831  function storeEarliest() external {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2582:2755  function getBlockhash(uint256 n) external view returns (bytes32) {... */\n    tag_14:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2638:2645  bytes32 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2653:2662  bytes32 h */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2665:2678  s_blockhashes */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2665:2681  s_blockhashes[n] */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2679:2680  n */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2665:2681  s_blockhashes[n] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2653:2681  bytes32 h = s_blockhashes[n] */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2700:2703  0x0 */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2695:2703  h != 0x0 */\n      dup1\n      shl\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2695:2696  h */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2695:2703  h != 0x0 */\n      eq\n      iszero\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2687:2736  require(h != 0x0, \"blockhash not found in store\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x626c6f636b68617368206e6f7420666f756e6420696e2073746f726500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2749:2750  h */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2742:2750  return h */\n      swap2\n      pop\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2582:2755  function getBlockhash(uint256 n) external view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n    tag_20:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1302:1315  s_blockhashes */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1302:1322  s_blockhashes[n + 1] */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1320:1321  1 */\n      0x01\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1316:1317  n */\n      dup5\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1316:1321  n + 1 */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1302:1322  s_blockhashes[n + 1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1291:1297  header */\n      dup2\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1281:1298  keccak256(header) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1281:1322  keccak256(header) == s_blockhashes[n + 1] */\n      eq\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1273:1355  require(keccak256(header) == s_blockhashes[n + 1], \"header has unknown blockhash\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6865616465722068617320756e6b6e6f776e20626c6f636b6861736800000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2126:2144  bytes32 parentHash */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2199:2201  36 */\n      0x24\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2191:2197  header */\n      dup3\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2187:2202  add(header, 36) */\n      add\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2181:2203  mload(add(header, 36)) */\n      mload\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2167:2203  parentHash := mload(add(header, 36)) */\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2388:2398  parentHash */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2369:2382  s_blockhashes */\n      0x00\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2369:2385  s_blockhashes[n] */\n      dup1\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2383:2384  n */\n      dup6\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2369:2385  s_blockhashes[n] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":2369:2398  s_blockhashes[n] = parentHash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":1201:2403  function storeVerifyHeader(uint256 n, bytes memory header) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c81a6399956b3287126a878d7af6870be01ac306c9830ce06ede9715d066575c64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103bf806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636057361d1461005157806383b6d6b71461007f578063e9413d3814610089578063fadff0e1146100cb575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610190565b005b61008761022a565b005b6100b56004803603602081101561009f57600080fd5b8101908080359060200190929190505050610239565b6040518082815260200191505060405180910390f35b61018e600480360360408110156100e157600080fd5b81019080803590602001909291908035906020019064010000000081111561010857600080fd5b82018360208201111561011a57600080fd5b8035906020019184600183028401116401000000008311171561013c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102d3565b005b6000814090506000801b81141561020f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f626c6f636b68617368286e29206661696c65640000000000000000000000000081525060200191505060405180910390fd5b80600080848152602001908152602001600020819055505050565b6102376101004303610190565b565b6000806000808481526020019081526020016000205490506000801b8114156102ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f626c6f636b68617368206e6f7420666f756e6420696e2073746f72650000000081525060200191505060405180910390fd5b80915050919050565b60008060018401815260200190815260200160002054818051906020012014610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6865616465722068617320756e6b6e6f776e20626c6f636b686173680000000081525060200191505060405180910390fd5b600060248201519050806000808581526020019081526020016000208190555050505056fea2646970667358221220c81a6399956b3287126a878d7af6870be01ac306c9830ce06ede9715d066575c64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6057361D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x83B6D6B7 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xE9413D38 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xFADFF0E1 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH2 0x22A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2D3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 BLOCKHASH SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626C6F636B68617368286E29206661696C656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x100 NUMBER SUB PUSH2 0x190 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626C6F636B68617368206E6F7420666F756E6420696E2073746F726500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 ADD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6865616465722068617320756E6B6E6F776E20626C6F636B6861736800000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x24 DUP3 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 BYTE PUSH4 0x99956B32 DUP8 SLT PUSH11 0x878D7AF6870BE01AC306C9 DUP4 0xC 0xE0 PUSH15 0xDE9715D066575C64736F6C63430006 MOD STOP CALLER ",
							"sourceMap": "262:2495:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;262:2495:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80636057361d1461005157806383b6d6b71461007f578063e9413d3814610089578063fadff0e1146100cb575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610190565b005b61008761022a565b005b6100b56004803603602081101561009f57600080fd5b8101908080359060200190929190505050610239565b6040518082815260200191505060405180910390f35b61018e600480360360408110156100e157600080fd5b81019080803590602001909291908035906020019064010000000081111561010857600080fd5b82018360208201111561011a57600080fd5b8035906020019184600183028401116401000000008311171561013c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102d3565b005b6000814090506000801b81141561020f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f626c6f636b68617368286e29206661696c65640000000000000000000000000081525060200191505060405180910390fd5b80600080848152602001908152602001600020819055505050565b6102376101004303610190565b565b6000806000808481526020019081526020016000205490506000801b8114156102ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f626c6f636b68617368206e6f7420666f756e6420696e2073746f72650000000081525060200191505060405180910390fd5b80915050919050565b60008060018401815260200190815260200160002054818051906020012014610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6865616465722068617320756e6b6e6f776e20626c6f636b686173680000000081525060200191505060405180910390fd5b600060248201519050806000808581526020019081526020016000208190555050505056fea2646970667358221220c81a6399956b3287126a878d7af6870be01ac306c9830ce06ede9715d066575c64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6057361D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x83B6D6B7 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xE9413D38 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xFADFF0E1 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH2 0x22A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x2D3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 BLOCKHASH SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626C6F636B68617368286E29206661696C656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x100 NUMBER SUB PUSH2 0x190 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x626C6F636B68617368206E6F7420666F756E6420696E2073746F726500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 ADD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6865616465722068617320756E6B6E6F776E20626C6F636B6861736800000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x24 DUP3 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 BYTE PUSH4 0x99956B32 DUP8 SLT PUSH11 0x878D7AF6870BE01AC306C9 DUP4 0xC 0xE0 PUSH15 0xDE9715D066575C64736F6C63430006 MOD STOP CALLER ",
							"sourceMap": "262:2495:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;262:2495:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;517:140:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;517:140:0;;;;;;;;;;;;;;;;;:::i;:::-;;761:70;;;:::i;:::-;;2582:173;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2582:173:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1201:1202;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1201:1202:0;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1201:1202:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1201:1202:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1201:1202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1201:1202:0;;;;;;;;;;;;;;;:::i;:::-;;517:140;556:9;578:1;568:12;556:24;;599:3;594:8;;:1;:8;;586:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:1;632:13;:16;646:1;632:16;;;;;;;;;;;:20;;;;517:140;;:::o;761:70::-;801:25;822:3;807:12;:18;801:5;:25::i;:::-;761:70::o;2582:173::-;2638:7;2653:9;2665:13;:16;2679:1;2665:16;;;;;;;;;;;;2653:28;;2700:3;2695:8;;:1;:8;;2687:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:1;2742:8;;;2582:173;;;:::o;1201:1202::-;1302:13;:20;1320:1;1316;:5;1302:20;;;;;;;;;;;;1291:6;1281:17;;;;;;:41;1273:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2126:18;2199:2;2191:6;2187:15;2181:22;2167:36;;2388:10;2369:13;:16;2383:1;2369:16;;;;;;;;;;;:29;;;;1201:1202;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "191800",
								"executionCost": "232",
								"totalCost": "192032"
							},
							"external": {
								"getBlockhash(uint256)": "1285",
								"store(uint256)": "20363",
								"storeEarliest()": "20335",
								"storeVerifyHeader(uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 2757,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 2757,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c81a6399956b3287126a878d7af6870be01ac306c9830ce06ede9715d066575c64736f6c63430006060033",
									".code": [
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "6057361D"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "83B6D6B7"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "E9413D38"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "FADFF0E1"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 262,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 517,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 517,
											"end": 657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 831,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 517,
											"end": 657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 556,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 580,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 556,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 556,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 602,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 594,
											"end": 595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 602,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 594,
											"end": 602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "626C6F636B68617368286E29206661696C656400000000000000000000000000"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 586,
											"end": 626,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 632,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 657,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 761,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 822,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 807,
											"end": 825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 801,
											"end": 826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 801,
											"end": 826,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 801,
											"end": 826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 831,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2703,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2695,
											"end": 2703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "626C6F636B68617368206E6F7420666F756E6420696E2073746F726500000000"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2687,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2755,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1316,
											"end": 1317,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1322,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "6865616465722068617320756E6B6E6F776E20626C6F636B6861736800000000"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1273,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2398,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 2403,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBlockhash(uint256)": "e9413d38",
							"store(uint256)": "6057361d",
							"storeEarliest()": "83b6d6b7",
							"storeVerifyHeader(uint256,bytes)": "fadff0e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"getBlockhash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeEarliest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"storeVerifyHeader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getBlockhash(uint256)\":{\"params\":{\"n\":\"the number of the block whose blockhash should be returned\"}},\"store(uint256)\":{\"params\":{\"n\":\"the number of the block whose blockhash should be stored\"}},\"storeVerifyHeader(uint256,bytes)\":{\"params\":{\"header\":\"the rlp-encoded blockheader of block n+1. We verify its correctness by checking  that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash.\",\"n\":\"the number of the block whose blockhash should be stored\"}}},\"title\":\"BlockhashStore\"},\"userdoc\":{\"methods\":{\"getBlockhash(uint256)\":{\"notice\":\"gets a blockhash from the store. If no hash is known, this function reverts.\"},\"store(uint256)\":{\"notice\":\"stores blockhash of a given block, assuming it is available through BLOCKHASH\"},\"storeEarliest()\":{\"notice\":\"stores blockhash of the earliest block still available through BLOCKHASH.\"},\"storeVerifyHeader(uint256,bytes)\":{\"notice\":\"stores blockhash after verifying blockheader of child/subsequent block\"}},\"notice\":\"This contract provides a way to access blockhashes older than  the 256 block limit imposed by the BLOCKHASH opcode.  You may assume that any blockhash stored by the contract is correct.\"}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":\"BlockhashStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol\":{\"keccak256\":\"0xc3e46edc0fa3676b0f42f809ffda4d55835591ef5d3c1bc13f6a6cece8d81d4b\",\"urls\":[\"bzz-raw://d13287088f3647310482e23c6888a8cf83cb058f7d16eb919d05a969a2b8e331\",\"dweb:/ipfs/QmXg5Z8nvVop9RRUcwPCNaVAu4vPU7ZYLnXgcCjD6hdNDr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol:BlockhashStore",
								"label": "s_blockhashes",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_bytes32)"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"getBlockhash(uint256)": {
								"notice": "gets a blockhash from the store. If no hash is known, this function reverts."
							},
							"store(uint256)": {
								"notice": "stores blockhash of a given block, assuming it is available through BLOCKHASH"
							},
							"storeEarliest()": {
								"notice": "stores blockhash of the earliest block still available through BLOCKHASH."
							},
							"storeVerifyHeader(uint256,bytes)": {
								"notice": "stores blockhash after verifying blockheader of child/subsequent block"
							}
						},
						"notice": "This contract provides a way to access blockhashes older than  the 256 block limit imposed by the BLOCKHASH opcode.  You may assume that any blockhash stored by the contract is correct."
					}
				}
			}
		},
		"sources": {
			"Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/MasterChefV2/contracts/BlockhashStore.sol",
					"exportedSymbols": {
						"BlockhashStore": [
							101
						]
					},
					"id": 102,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "24:237:0",
								"text": "@title BlockhashStore\n@notice This contract provides a way to access blockhashes older than\n  the 256 block limit imposed by the BLOCKHASH opcode.\n  You may assume that any blockhash stored by the contract is correct."
							},
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "BlockhashStore",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "s_blockhashes",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 101,
									"src": "291:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 5,
										"keyType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "299:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "291:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueType": {
											"id": 4,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "307:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "550:107:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "h",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 31,
														"src": "556:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 12,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 15,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "578:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 14,
														"name": "blockhash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -5,
														"src": "568:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (uint256) view returns (bytes32)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "568:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "556:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "h",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "594:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"src": "594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "626c6f636b68617368286e29206661696c6564",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "604:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_018c9368d3518fca10542b03ac3f8a0575431fdef701551b9b0b9e98d6f30ce0",
																"typeString": "literal_string \"blockhash(n) failed\""
															},
															"value": "blockhash(n) failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_018c9368d3518fca10542b03ac3f8a0575431fdef701551b9b0b9e98d6f30ce0",
																"typeString": "literal_string \"blockhash(n) failed\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "586:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 25,
															"name": "s_blockhashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "632:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																"typeString": "mapping(uint256 => bytes32)"
															}
														},
														"id": 27,
														"indexExpression": {
															"argumentTypes": null,
															"id": 26,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "646:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "632:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "h",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "632:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "632:20:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "343:171:0",
										"text": "@notice stores blockhash of a given block, assuming it is available through BLOCKHASH\n@param n the number of the block whose blockhash should be stored"
									},
									"functionSelector": "6057361d",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "store",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 32,
												"src": "532:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:11:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:0:0"
									},
									"scope": 101,
									"src": "517:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "795:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 37,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "807:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "807:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "323536",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "822:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "807:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 36,
														"name": "store",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "801:25:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "662:96:0",
										"text": "@notice stores blockhash of the earliest block still available through BLOCKHASH."
									},
									"functionSelector": "83b6d6b7",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeEarliest",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "783:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:0"
									},
									"scope": 101,
									"src": "761:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1267:1136:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 54,
																		"name": "header",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1291:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 53,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "1281:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1281:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 56,
																	"name": "s_blockhashes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1302:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 60,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 57,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1316:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1320:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1316:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1302:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1281:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6865616465722068617320756e6b6e6f776e20626c6f636b68617368",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1324:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e72729aef03ec384bb59db8c3284afd557374d3610d961dcbeb575d1b023635d",
																"typeString": "literal_string \"header has unknown blockhash\""
															},
															"value": "header has unknown blockhash"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e72729aef03ec384bb59db8c3284afd557374d3610d961dcbeb575d1b023635d",
																"typeString": "literal_string \"header has unknown blockhash\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1273:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1273:82:0"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "parentHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 75,
														"src": "2126:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 65,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2126:18:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2159:204:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2167:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "header",
																				"nodeType": "YulIdentifier",
																				"src": "2191:6:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2199:2:0",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2187:15:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2181:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:22:0"
															},
															"variableNames": [
																{
																	"name": "parentHash",
																	"nodeType": "YulIdentifier",
																	"src": "2167:10:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "2191:6:0",
														"valueSize": 1
													},
													{
														"declaration": 66,
														"isOffset": false,
														"isSlot": false,
														"src": "2167:10:0",
														"valueSize": 1
													}
												],
												"id": 68,
												"nodeType": "InlineAssembly",
												"src": "2150:213:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 69,
															"name": "s_blockhashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "2369:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																"typeString": "mapping(uint256 => bytes32)"
															}
														},
														"id": 71,
														"indexExpression": {
															"argumentTypes": null,
															"id": 70,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "2383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2369:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "parentHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "2388:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2369:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "2369:29:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "835:363:0",
										"text": "@notice stores blockhash after verifying blockheader of child/subsequent block\n@param n the number of the block whose blockhash should be stored\n@param header the rlp-encoded blockheader of block n+1. We verify its correctness by checking\n  that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash."
									},
									"functionSelector": "fadff0e1",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeVerifyHeader",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "1228:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "header",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "1239:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 48,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1227:32:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1267:0:0"
									},
									"scope": 101,
									"src": "1201:1202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2647:108:0",
										"statements": [
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "h",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 99,
														"src": "2653:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 84,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 86,
														"name": "s_blockhashes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "2665:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
															"typeString": "mapping(uint256 => bytes32)"
														}
													},
													"id": 88,
													"indexExpression": {
														"argumentTypes": null,
														"id": 87,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "2679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2665:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2653:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "h",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2695:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2700:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"src": "2695:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "626c6f636b68617368206e6f7420666f756e6420696e2073746f7265",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2705:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2ccae2c8323e6d447d0a052ada5f2bb4ed07d4f8197923af250c4609a18b7fd",
																"typeString": "literal_string \"blockhash not found in store\""
															},
															"value": "blockhash not found in store"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2ccae2c8323e6d447d0a052ada5f2bb4ed07d4f8197923af250c4609a18b7fd",
																"typeString": "literal_string \"blockhash not found in store\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2687:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "h",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 85,
													"src": "2749:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 83,
												"id": 98,
												"nodeType": "Return",
												"src": "2742:8:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2407:172:0",
										"text": "@notice gets a blockhash from the store. If no hash is known, this function reverts.\n@param n the number of the block whose blockhash should be returned"
									},
									"functionSelector": "e9413d38",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBlockhash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "n",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2604:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2603:11:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "2638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:9:0"
									},
									"scope": 101,
									"src": "2582:173:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 102,
							"src": "262:2495:0"
						}
					],
					"src": "0:2757:0"
				},
				"id": 0
			}
		}
	}
}