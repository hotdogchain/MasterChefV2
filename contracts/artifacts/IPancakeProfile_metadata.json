{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					}
				],
				"name": "addNftAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "addTeam",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_newTeamId",
						"type": "uint256"
					}
				],
				"name": "changeTeam",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "claimFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_teamId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "createProfile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_teamId",
						"type": "uint256"
					}
				],
				"name": "getTeamProfile",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					}
				],
				"name": "getUserProfile",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					}
				],
				"name": "getUserStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_teamId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_numberPoints",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_campaignId",
						"type": "uint256"
					}
				],
				"name": "increaseTeamPoints",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_numberPoints",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_campaignId",
						"type": "uint256"
					}
				],
				"name": "increaseUserPoints",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_userAddresses",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_numberPoints",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_campaignId",
						"type": "uint256"
					}
				],
				"name": "increaseUserPointsMultiple",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_teamId",
						"type": "uint256"
					}
				],
				"name": "makeTeamJoinable",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_teamId",
						"type": "uint256"
					}
				],
				"name": "makeTeamNotJoinable",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pauseProfile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "reactivateProfile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_teamId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_numberPoints",
						"type": "uint256"
					}
				],
				"name": "removeTeamPoints",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_numberPoints",
						"type": "uint256"
					}
				],
				"name": "removeUserPoints",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_userAddresses",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_numberPoints",
						"type": "uint256"
					}
				],
				"name": "removeUserPointsMultiple",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renameTeam",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateNumberCake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateProfile",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addNftAddress(address)": {
					"details": "To add a NFT contract address for users to set their profile. Callable only by owner admins."
				},
				"addTeam()": {
					"details": "Add a new teamId Callable only by owner admins."
				},
				"changeTeam(address,uint256)": {
					"details": "Function to change team. Callable only by special admins."
				},
				"claimFee(uint256)": {
					"details": "Claim CAKE to burn later. Callable only by owner admins."
				},
				"getTeamProfile(uint256)": {
					"details": "Check a team's profile"
				},
				"getUserProfile(address)": {
					"details": "Check the user's profile for a given address"
				},
				"getUserStatus(address)": {
					"details": "Check the user's status for a given address"
				},
				"increaseTeamPoints(uint256,uint256,uint256)": {
					"details": "To increase the number of points for a team. Callable only by point admins"
				},
				"increaseUserPoints(address,uint256,uint256)": {
					"details": "To increase the number of points for a user. Callable only by point admins"
				},
				"increaseUserPointsMultiple(address[],uint256,uint256)": {
					"details": "To increase the number of points for a set of users. Callable only by point admins"
				},
				"makeTeamJoinable(uint256)": {
					"details": "Make a team joinable again. Callable only by owner admins."
				},
				"makeTeamNotJoinable(uint256)": {
					"details": "Make a team not joinable. Callable only by owner admins."
				},
				"pauseProfile()": {
					"details": "To pause user profile. It releases the NFT. Callable only by registered users."
				},
				"reactivateProfile(address,uint256)": {
					"details": "To reactivate user profile. Callable only by registered users."
				},
				"removeTeamPoints(uint256,uint256)": {
					"details": "To remove the number of points for a team. Callable only by point admins"
				},
				"removeUserPoints(address,uint256)": {
					"details": "To remove the number of points for a user. Callable only by point admins"
				},
				"removeUserPointsMultiple(address[],uint256)": {
					"details": "To remove a set number of points for a set of users."
				},
				"renameTeam()": {
					"details": "Rename a team Callable only by owner admins."
				},
				"updateNumberCake()": {
					"details": "Update the number of CAKE to register Callable only by owner admins."
				},
				"updateProfile()": {
					"details": "To update user profile. Callable only by registered users."
				}
			},
			"title": "IPancakeProfile.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Users/leilei/Downloads/MasterChefV2/contracts/TradingCompV1.sol": "IPancakeProfile"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Users/leilei/Downloads/MasterChefV2/contracts/TradingCompV1.sol": {
			"keccak256": "0x91aedbf141697f1d112f95ab6319a9af9ee8800d221946955e4f239154f71d5d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4bcb628009e1cbb4d85e2280efe93e447765ed180302fa94143a22628cc26369",
				"dweb:/ipfs/QmRYVBXPUeBGGiEFEp1D6LUoSvksyop7RL33TwDuM9Cbuj"
			]
		}
	},
	"version": 1
}